[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-01-27T15:24:43.653Z",
        "line": 11,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1856000300,
              "status": "passed"
            },
            "line": 4,
            "name": "Skills User with  username \u0026 password from \"Skills_Authorization\" and 0 is on Endpoint: url/Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 43
                },
                {
                  "val": "0",
                  "offset": 70
                }
              ],
              "location": "step_definition.SkillMaster.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 853008100,
              "status": "passed"
            },
            "line": 5,
            "name": "skills User sends GET request",
            "match": {
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skills()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 201999500,
              "status": "passed"
            },
            "line": 6,
            "name": "Skills User Checks for StatusCode StatusCode and StatusMessage from \"Skills_Authorization\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 68
                },
                {
                  "val": "0",
                  "offset": 101
                }
              ],
              "location": "step_definition.SkillMaster.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:46.991Z",
        "line": 12,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 205003200,
              "status": "passed"
            },
            "line": 4,
            "name": "Skills User with  username \u0026 password from \"Skills_Authorization\" and 1 is on Endpoint: url/Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 43
                },
                {
                  "val": "1",
                  "offset": 70
                }
              ],
              "location": "step_definition.SkillMaster.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24999800,
              "status": "passed"
            },
            "line": 5,
            "name": "skills User sends GET request",
            "match": {
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skills()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 166995600,
              "status": "passed"
            },
            "line": 6,
            "name": "Skills User Checks for StatusCode StatusCode and StatusMessage from \"Skills_Authorization\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 68
                },
                {
                  "val": "1",
                  "offset": 101
                }
              ],
              "location": "step_definition.SkillMaster.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:47.438Z",
        "line": 13,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 127002100,
              "status": "passed"
            },
            "line": 4,
            "name": "Skills User with  username \u0026 password from \"Skills_Authorization\" and 2 is on Endpoint: url/Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 43
                },
                {
                  "val": "2",
                  "offset": 70
                }
              ],
              "location": "step_definition.SkillMaster.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19000100,
              "status": "passed"
            },
            "line": 5,
            "name": "skills User sends GET request",
            "match": {
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skills()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 119999900,
              "status": "passed"
            },
            "line": 6,
            "name": "Skills User Checks for StatusCode StatusCode and StatusMessage from \"Skills_Authorization\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 68
                },
                {
                  "val": "2",
                  "offset": 101
                }
              ],
              "location": "step_definition.SkillMaster.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:47.756Z",
        "line": 14,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 103998900,
              "status": "passed"
            },
            "line": 4,
            "name": "Skills User with  username \u0026 password from \"Skills_Authorization\" and 3 is on Endpoint: url/Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 43
                },
                {
                  "val": "3",
                  "offset": 70
                }
              ],
              "location": "step_definition.SkillMaster.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40994500,
              "status": "passed"
            },
            "line": 5,
            "name": "skills User sends GET request",
            "match": {
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skills()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 131001000,
              "status": "passed"
            },
            "line": 6,
            "name": "Skills User Checks for StatusCode StatusCode and StatusMessage from \"Skills_Authorization\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 68
                },
                {
                  "val": "3",
                  "offset": 101
                }
              ],
              "location": "step_definition.SkillMaster.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Check the Authorization for LMS API",
    "description": "",
    "id": "check-the-authorization-for-lms-api",
    "keyword": "Feature",
    "uri": "file:src/test/resources/skillMaster.feature/SkillMaster_Authorization.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6020900,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:48.084Z",
        "line": 12,
        "name": "Validate DELETE Skills when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-delete-method-for-skills;validate-delete-skills-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 193994300,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends DELETE skill id ON DELETE Method from \"Skills_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 56
                },
                {
                  "val": "0",
                  "offset": 74
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_delete_skill_id_on_delete_method_from_and_row_number(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 385001900,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_DELETE\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 86
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 109002500,
              "status": "passed"
            },
            "line": 8,
            "name": "skills User checks the Database to validate deletion from \"Skills_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 82
                }
              ],
              "location": "step_definition.SkillMaster.skills_user_check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2998300,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:48.847Z",
        "line": 13,
        "name": "Validate DELETE Skills when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-delete-method-for-skills;validate-delete-skills-when-user-logged-with-username-with-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 132005800,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends DELETE skill id ON DELETE Method from \"Skills_DELETE\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 56
                },
                {
                  "val": "1",
                  "offset": 76
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_delete_skill_id_on_delete_method_from_and_row_number(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 100002100,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_DELETE\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 86
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 91995900,
              "status": "passed"
            },
            "line": 8,
            "name": "skills User checks the Database to validate deletion from \"Skills_DELETE\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.skills_user_check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4000700,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:49.224Z",
        "line": 14,
        "name": "Validate DELETE Skills when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-delete-method-for-skills;validate-delete-skills-when-user-logged-with-username-with-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 107994200,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends DELETE skill id ON DELETE Method from \"Skills_DELETE\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 56
                },
                {
                  "val": "2",
                  "offset": 76
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_delete_skill_id_on_delete_method_from_and_row_number(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 77005900,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_DELETE\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 86
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 81998300,
              "status": "passed"
            },
            "line": 8,
            "name": "skills User checks the Database to validate deletion from \"Skills_DELETE\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.skills_user_check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3002300,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:49.541Z",
        "line": 15,
        "name": "Validate DELETE Skills when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-delete-method-for-skills;validate-delete-skills-when-user-logged-with-username-with-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 104999900,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends DELETE skill id ON DELETE Method from \"Skills_DELETE\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 56
                },
                {
                  "val": "3",
                  "offset": 76
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_delete_skill_id_on_delete_method_from_and_row_number(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 121005900,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_DELETE\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 86
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 161999400,
              "status": "passed"
            },
            "line": 8,
            "name": "skills User checks the Database to validate deletion from \"Skills_DELETE\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "3",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.skills_user_check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4002300,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:50.024Z",
        "line": 16,
        "name": "Validate DELETE Skills when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-delete-method-for-skills;validate-delete-skills-when-user-logged-with-username-with-password;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 313003700,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends DELETE skill id ON DELETE Method from \"Skills_DELETE\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 56
                },
                {
                  "val": "4",
                  "offset": 76
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_delete_skill_id_on_delete_method_from_and_row_number(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "com.fasterxml.jackson.core.JsonParseException: Unexpected character (\u0027\u003c\u0027 (code 60)): expected a valid value (JSON String, Number, Array, Object or token \u0027null\u0027, \u0027true\u0027 or \u0027false\u0027)\n at [Source: (String)\"\u003c!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"\u003e\n\u003ctitle\u003e404 Not Found\u003c/title\u003e\n\u003ch1\u003eNot Found\u003c/h1\u003e\n\u003cp\u003eThe requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.\u003c/p\u003e\n\"; line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2005)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:802)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4762)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4668)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3630)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3598)\r\n\tat step_definition.SkillMaster.extractResponse(SkillMaster.java:305)\r\n\tat step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:291)\r\n\tat ✽.skills User validates the StatusCode and StatusMessage from \"Skills_DELETE\" sheet and 4 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_DELETE.feature:7)\r\n",
              "duration": 100004000,
              "status": "failed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_DELETE\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 86
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "skills User checks the Database to validate deletion from \"Skills_DELETE\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "4",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.skills_user_check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The DELETE method for Skills",
    "description": "",
    "id": "to-check-the-delete-method-for-skills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/skillMaster.feature/SkillMaster_DELETE.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:50.586Z",
        "line": 5,
        "name": "Verify GET all Skills for Skill Master",
        "description": "",
        "id": "to-check-the-get-method-for-skills;verify-get-all-skills-for-skill-master",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "error_message": "java.net.URISyntaxException: Illegal character in path at index 29: http://127.0.0.1:5000/Skills/    \r\n\tat java.base/java.net.URI$Parser.fail(URI.java:2913)\r\n\tat java.base/java.net.URI$Parser.checkChars(URI.java:3084)\r\n\tat java.base/java.net.URI$Parser.parseHierarchical(URI.java:3166)\r\n\tat java.base/java.net.URI$Parser.parse(URI.java:3114)\r\n\tat java.base/java.net.URI.\u003cinit\u003e(URI.java:600)\r\n\tat java.base/jdk.internal.reflect.GeneratedConstructorAccessor50.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)\r\n\tat io.restassured.internal.RequestSpecificationImpl.getTargetPath(RequestSpecificationImpl.groovy:1452)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)\r\n\tat io.restassured.internal.RequestSpecificationImpl.getPathParamPlaceholders(RequestSpecificationImpl.groovy:2063)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor176.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:161)\r\n\tat io.restassured.internal.RequestSpecificationImpl.getRedundantNamedPathParams(RequestSpecificationImpl.groovy:2329)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:161)\r\n\tat io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1300)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:161)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1228)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:152)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1749)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1755)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:171)\r\n\tat io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)\r\n\tat util.Send_Request_For_Method.Sent_request(Send_Request_For_Method.java:237)\r\n\tat step_definition.SkillMaster.user_sends_get_request_on_skills(SkillMaster.java:75)\r\n\tat ✽.skills User sends GET request(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_GET.feature:6)\r\n",
              "duration": 9010900,
              "status": "failed"
            },
            "line": 6,
            "name": "skills User sends GET request",
            "match": {
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skills()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4998900,
              "status": "skipped"
            },
            "line": 7,
            "name": "skills User validates StatusCode",
            "match": {
              "location": "step_definition.SkillMaster.user_validates_the_status_code()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999700,
              "status": "skipped"
            },
            "line": 8,
            "name": "skills JSON schema is valid",
            "match": {
              "location": "step_definition.SkillMaster.json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 33027900,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:50.761Z",
        "line": 19,
        "name": "Validate Skills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-skills;validate-skills-api-with-specific-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 115996300,
              "status": "passed"
            },
            "line": 12,
            "name": "User sends GET request on skill id from \"Skills_GET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 40
                },
                {
                  "val": "0",
                  "offset": 57
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skill_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 109004200,
              "status": "passed"
            },
            "line": 13,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 405005200,
              "status": "passed"
            },
            "line": 14,
            "name": "JSON schema is valid for \"GET\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85001400,
              "status": "passed"
            },
            "line": 15,
            "name": "skills User should receive the skill in JSON body from \"Skills_GET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 55
                },
                {
                  "val": "0",
                  "offset": 72
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [8] but found [4]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:453)\r\n\tat org.testng.Assert.assertEquals(Assert.java:463)\r\n\tat step_definition.SkillMaster.check_the_database_for_all_skills(SkillMaster.java:350)\r\n\tat ✽.check the Database for skills(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_GET.feature:16)\r\n",
              "duration": 633000100,
              "status": "failed"
            },
            "line": 16,
            "name": "check the Database for skills",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database_for_all_skills()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2998400,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:52.198Z",
        "line": 20,
        "name": "Validate Skills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-skills;validate-skills-api-with-specific-id;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 185999400,
              "status": "passed"
            },
            "line": 12,
            "name": "User sends GET request on skill id from \"Skills_GET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 40
                },
                {
                  "val": "1",
                  "offset": 57
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skill_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 174005800,
              "status": "passed"
            },
            "line": 13,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003900,
              "status": "passed"
            },
            "line": 14,
            "name": "JSON schema is valid for \"GET\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 207995200,
              "status": "passed"
            },
            "line": 15,
            "name": "skills User should receive the skill in JSON body from \"Skills_GET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 55
                },
                {
                  "val": "1",
                  "offset": 72
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 358003700,
              "status": "passed"
            },
            "line": 16,
            "name": "check the Database for skills",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database_for_all_skills()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3000400,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:53.175Z",
        "line": 21,
        "name": "Validate Skills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-skills;validate-skills-api-with-specific-id;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 84997700,
              "status": "passed"
            },
            "line": 12,
            "name": "User sends GET request on skill id from \"Skills_GET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 40
                },
                {
                  "val": "2",
                  "offset": 57
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skill_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 71995900,
              "status": "passed"
            },
            "line": 13,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "JSON schema is valid for \"GET\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85999200,
              "status": "passed"
            },
            "line": 15,
            "name": "skills User should receive the skill in JSON body from \"Skills_GET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 55
                },
                {
                  "val": "2",
                  "offset": 72
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 326001200,
              "status": "passed"
            },
            "line": 16,
            "name": "check the Database for skills",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database_for_all_skills()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3008600,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:53.785Z",
        "line": 22,
        "name": "Validate Skills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-skills;validate-skills-api-with-specific-id;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 92993700,
              "status": "passed"
            },
            "line": 12,
            "name": "User sends GET request on skill id from \"Skills_GET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 40
                },
                {
                  "val": "3",
                  "offset": 57
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skill_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 102003400,
              "status": "passed"
            },
            "line": 13,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999000,
              "status": "passed"
            },
            "line": 14,
            "name": "JSON schema is valid for \"GET\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81999200,
              "status": "passed"
            },
            "line": 15,
            "name": "skills User should receive the skill in JSON body from \"Skills_GET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 55
                },
                {
                  "val": "3",
                  "offset": 72
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 380996200,
              "status": "passed"
            },
            "line": 16,
            "name": "check the Database for skills",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database_for_all_skills()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1998600,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:54.489Z",
        "line": 23,
        "name": "Validate Skills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-skills;validate-skills-api-with-specific-id;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 92003400,
              "status": "passed"
            },
            "line": 12,
            "name": "User sends GET request on skill id from \"Skills_GET\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 40
                },
                {
                  "val": "4",
                  "offset": 57
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skill_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 74001900,
              "status": "passed"
            },
            "line": 13,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000200,
              "status": "passed"
            },
            "line": 14,
            "name": "JSON schema is valid for \"GET\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69999200,
              "status": "passed"
            },
            "line": 15,
            "name": "skills User should receive the skill in JSON body from \"Skills_GET\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 55
                },
                {
                  "val": "4",
                  "offset": 72
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 325003900,
              "status": "passed"
            },
            "line": 16,
            "name": "check the Database for skills",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database_for_all_skills()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6995700,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:55.098Z",
        "line": 24,
        "name": "Validate Skills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-skills;validate-skills-api-with-specific-id;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 86996100,
              "status": "passed"
            },
            "line": 12,
            "name": "User sends GET request on skill id from \"Skills_GET\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 40
                },
                {
                  "val": "5",
                  "offset": 57
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skill_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "com.fasterxml.jackson.core.JsonParseException: Unexpected character (\u0027\u003c\u0027 (code 60)): expected a valid value (JSON String, Number, Array, Object or token \u0027null\u0027, \u0027true\u0027 or \u0027false\u0027)\n at [Source: (String)\"\u003c!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"\u003e\n\u003ctitle\u003e404 Not Found\u003c/title\u003e\n\u003ch1\u003eNot Found\u003c/h1\u003e\n\u003cp\u003eThe requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.\u003c/p\u003e\n\"; line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2005)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:802)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4762)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4668)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3630)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3598)\r\n\tat step_definition.SkillMaster.extractResponse(SkillMaster.java:305)\r\n\tat step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:291)\r\n\tat ✽.skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 5 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_GET.feature:13)\r\n",
              "duration": 63997300,
              "status": "failed"
            },
            "line": 13,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 60
                },
                {
                  "val": "5",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001900,
              "status": "skipped"
            },
            "line": 14,
            "name": "JSON schema is valid for \"GET\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1001500,
              "status": "skipped"
            },
            "line": 15,
            "name": "skills User should receive the skill in JSON body from \"Skills_GET\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 55
                },
                {
                  "val": "5",
                  "offset": 72
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "check the Database for skills",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database_for_all_skills()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The GET method for Skills",
    "description": "",
    "id": "to-check-the-get-method-for-skills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/skillMaster.feature/SkillMaster_GET.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2998900,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:55.304Z",
        "line": 13,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 361004400,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "0",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 81000200,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12001900,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93998900,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "0",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 388999900,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3004400,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:56.293Z",
        "line": 14,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 84002800,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 1 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "1",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 70000000,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1004200,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 66000400,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "1",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9002800,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 24001300,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:56.585Z",
        "line": 15,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 98001800,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 2 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "2",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 71997600,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77015300,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "2",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003900,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2001900,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:56.896Z",
        "line": 16,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 103000700,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 3 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "3",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 185002000,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 129997400,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "3",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1004900,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2002400,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:57.360Z",
        "line": 17,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 165998600,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 4 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "4",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 98000700,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1982000,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 117998700,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "4",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3007200,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1998200,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:57.801Z",
        "line": 18,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 89998200,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 5 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "5",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 239001200,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "5",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1998300,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 183004400,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "5",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 998000,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2998300,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:58.374Z",
        "line": 19,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 207001900,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 6 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "6",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 128001800,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 6 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "6",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 42998900,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77014700,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 6",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "6",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 379996300,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1999300,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:59.256Z",
        "line": 20,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 126998800,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 7 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "7",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:289)\r\n\tat ✽.skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 7 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_POST.feature:7)\r\n",
              "duration": 58997000,
              "status": "failed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 7 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "7",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001200,
              "status": "skipped"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 7",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "7",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3996100,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:59.484Z",
        "line": 28,
        "name": "Verify if POST fails for improper format when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-if-post-fails-for-improper-format-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 71989600,
              "status": "passed"
            },
            "line": 23,
            "name": "skills User sends POST request body in text format skills from \"Text_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Text_POST\"",
                  "offset": 63
                },
                {
                  "val": "0",
                  "offset": 79
                }
              ],
              "location": "step_definition.SkillMaster.skills_User_sends_POST_request_body_in_text_format_skills_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62000900,
              "status": "passed"
            },
            "line": 24,
            "name": "skills User validates the StatusCode and StatusMessage from \"Text_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Text_POST\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 82
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001500,
              "status": "passed"
            },
            "line": 25,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5996200,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:59.690Z",
        "line": 40,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat util.ExcelReader.readSheet(ExcelReader.java:58)\r\n\tat util.ExcelReader.getData(ExcelReader.java:28)\r\n\tat util.Send_Request_For_Method.Sent_request(Send_Request_For_Method.java:89)\r\n\tat step_definition.SkillMaster.user_sends_POST_request_body_from_and(SkillMaster.java:100)\r\n\tat ✽.skills User sends POST request body in skills from \"Invalid_content_POST\" and 0 with valid JSON Schema(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_POST.feature:33)\r\n",
              "duration": 92001100,
              "status": "failed"
            },
            "line": 33,
            "name": "skills User sends POST request body in skills from \"Invalid_content_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_content_POST\"",
                  "offset": 51
                },
                {
                  "val": "0",
                  "offset": 78
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1004100,
              "status": "skipped"
            },
            "line": 34,
            "name": "skills User validates the StatusCode and StatusMessage from \"Invalid_content_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_content_POST\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 93
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1998100,
              "status": "skipped"
            },
            "line": 35,
            "name": "skills User should receive the skill in JSON body from \"Invalid_content_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_content_POST\"",
                  "offset": 55
                },
                {
                  "val": "0",
                  "offset": 82
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The POST method for Skills",
    "description": "",
    "id": "to-check-the-post-method-for-skills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/skillMaster.feature/SkillMaster_POST.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2996800,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:24:59.878Z",
        "line": 12,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 231999900,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "0",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 61998300,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6003900,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 345001900,
              "status": "passed"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:00.640Z",
        "line": 13,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 164000000,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 1 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "1",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 70005100,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000800,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1002800,
              "status": "passed"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1996900,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:00.910Z",
        "line": 14,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 159002800,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 2 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "2",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 69003300,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000300,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 994600,
              "status": "passed"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2000600,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:01.179Z",
        "line": 15,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 115004500,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 3 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "3",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 50001600,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1001200,
              "status": "passed"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1995400,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:01.374Z",
        "line": 16,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 126002500,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 4 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "4",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "com.fasterxml.jackson.core.JsonParseException: Unexpected character (\u0027\u003c\u0027 (code 60)): expected a valid value (JSON String, Number, Array, Object or token \u0027null\u0027, \u0027true\u0027 or \u0027false\u0027)\n at [Source: (String)\"\u003c!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"\u003e\n\u003ctitle\u003e404 Not Found\u003c/title\u003e\n\u003ch1\u003eNot Found\u003c/h1\u003e\n\u003cp\u003eThe requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.\u003c/p\u003e\n\"; line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2005)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:802)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4762)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4668)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3630)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3598)\r\n\tat step_definition.SkillMaster.extractResponse(SkillMaster.java:305)\r\n\tat step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:291)\r\n\tat ✽.skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 4 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_PUT.feature:7)\r\n",
              "duration": 52998700,
              "status": "failed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1002200,
              "status": "skipped"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2999800,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:01.599Z",
        "line": 17,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 153000000,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 5 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "5",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 80004200,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "5",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003900,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000100,
              "status": "passed"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3996400,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:01.909Z",
        "line": 18,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 352997800,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 6 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "6",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 86002200,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 6 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "6",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003100,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2996700,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:02.465Z",
        "line": 19,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 218999700,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 7 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "7",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:289)\r\n\tat ✽.skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 7 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_PUT.feature:7)\r\n",
              "duration": 73002500,
              "status": "failed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 7 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "7",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 997700,
              "status": "skipped"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5001600,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:02.811Z",
        "line": 20,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 184000600,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 8 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "8",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [201] but found [404]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:289)\r\n\tat ✽.skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 8 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_PUT.feature:7)\r\n",
              "duration": 54999700,
              "status": "failed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 8 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "8",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1002900,
              "status": "skipped"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2000600,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:03.095Z",
        "line": 29,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 159004300,
              "status": "passed"
            },
            "line": 24,
            "name": "skills User sends PUT request on id and request body in skills from \"Invalid_content_PUT\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_content_PUT\"",
                  "offset": 68
                },
                {
                  "val": "0",
                  "offset": 94
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 69000700,
              "status": "passed"
            },
            "line": 25,
            "name": "skills User validates the StatusCode and StatusMessage from \"Invalid_content_PUT\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_content_PUT\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 92
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000500,
              "status": "passed"
            },
            "line": 26,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1997800,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:03.369Z",
        "line": 39,
        "name": "Verify PUT fails for a Skill with improper format when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-fails-for-a-skill-with-improper-format-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 159001500,
              "status": "passed"
            },
            "line": 33,
            "name": "skills User sends PUT request on id and request body in text format skills from \"Text_PUT\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Text_PUT\"",
                  "offset": 80
                },
                {
                  "val": "0",
                  "offset": 95
                }
              ],
              "location": "step_definition.SkillMaster.skills_User_sends_PUT_request_body_in_text_format_skills_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 91000400,
              "status": "passed"
            },
            "line": 34,
            "name": "skills User validates the StatusCode and StatusMessage from \"Text_PUT\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Text_PUT\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 81
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 81998400,
              "status": "passed"
            },
            "line": 35,
            "name": "skills User should receive the skill in JSON body from \"Text_PUT\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Text_PUT\"",
                  "offset": 55
                },
                {
                  "val": "0",
                  "offset": 70
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1001800,
              "status": "passed"
            },
            "line": 36,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The PUT method for Skills",
    "description": "",
    "id": "to-check-the-put-method-for-skills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/skillMaster.feature/SkillMaster_PUT.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-01-27T15:25:03.751Z",
        "line": 11,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 116001500,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkill User with  username \u0026 password from \"UserSkills_Authorization\" and 0 is on Endpoint: url/UserSkills",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 46
                },
                {
                  "val": "0",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.user_skill_user_with_username_password_from_and_is_on_endpoint_url_user_skills(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12999700,
              "status": "passed"
            },
            "line": 5,
            "name": "userSkills User sends GET request",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_sends_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 61999000,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User Checks for StatusCode StatusCode and StatusMessage from \"UserSkills_Authorization\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 72
                },
                {
                  "val": "0",
                  "offset": 109
                }
              ],
              "location": "step_definition.UserSkills.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:04.007Z",
        "line": 12,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 80997900,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkill User with  username \u0026 password from \"UserSkills_Authorization\" and 1 is on Endpoint: url/UserSkills",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 46
                },
                {
                  "val": "1",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.user_skill_user_with_username_password_from_and_is_on_endpoint_url_user_skills(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21998900,
              "status": "passed"
            },
            "line": 5,
            "name": "userSkills User sends GET request",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_sends_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 70999800,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User Checks for StatusCode StatusCode and StatusMessage from \"UserSkills_Authorization\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 72
                },
                {
                  "val": "1",
                  "offset": 109
                }
              ],
              "location": "step_definition.UserSkills.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:04.236Z",
        "line": 13,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 91001200,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkill User with  username \u0026 password from \"UserSkills_Authorization\" and 2 is on Endpoint: url/UserSkills",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 46
                },
                {
                  "val": "2",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.user_skill_user_with_username_password_from_and_is_on_endpoint_url_user_skills(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22995500,
              "status": "passed"
            },
            "line": 5,
            "name": "userSkills User sends GET request",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_sends_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 63003200,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User Checks for StatusCode StatusCode and StatusMessage from \"UserSkills_Authorization\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 72
                },
                {
                  "val": "2",
                  "offset": 109
                }
              ],
              "location": "step_definition.UserSkills.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:04.450Z",
        "line": 14,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 60997700,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkill User with  username \u0026 password from \"UserSkills_Authorization\" and 3 is on Endpoint: url/UserSkills",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 46
                },
                {
                  "val": "3",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.user_skill_user_with_username_password_from_and_is_on_endpoint_url_user_skills(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16001100,
              "status": "passed"
            },
            "line": 5,
            "name": "userSkills User sends GET request",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_sends_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53000300,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User Checks for StatusCode StatusCode and StatusMessage from \"UserSkills_Authorization\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 72
                },
                {
                  "val": "3",
                  "offset": 109
                }
              ],
              "location": "step_definition.UserSkills.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Check the Authorization for LMS API",
    "description": "",
    "id": "check-the-authorization-for-lms-api",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkills.feature/UserSkills_Authorization.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1999000,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:04.610Z",
        "line": 12,
        "name": "Validate the delete method for UserSkills",
        "description": "",
        "id": "delete-user-skills-details;validate-the-delete-method-for-userskills;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 71002200,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends request id ON DELETE Method from \"InputData_UserSkills_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 55
                },
                {
                  "val": "0",
                  "offset": 87
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_on_DELETE_method(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 71999600,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_DELETE\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 100
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 363003300,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills users check the Database to validate deletion from \"InputData_UserSkills_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 62
                },
                {
                  "val": "0",
                  "offset": 100
                }
              ],
              "location": "step_definition.UserSkills.check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1999900,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:05.147Z",
        "line": 13,
        "name": "Validate the delete method for UserSkills",
        "description": "",
        "id": "delete-user-skills-details;validate-the-delete-method-for-userskills;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 63000400,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends request id ON DELETE Method from \"InputData_UserSkills_DELETE\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 55
                },
                {
                  "val": "1",
                  "offset": 89
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_on_DELETE_method(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34998800,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_DELETE\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 100
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 379002200,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills users check the Database to validate deletion from \"InputData_UserSkills_DELETE\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 62
                },
                {
                  "val": "1",
                  "offset": 102
                }
              ],
              "location": "step_definition.UserSkills.check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1999600,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:05.663Z",
        "line": 14,
        "name": "Validate the delete method for UserSkills",
        "description": "",
        "id": "delete-user-skills-details;validate-the-delete-method-for-userskills;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 49001500,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends request id ON DELETE Method from \"InputData_UserSkills_DELETE\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 55
                },
                {
                  "val": "2",
                  "offset": 89
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_on_DELETE_method(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 51997500,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_DELETE\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 100
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 417008600,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills users check the Database to validate deletion from \"InputData_UserSkills_DELETE\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 62
                },
                {
                  "val": "2",
                  "offset": 102
                }
              ],
              "location": "step_definition.UserSkills.check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2997800,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:06.210Z",
        "line": 15,
        "name": "Validate the delete method for UserSkills",
        "description": "",
        "id": "delete-user-skills-details;validate-the-delete-method-for-userskills;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 53001000,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends request id ON DELETE Method from \"InputData_UserSkills_DELETE\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 55
                },
                {
                  "val": "3",
                  "offset": 89
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_on_DELETE_method(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34000900,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_DELETE\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 100
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 381997200,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills users check the Database to validate deletion from \"InputData_UserSkills_DELETE\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 62
                },
                {
                  "val": "3",
                  "offset": 102
                }
              ],
              "location": "step_definition.UserSkills.check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2999400,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:06.709Z",
        "line": 16,
        "name": "Validate the delete method for UserSkills",
        "description": "",
        "id": "delete-user-skills-details;validate-the-delete-method-for-userskills;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 60003000,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends request id ON DELETE Method from \"InputData_UserSkills_DELETE\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 55
                },
                {
                  "val": "4",
                  "offset": 89
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_on_DELETE_method(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected object to not be null\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:686)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:671)\r\n\tat step_definition.UserSkills.userSkills_user_receives_status_code_with(UserSkills.java:258)\r\n\tat ✽.userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_DELETE\" sheet and 4 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/userSkills.feature/UserSkills_DELETE.feature:7)\r\n",
              "duration": 49996900,
              "status": "failed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_DELETE\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 100
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "userSkills users check the Database to validate deletion from \"InputData_UserSkills_DELETE\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 62
                },
                {
                  "val": "4",
                  "offset": 102
                }
              ],
              "location": "step_definition.UserSkills.check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Delete user skills details",
    "description": "",
    "id": "delete-user-skills-details",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkills.feature/UserSkills_DELETE.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2995200,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:06.855Z",
        "line": 4,
        "name": "Validate GET all UserSkills",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-get-all-userskills",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12998200,
              "status": "passed"
            },
            "line": 5,
            "name": "userSkills User sends GET request",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_sends_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1003700,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User validates StatusCode",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nResponse body doesn\u0027t match expectation.\nExpected: The content to match the given JSON schema.\nerror: instance type (string) does not match any allowed primitive type (allowed: [\"integer\"])\n    level: \"error\"\n    schema: {\"loadingURI\":\"file:/C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/target/test-classes/JSON_Schemas/user_skill_schema_GET_all.json#\",\"pointer\":\"/properties/UserSkillMapping/items/0/properties/Skill_id\"}\n    instance: {\"pointer\":\"/UserSkillMapping/0/Skill_id\"}\n    domain: \"validation\"\n    keyword: \"type\"\n    found: \"string\"\n    expected: [\"integer\"]\nerror: instance type (string) does not match any allowed primitive type (allowed: [\"integer\"])\n    level: \"error\"\n    schema: {\"loadingURI\":\"file:/C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/target/test-classes/JSON_Schemas/user_skill_schema_GET_all.json#\",\"pointer\":\"/properties/UserSkillMapping/items/0/properties/months_of_exp\"}\n    instance: {\"pointer\":\"/UserSkillMapping/0/months_of_exp\"}\n    domain: \"validation\"\n    keyword: \"type\"\n    found: \"string\"\n    expected: [\"integer\"]\n\n  Actual: {\n    \"UserSkillMapping\": [\n        {\n            \"user_skill_id\": \"US01\",\n            \"user_id\": \"U01\",\n            \"Skill_id\": \"2\",\n            \"months_of_exp\": \"24\"\n        },\n        {\n            \"user_skill_id\": \"US02\",\n            \"user_id\": \"U02\",\n            \"Skill_id\": \"1\",\n            \"months_of_exp\": \"36\"\n        },\n        {\n            \"user_skill_id\": \"US03\",\n            \"user_id\": \"U03\",\n            \"Skill_id\": \"2\",\n            \"months_of_exp\": \"12\"\n        },\n        {\n            \"user_skill_id\": \"US05\",\n            \"user_id\": \"U05\",\n            \"Skill_id\": \"5\",\n            \"months_of_exp\": \"12\"\n        },\n        {\n            \"user_skill_id\": \"US04\",\n            \"user_id\": \"U04\",\n            \"Skill_id\": \"6\",\n            \"months_of_exp\": \"36\"\n        },\n        {\n            \"user_skill_id\": \"US06\",\n            \"user_id\": \"U06\",\n            \"Skill_id\": \"5\",\n            \"months_of_exp\": \"12\"\n        },\n        {\n            \"user_skill_id\": \"US07\",\n            \"user_id\": \"U07\",\n            \"Skill_id\": \"2\",\n            \"months_of_exp\": \"12\"\n        },\n        {\n            \"user_skill_id\": \"US09\",\n            \"user_id\": \"U09\",\n            \"Skill_id\": \"3\",\n            \"months_of_exp\": \"36\"\n        },\n        {\n            \"user_skill_id\": \"US10\",\n            \"user_id\": \"U10\",\n            \"Skill_id\": \"2\",\n            \"months_of_exp\": \"10\"\n        },\n        {\n            \"user_skill_id\": \"US08\",\n            \"user_id\": \"U08\",\n            \"Skill_id\": \"1\",\n            \"months_of_exp\": \"30\"\n        },\n        {\n            \"user_skill_id\": \"US12\",\n            \"user_id\": \"U08\",\n            \"Skill_id\": \"4\",\n            \"months_of_exp\": \"12\"\n        }\n    ]\n}\n\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:97)\r\n\tat io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)\r\n\tat io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:256)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)\r\n\tat util.JSON_Schema_Validation.cls_JSON_SchemaValidation(JSON_Schema_Validation.java:29)\r\n\tat step_definition.UserSkills.userSkills_json_schema_is_valid(UserSkills.java:193)\r\n\tat ✽.userSkills JSON schema is valid(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/userSkills.feature/UserSkills_GET.feature:7)\r\n",
              "duration": 45997800,
              "status": "failed"
            },
            "line": 7,
            "name": "userSkills JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 999300,
              "status": "skipped"
            },
            "line": 8,
            "name": "check the Database for userSkills",
            "match": {
              "location": "step_definition.UserSkills.check_the_database_for_all_users()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1996700,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:06.954Z",
        "line": 17,
        "name": "Validate UserSkills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-userskills-api-with-specific-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 56005700,
              "status": "passed"
            },
            "line": 11,
            "name": "userSkills User sends GET request on  id from \"InputData_UserSkills_GET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 46
                },
                {
                  "val": "0",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_with_specific(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 54999300,
              "status": "passed"
            },
            "line": 12,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20000400,
              "status": "passed"
            },
            "line": 13,
            "name": "userSkills JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 422000200,
              "status": "passed"
            },
            "line": 14,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2999900,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:07.536Z",
        "line": 18,
        "name": "Validate UserSkills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-userskills-api-with-specific-id;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 56999200,
              "status": "passed"
            },
            "line": 11,
            "name": "userSkills User sends GET request on  id from \"InputData_UserSkills_GET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 46
                },
                {
                  "val": "1",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_with_specific(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40001000,
              "status": "passed"
            },
            "line": 12,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "userSkills JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 293996100,
              "status": "passed"
            },
            "line": 14,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 999700,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:07.952Z",
        "line": 19,
        "name": "Validate UserSkills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-userskills-api-with-specific-id;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 47010300,
              "status": "passed"
            },
            "line": 11,
            "name": "userSkills User sends GET request on  id from \"InputData_UserSkills_GET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 46
                },
                {
                  "val": "2",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_with_specific(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34998600,
              "status": "passed"
            },
            "line": 12,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "userSkills JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 293006100,
              "status": "passed"
            },
            "line": 14,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 999400,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:08.352Z",
        "line": 20,
        "name": "Validate UserSkills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-userskills-api-with-specific-id;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 56989500,
              "status": "passed"
            },
            "line": 11,
            "name": "userSkills User sends GET request on  id from \"InputData_UserSkills_GET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 46
                },
                {
                  "val": "3",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_with_specific(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 38002100,
              "status": "passed"
            },
            "line": 12,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999600,
              "status": "passed"
            },
            "line": 13,
            "name": "userSkills JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 306002000,
              "status": "passed"
            },
            "line": 14,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1998400,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:08.791Z",
        "line": 21,
        "name": "Validate UserSkills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-userskills-api-with-specific-id;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 60000000,
              "status": "passed"
            },
            "line": 11,
            "name": "userSkills User sends GET request on  id from \"InputData_UserSkills_GET\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 46
                },
                {
                  "val": "4",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_with_specific(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 54001800,
              "status": "passed"
            },
            "line": 12,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1004400,
              "status": "passed"
            },
            "line": 13,
            "name": "userSkills JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 326994600,
              "status": "passed"
            },
            "line": 14,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1997700,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:09.264Z",
        "line": 22,
        "name": "Validate UserSkills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-userskills-api-with-specific-id;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 45980900,
              "status": "passed"
            },
            "line": 11,
            "name": "userSkills User sends GET request on  id from \"InputData_UserSkills_GET\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 46
                },
                {
                  "val": "5",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_with_specific(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected object to not be null\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:686)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:671)\r\n\tat step_definition.UserSkills.userSkills_user_receives_status_code_with(UserSkills.java:258)\r\n\tat ✽.userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 5 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/userSkills.feature/UserSkills_GET.feature:12)\r\n",
              "duration": 40993100,
              "status": "failed"
            },
            "line": 12,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 60
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "userSkills JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The GET method for UserSkills",
    "description": "",
    "id": "to-check-the-get-method-for-userskills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkills.feature/UserSkills_GET.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2030900,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:09.382Z",
        "line": 13,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 136965600,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "0",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 44003200,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000500,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56995500,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "0",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 303035700,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2995100,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:09.963Z",
        "line": 14,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 56002400,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 1 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "1",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 35999700,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1033600,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40966900,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "1",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 350006500,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1999900,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:10.475Z",
        "line": 15,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 59002100,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 2 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "2",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 48998400,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 998800,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41002400,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "2",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 306036300,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2027300,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:10.957Z",
        "line": 16,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 46006500,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 3 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "3",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34994600,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32966500,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "3",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 296032500,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2030200,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:11.394Z",
        "line": 17,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 53003100,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 4 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "4",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 39996700,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999800,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41996800,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "4",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 341005800,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2000700,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:11.914Z",
        "line": 18,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 63996600,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 5 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "5",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 46001800,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "5",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1007000,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40991700,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "5",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 333999000,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1985100,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:12.425Z",
        "line": 19,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 45997200,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 6 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "6",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34002400,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 6 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "6",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 39029000,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 6",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "6",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 306973200,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 998400,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:12.878Z",
        "line": 20,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 46997800,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 7 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "7",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34994700,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 7 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "7",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44998900,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 7",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "7",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 330003600,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2008900,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:13.373Z",
        "line": 21,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 83000800,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 8 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "8",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 58998500,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 8 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "8",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999700,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 51996600,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 8",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "8",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 298000600,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The POST method for UserSkills",
    "description": "",
    "id": "to-check-the-post-method-for-userskills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkills.feature/UserSkills_POST.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2001000,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:13.893Z",
        "line": 14,
        "name": "Validate PUT method for UserSkills",
        "description": "",
        "id": "to-check-the-put-method-for-userskills;validate-put-method-for-userskills;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 107000900,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User sends PUT request on id and request body from \"InputData_UserSkills_PUT\" and 0 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 62
                },
                {
                  "val": "0",
                  "offset": 93
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40000700,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_PUT\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9001300,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44003000,
              "status": "passed"
            },
            "line": 10,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_PUT\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 143
                },
                {
                  "val": "0",
                  "offset": 174
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 317623900,
              "status": "passed"
            },
            "line": 11,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1996300,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:14.440Z",
        "line": 15,
        "name": "Validate PUT method for UserSkills",
        "description": "",
        "id": "to-check-the-put-method-for-userskills;validate-put-method-for-userskills;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 90993000,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User sends PUT request on id and request body from \"InputData_UserSkills_PUT\" and 1 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 62
                },
                {
                  "val": "1",
                  "offset": 93
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40002000,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_PUT\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003600,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48995600,
              "status": "passed"
            },
            "line": 10,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_PUT\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 143
                },
                {
                  "val": "1",
                  "offset": 174
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 364001800,
              "status": "passed"
            },
            "line": 11,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2002000,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:15.016Z",
        "line": 16,
        "name": "Validate PUT method for UserSkills",
        "description": "",
        "id": "to-check-the-put-method-for-userskills;validate-put-method-for-userskills;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 86003500,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User sends PUT request on id and request body from \"InputData_UserSkills_PUT\" and 2 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 62
                },
                {
                  "val": "2",
                  "offset": 93
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 35001300,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_PUT\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38998900,
              "status": "passed"
            },
            "line": 10,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_PUT\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 143
                },
                {
                  "val": "2",
                  "offset": 174
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 303002300,
              "status": "passed"
            },
            "line": 11,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2029100,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:15.507Z",
        "line": 17,
        "name": "Validate PUT method for UserSkills",
        "description": "",
        "id": "to-check-the-put-method-for-userskills;validate-put-method-for-userskills;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 84003600,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User sends PUT request on id and request body from \"InputData_UserSkills_PUT\" and 3 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 62
                },
                {
                  "val": "3",
                  "offset": 93
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 33996300,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_PUT\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37998900,
              "status": "passed"
            },
            "line": 10,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_PUT\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 143
                },
                {
                  "val": "3",
                  "offset": 174
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 292997200,
              "status": "passed"
            },
            "line": 11,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 994500,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:15.985Z",
        "line": 18,
        "name": "Validate PUT method for UserSkills",
        "description": "",
        "id": "to-check-the-put-method-for-userskills;validate-put-method-for-userskills;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 79000200,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User sends PUT request on id and request body from \"InputData_UserSkills_PUT\" and 4 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 62
                },
                {
                  "val": "4",
                  "offset": 93
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40018300,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_PUT\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37996000,
              "status": "passed"
            },
            "line": 10,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_PUT\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 143
                },
                {
                  "val": "4",
                  "offset": 174
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 367004200,
              "status": "passed"
            },
            "line": 11,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2991400,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:16.544Z",
        "line": 29,
        "name": "Validate creation time \u0026 modification time for PUT method for UserSkills",
        "description": "",
        "id": "to-check-the-put-method-for-userskills;validate-creation-time-\u0026-modification-time-for-put-method-for-userskills;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 374035600,
              "status": "passed"
            },
            "line": 22,
            "name": "userSkills User check the database for creation time \u0026 modification time of a user with specified UserSkillsId from \"InputData_UserSkills_PUT\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 116
                },
                {
                  "val": "0",
                  "offset": 147
                }
              ],
              "location": "step_definition.UserSkills.user_skills_user_check_the_database_for_creation_time_modification_time_of_a_user_with_specified_user_skills_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 109003300,
              "status": "passed"
            },
            "line": 23,
            "name": "userSkills User sends PUT request on id and request body from \"InputData_UserSkills_PUT\" and 0 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 62
                },
                {
                  "val": "0",
                  "offset": 93
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 34997700,
              "status": "passed"
            },
            "line": 24,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_PUT\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 349005000,
              "status": "passed"
            },
            "line": 25,
            "name": "userSkills User check the database for new creation time \u0026 modification time of a user with specified UserSkillsId from \"InputData_UserSkills_PUT\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 120
                },
                {
                  "val": "0",
                  "offset": 151
                }
              ],
              "location": "step_definition.UserSkills.user_skills_user_check_the_database_for_new_creation_time_modification_time_of_a_user_with_specified_user_skills_id_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [2022-01-27 10:25:17.026599] but found [2022-01-27 10:25:14.001954]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:453)\r\n\tat org.testng.Assert.assertEquals(Assert.java:463)\r\n\tat step_definition.UserSkills.user_skills_user_check_that_the_creation_time_is_same_but_modification_is_different(UserSkills.java:485)\r\n\tat ✽.userSkills User check that the creation time is same but modification is different.(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/userSkills.feature/UserSkills_PUT.feature:26)\r\n",
              "duration": 997600,
              "status": "failed"
            },
            "line": 26,
            "name": "userSkills User check that the creation time is same but modification is different.",
            "match": {
              "location": "step_definition.UserSkills.user_skills_user_check_that_the_creation_time_is_same_but_modification_is_different()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The PUT method for UserSkills",
    "description": "",
    "id": "to-check-the-put-method-for-userskills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkills.feature/UserSkills_PUT.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-01-27T15:25:17.449Z",
        "line": 11,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 46997100,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User with  username \u0026 password from \"UserSkillsMap_Authorization\" and 0  is on Endpoint: url/UserSkillsMap\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 50
                },
                {
                  "val": "0",
                  "offset": 84
                }
              ],
              "location": "step_definition.UserSkillsMap.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9013100,
              "status": "passed"
            },
            "line": 5,
            "name": "UserSkillsMap User sends GET request",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 31022100,
              "status": "passed"
            },
            "line": 6,
            "name": "UserSkillsMap User Checks for StatusCode StatusCode and StatusMessage from \"UserSkillsMap_Authorization\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 75
                },
                {
                  "val": "0",
                  "offset": 115
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:17.559Z",
        "line": 12,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 81002000,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User with  username \u0026 password from \"UserSkillsMap_Authorization\" and 1  is on Endpoint: url/UserSkillsMap\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 50
                },
                {
                  "val": "1",
                  "offset": 84
                }
              ],
              "location": "step_definition.UserSkillsMap.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 27001100,
              "status": "passed"
            },
            "line": 5,
            "name": "UserSkillsMap User sends GET request",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 47997200,
              "status": "passed"
            },
            "line": 6,
            "name": "UserSkillsMap User Checks for StatusCode StatusCode and StatusMessage from \"UserSkillsMap_Authorization\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 75
                },
                {
                  "val": "1",
                  "offset": 115
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:17.750Z",
        "line": 13,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 46998100,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User with  username \u0026 password from \"UserSkillsMap_Authorization\" and 2  is on Endpoint: url/UserSkillsMap\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 50
                },
                {
                  "val": "2",
                  "offset": 84
                }
              ],
              "location": "step_definition.UserSkillsMap.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9000300,
              "status": "passed"
            },
            "line": 5,
            "name": "UserSkillsMap User sends GET request",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 51999800,
              "status": "passed"
            },
            "line": 6,
            "name": "UserSkillsMap User Checks for StatusCode StatusCode and StatusMessage from \"UserSkillsMap_Authorization\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 75
                },
                {
                  "val": "2",
                  "offset": 115
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:17.888Z",
        "line": 14,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 45992400,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User with  username \u0026 password from \"UserSkillsMap_Authorization\" and 3  is on Endpoint: url/UserSkillsMap\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 50
                },
                {
                  "val": "3",
                  "offset": 84
                }
              ],
              "location": "step_definition.UserSkillsMap.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 45000900,
              "status": "passed"
            },
            "line": 5,
            "name": "UserSkillsMap User sends GET request",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 130000200,
              "status": "passed"
            },
            "line": 6,
            "name": "UserSkillsMap User Checks for StatusCode StatusCode and StatusMessage from \"UserSkillsMap_Authorization\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 75
                },
                {
                  "val": "3",
                  "offset": 115
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Check the Authorization for LMS API",
    "description": "",
    "id": "check-the-authorization-for-lms-api",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkillsMap.feature/UserSkillsMap_Authorization.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2997700,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:18.452Z",
        "line": 6,
        "name": "Validate GET all User-to-skill mappings",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-all-user-to-skill-mappings",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 77995500,
              "status": "passed"
            },
            "line": 8,
            "name": "UserSkillsMap User sends GET request",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UserSkillsMap User validates StatusCode",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_validates_status_code()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 66997900,
              "status": "passed"
            },
            "line": 10,
            "name": "UserSkillsMap JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2001700,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:18.678Z",
        "line": 20,
        "name": "Validate GET one particular User-to-skill mappings with specific user ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-user-to-skill-mappings-with-specific-user-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 259998000,
              "status": "passed"
            },
            "line": 14,
            "name": "UserSkillsMap_user User sends GET request on user id from \"InputData_UserSkillsMap_userGET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 96
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53018800,
              "status": "passed"
            },
            "line": 15,
            "name": "UserSkillsMap_user User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_userGET\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 68
                },
                {
                  "val": "0",
                  "offset": 112
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18981600,
              "status": "passed"
            },
            "line": 16,
            "name": "UserSkillsMap JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1999300,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:19.047Z",
        "line": 21,
        "name": "Validate GET one particular User-to-skill mappings with specific user ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-user-to-skill-mappings-with-specific-user-id;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 59003900,
              "status": "passed"
            },
            "line": 14,
            "name": "UserSkillsMap_user User sends GET request on user id from \"InputData_UserSkillsMap_userGET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 96
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 64998700,
              "status": "passed"
            },
            "line": 15,
            "name": "UserSkillsMap_user User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_userGET\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 68
                },
                {
                  "val": "1",
                  "offset": 112
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000400,
              "status": "passed"
            },
            "line": 16,
            "name": "UserSkillsMap JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 999100,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:19.199Z",
        "line": 22,
        "name": "Validate GET one particular User-to-skill mappings with specific user ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-user-to-skill-mappings-with-specific-user-id;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 56001600,
              "status": "passed"
            },
            "line": 14,
            "name": "UserSkillsMap_user User sends GET request on user id from \"InputData_UserSkillsMap_userGET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 96
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40996300,
              "status": "passed"
            },
            "line": 15,
            "name": "UserSkillsMap_user User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_userGET\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 68
                },
                {
                  "val": "2",
                  "offset": 112
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "UserSkillsMap JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2998300,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:19.329Z",
        "line": 23,
        "name": "Validate GET one particular User-to-skill mappings with specific user ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-user-to-skill-mappings-with-specific-user-id;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 52996100,
              "status": "passed"
            },
            "line": 14,
            "name": "UserSkillsMap_user User sends GET request on user id from \"InputData_UserSkillsMap_userGET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 58
                },
                {
                  "val": "3",
                  "offset": 96
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 63998900,
              "status": "passed"
            },
            "line": 15,
            "name": "UserSkillsMap_user User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_userGET\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 68
                },
                {
                  "val": "3",
                  "offset": 112
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "UserSkillsMap JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1992900,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:19.475Z",
        "line": 33,
        "name": "Validate GET one particular Skill-to-users mappings with specific skill ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-skill-to-users-mappings-with-specific-skill-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 51001100,
              "status": "passed"
            },
            "line": 27,
            "name": "UserSkillsMap_skill User sends GET request on user id from \"InputData_UserSkillsMap_skilGET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 59
                },
                {
                  "val": "0",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 38001500,
              "status": "passed"
            },
            "line": 28,
            "name": "UserSkillsMap_skill User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_skilGET\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 69
                },
                {
                  "val": "0",
                  "offset": 113
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31002400,
              "status": "passed"
            },
            "line": 29,
            "name": "UserSkillsMap_skill JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1995700,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:19.629Z",
        "line": 34,
        "name": "Validate GET one particular Skill-to-users mappings with specific skill ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-skill-to-users-mappings-with-specific-skill-id;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 62002200,
              "status": "passed"
            },
            "line": 27,
            "name": "UserSkillsMap_skill User sends GET request on user id from \"InputData_UserSkillsMap_skilGET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 59
                },
                {
                  "val": "1",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 46998500,
              "status": "passed"
            },
            "line": 28,
            "name": "UserSkillsMap_skill User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_skilGET\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 69
                },
                {
                  "val": "1",
                  "offset": 113
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "UserSkillsMap_skill JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4996200,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:19.771Z",
        "line": 35,
        "name": "Validate GET one particular Skill-to-users mappings with specific skill ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-skill-to-users-mappings-with-specific-skill-id;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 58999800,
              "status": "passed"
            },
            "line": 27,
            "name": "UserSkillsMap_skill User sends GET request on user id from \"InputData_UserSkillsMap_skilGET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 59
                },
                {
                  "val": "2",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34995700,
              "status": "passed"
            },
            "line": 28,
            "name": "UserSkillsMap_skill User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_skilGET\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 69
                },
                {
                  "val": "2",
                  "offset": 113
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "UserSkillsMap_skill JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1995800,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:19.906Z",
        "line": 36,
        "name": "Validate GET one particular Skill-to-users mappings with specific skill ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-skill-to-users-mappings-with-specific-skill-id;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 55001100,
              "status": "passed"
            },
            "line": 27,
            "name": "UserSkillsMap_skill User sends GET request on user id from \"InputData_UserSkillsMap_skilGET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 59
                },
                {
                  "val": "3",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40996100,
              "status": "passed"
            },
            "line": 28,
            "name": "UserSkillsMap_skill User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_skilGET\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 69
                },
                {
                  "val": "3",
                  "offset": 113
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1002200,
              "status": "passed"
            },
            "line": 29,
            "name": "UserSkillsMap_skill JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The GET method for UserSkillsMap API",
    "description": "",
    "id": "to-check-the-get-method-for-userskillsmap-api",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkillsMap.feature/UserSkillsMap_GET.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-01-27T15:25:20.028Z",
        "line": 11,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 104999600,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users username \u0026 password from \"Users_Authorization\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 65
                },
                {
                  "val": "0",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_API_user_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8996700,
              "status": "passed"
            },
            "line": 5,
            "name": "UsersAPI User sends GET request",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_sends_request_users_api()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 95010800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User Checks for StatusCode StatusCode and StatusMessage from \"Users_Authorization\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 70
                },
                {
                  "val": "0",
                  "offset": 102
                }
              ],
              "location": "step_definition.Users.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:20.268Z",
        "line": 12,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 69994000,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users username \u0026 password from \"Users_Authorization\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 65
                },
                {
                  "val": "1",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_API_user_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9999800,
              "status": "passed"
            },
            "line": 5,
            "name": "UsersAPI User sends GET request",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_sends_request_users_api()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 77001800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User Checks for StatusCode StatusCode and StatusMessage from \"Users_Authorization\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 70
                },
                {
                  "val": "1",
                  "offset": 102
                }
              ],
              "location": "step_definition.Users.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:20.447Z",
        "line": 13,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 84999700,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users username \u0026 password from \"Users_Authorization\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 65
                },
                {
                  "val": "2",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_API_user_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8999700,
              "status": "passed"
            },
            "line": 5,
            "name": "UsersAPI User sends GET request",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_sends_request_users_api()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 80000600,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User Checks for StatusCode StatusCode and StatusMessage from \"Users_Authorization\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 70
                },
                {
                  "val": "2",
                  "offset": 102
                }
              ],
              "location": "step_definition.Users.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:20.646Z",
        "line": 14,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 112004100,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users username \u0026 password from \"Users_Authorization\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 65
                },
                {
                  "val": "3",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_API_user_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12997600,
              "status": "passed"
            },
            "line": 5,
            "name": "UsersAPI User sends GET request",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_sends_request_users_api()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 83999500,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User Checks for StatusCode StatusCode and StatusMessage from \"Users_Authorization\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 70
                },
                {
                  "val": "3",
                  "offset": 102
                }
              ],
              "location": "step_definition.Users.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Check the Authorization for LMS API",
    "description": "",
    "id": "check-the-authorization-for-lms-api",
    "keyword": "Feature",
    "uri": "file:src/test/resources/users.feature/User_Authorization.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3005300,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:20.902Z",
        "line": 12,
        "name": "Validate the delete method for Users",
        "description": "",
        "id": "delete-users-details;validate-the-delete-method-for-users;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 99994900,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI user sends request id ON DELETE Method from \"InputData_Users_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 53
                },
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "step_definition.Users.users_api_sends_request_id_on_delete_method_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [200] but found [404]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 0 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_DELETE.feature:7)\r\n",
              "duration": 83997100,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 93
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1993900,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:21.130Z",
        "line": 13,
        "name": "Validate the delete method for Users",
        "description": "",
        "id": "delete-users-details;validate-the-delete-method-for-users;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 194003500,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI user sends request id ON DELETE Method from \"InputData_Users_DELETE\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 53
                },
                {
                  "val": "1",
                  "offset": 82
                }
              ],
              "location": "step_definition.Users.users_api_sends_request_id_on_delete_method_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 179001800,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 93
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1997600,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:21.595Z",
        "line": 14,
        "name": "Validate the delete method for Users",
        "description": "",
        "id": "delete-users-details;validate-the-delete-method-for-users;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 221002500,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI user sends request id ON DELETE Method from \"InputData_Users_DELETE\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 53
                },
                {
                  "val": "2",
                  "offset": 82
                }
              ],
              "location": "step_definition.Users.users_api_sends_request_id_on_delete_method_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 118000700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 93
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1996100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:22.007Z",
        "line": 15,
        "name": "Validate the delete method for Users",
        "description": "",
        "id": "delete-users-details;validate-the-delete-method-for-users;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 116013000,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI user sends request id ON DELETE Method from \"InputData_Users_DELETE\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 53
                },
                {
                  "val": "3",
                  "offset": 82
                }
              ],
              "location": "step_definition.Users.users_api_sends_request_id_on_delete_method_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 226003100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "3",
                  "offset": 93
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3997200,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:22.429Z",
        "line": 16,
        "name": "Validate the delete method for Users",
        "description": "",
        "id": "delete-users-details;validate-the-delete-method-for-users;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 118998200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI user sends request id ON DELETE Method from \"InputData_Users_DELETE\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 53
                },
                {
                  "val": "4",
                  "offset": 82
                }
              ],
              "location": "step_definition.Users.users_api_sends_request_id_on_delete_method_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected object to not be null\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:686)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:671)\r\n\tat step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:199)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 4 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_DELETE.feature:7)\r\n",
              "duration": 71998100,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "4",
                  "offset": 93
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Delete Users details",
    "description": "",
    "id": "delete-users-details",
    "keyword": "Feature",
    "uri": "file:src/test/resources/users.feature/Users_DELETE.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1993300,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:22.663Z",
        "line": 6,
        "name": "Validate GET all Users",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-get-all-users",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10999000,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends GET request",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_sends_request_users_api()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_validates_status_code()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat java.base/java.util.Objects.requireNonNull(Objects.java:221)\r\n\tat java.base/java.lang.ClassLoader.getResource(ClassLoader.java:1392)\r\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)\r\n\tat util.JSON_Schema_Validation.cls_JSON_SchemaValidation(JSON_Schema_Validation.java:29)\r\n\tat step_definition.Users.UsersAPI_json_schema_is_valid(Users.java:121)\r\n\tat ✽.UsersAPI JSON schema is valid(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_GET.feature:9)\r\n",
              "duration": 1000400,
              "status": "failed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid",
            "match": {
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 998300,
              "status": "skipped"
            },
            "line": 10,
            "name": "check the Database for all users",
            "match": {
              "location": "step_definition.Users.check_the_database_for_all_users()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1999300,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:22.709Z",
        "line": 21,
        "name": "Validate Users Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-users-api-with-specific-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 91001200,
              "status": "passed"
            },
            "line": 13,
            "name": "UsersAPI User sends GET request on userid from \"InputData_User_GET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 47
                },
                {
                  "val": "0",
                  "offset": 72
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_get_request_on_userid_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 82997600,
              "status": "passed"
            },
            "line": 14,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 89
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat java.base/java.util.Objects.requireNonNull(Objects.java:221)\r\n\tat java.base/java.lang.ClassLoader.getResource(ClassLoader.java:1392)\r\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)\r\n\tat util.JSON_Schema_Validation.cls_JSON_SchemaValidation(JSON_Schema_Validation.java:29)\r\n\tat step_definition.Users.UsersAPI_json_schema_is_valid_for(Users.java:150)\r\n\tat ✽.UsersAPI JSON schema is valid for \"GET\"(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_GET.feature:15)\r\n",
              "status": "failed"
            },
            "line": 15,
            "name": "UsersAPI JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_User_GET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 141
                },
                {
                  "val": "0",
                  "offset": 166
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2004300,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:22.910Z",
        "line": 22,
        "name": "Validate Users Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-users-api-with-specific-id;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 74253400,
              "status": "passed"
            },
            "line": 13,
            "name": "UsersAPI User sends GET request on userid from \"InputData_User_GET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 47
                },
                {
                  "val": "1",
                  "offset": 72
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_get_request_on_userid_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 92998200,
              "status": "passed"
            },
            "line": 14,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 89
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 994700,
              "status": "passed"
            },
            "line": 15,
            "name": "UsersAPI JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 88000000,
              "status": "passed"
            },
            "line": 16,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_User_GET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 141
                },
                {
                  "val": "1",
                  "offset": 166
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 404332700,
              "status": "passed"
            },
            "line": 17,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1975500,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:23.605Z",
        "line": 23,
        "name": "Validate Users Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-users-api-with-specific-id;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 96939900,
              "status": "passed"
            },
            "line": 13,
            "name": "UsersAPI User sends GET request on userid from \"InputData_User_GET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 47
                },
                {
                  "val": "2",
                  "offset": 72
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_get_request_on_userid_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 91995100,
              "status": "passed"
            },
            "line": 14,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 89
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000300,
              "status": "passed"
            },
            "line": 15,
            "name": "UsersAPI JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99001800,
              "status": "passed"
            },
            "line": 16,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_User_GET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 141
                },
                {
                  "val": "2",
                  "offset": 166
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 335000600,
              "status": "passed"
            },
            "line": 17,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1998700,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:24.258Z",
        "line": 24,
        "name": "Validate Users Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-users-api-with-specific-id;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 77001400,
              "status": "passed"
            },
            "line": 13,
            "name": "UsersAPI User sends GET request on userid from \"InputData_User_GET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 47
                },
                {
                  "val": "3",
                  "offset": 72
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_get_request_on_userid_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 73999400,
              "status": "passed"
            },
            "line": 14,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 58
                },
                {
                  "val": "3",
                  "offset": 89
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "UsersAPI JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68003900,
              "status": "passed"
            },
            "line": 16,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_User_GET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 141
                },
                {
                  "val": "3",
                  "offset": 166
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 382002900,
              "status": "passed"
            },
            "line": 17,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3000200,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:24.896Z",
        "line": 25,
        "name": "Validate Users Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-users-api-with-specific-id;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 80000400,
              "status": "passed"
            },
            "line": 13,
            "name": "UsersAPI User sends GET request on userid from \"InputData_User_GET\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 47
                },
                {
                  "val": "4",
                  "offset": 72
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_get_request_on_userid_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 65999700,
              "status": "passed"
            },
            "line": 14,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 58
                },
                {
                  "val": "4",
                  "offset": 89
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "UsersAPI JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77010000,
              "status": "passed"
            },
            "line": 16,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_User_GET\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 141
                },
                {
                  "val": "4",
                  "offset": 166
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 320066200,
              "status": "passed"
            },
            "line": 17,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2022400,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:25.467Z",
        "line": 26,
        "name": "Validate Users Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-users-api-with-specific-id;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 70967500,
              "status": "passed"
            },
            "line": 13,
            "name": "UsersAPI User sends GET request on userid from \"InputData_User_GET\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 47
                },
                {
                  "val": "5",
                  "offset": 72
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_get_request_on_userid_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected object to not be null\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:686)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:671)\r\n\tat step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:199)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 5 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_GET.feature:14)\r\n",
              "duration": 73001000,
              "status": "failed"
            },
            "line": 14,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 58
                },
                {
                  "val": "5",
                  "offset": 89
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999000,
              "status": "skipped"
            },
            "line": 15,
            "name": "UsersAPI JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_User_GET\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 141
                },
                {
                  "val": "5",
                  "offset": 166
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The GET method for Users",
    "description": "",
    "id": "to-check-the-get-method-for-users",
    "keyword": "Feature",
    "uri": "file:src/test/resources/users.feature/Users_GET.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2002100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:25.638Z",
        "line": 13,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 127997600,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 90000700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000100,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 125999400,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 525997700,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2000300,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:26.570Z",
        "line": 14,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 102003100,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 1 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "1",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 91999300,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81998900,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "1",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 288004400,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1997500,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:27.172Z",
        "line": 15,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 95000700,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 2 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "2",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 226000400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2998700,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 185999500,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "2",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 406000200,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1999200,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:28.124Z",
        "line": 16,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 100996300,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 3 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "3",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 84003300,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "3",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108000700,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "3",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 342029200,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2013400,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:28.786Z",
        "line": 17,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 75989300,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 4 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "4",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 79000600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "4",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71996400,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "4",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 326999400,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1999200,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:29.371Z",
        "line": 18,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 116998500,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 5 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "5",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 109004300,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "5",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23998000,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99998700,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "5",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 306000400,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1997500,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:30.057Z",
        "line": 19,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 84025000,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 6 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "6",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 81968700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 6 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "6",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000600,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72028200,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 6",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "6",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 305013200,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2015900,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:30.634Z",
        "line": 20,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 78949800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 7 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "7",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 88999400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 7 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "7",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16004300,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82999700,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 7",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "7",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 354002700,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 999800,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:31.285Z",
        "line": 21,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 100000200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 8 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "8",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 83997500,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 8 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "8",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70002900,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 8",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "8",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 338998700,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1999600,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:31.909Z",
        "line": 22,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;11",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 100000200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 9 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "9",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 94001500,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 9 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "9",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6996300,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 96002700,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 9",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "9",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 433995800,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1998100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:32.690Z",
        "line": 23,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;12",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 189998900,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 10 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "10",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 10 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)\r\n",
              "duration": 98993100,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 10 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "10",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 10",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "10",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2000300,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:33.015Z",
        "line": 24,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;13",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 101001300,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 11 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "11",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 11 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)\r\n",
              "duration": 78996600,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 11 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "11",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 11",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "11",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2000200,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:33.220Z",
        "line": 25,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;14",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 82031200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 12 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "12",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 84000500,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 12 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "12",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8004300,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91995800,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 12",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "12",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 298002300,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000400,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:33.812Z",
        "line": 26,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;15",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 105003600,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 13 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "13",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 93996900,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 13 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "13",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5003100,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90003900,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 13",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "13",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 358003800,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2001700,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:34.491Z",
        "line": 27,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;16",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 86998700,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 14 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "14",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 82997200,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 14 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "14",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77995000,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 14",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "14",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 409226600,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 999000,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:35.173Z",
        "line": 28,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;17",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 75000200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 15 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "15",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62003400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 15 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "15",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 73995900,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 15",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "15",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 317004800,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2006100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:35.733Z",
        "line": 29,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;18",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 103994000,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 16 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "16",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 94004600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 16 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "16",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64999300,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 16",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "16",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 295003600,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3001900,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:36.321Z",
        "line": 30,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;19",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 91996900,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 17 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "17",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 81000600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 17 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "17",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 96997700,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 17",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "17",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 367005200,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2002800,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:36.997Z",
        "line": 31,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;20",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 101003200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 18 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "18",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [201] but found [400]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 18 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)\r\n",
              "duration": 78999000,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 18 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "18",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1002600,
              "status": "skipped"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 18",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "18",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 998500,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:37.218Z",
        "line": 32,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;21",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 89000600,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 19 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "19",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 79996800,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 19 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "19",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001400,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71996000,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 19",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "19",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 298002900,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2998100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:37.783Z",
        "line": 33,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;22",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 85001800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 20 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "20",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 60996300,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 20 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "20",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 76997900,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 20",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "20",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 295999100,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1998900,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:38.328Z",
        "line": 34,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;23",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 89001400,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 21 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "21",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 95999800,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 21 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "21",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85002100,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 21",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "21",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 327995000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2001100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:38.950Z",
        "line": 35,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;24",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 83000000,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 22 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "22",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 67002400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 22 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "22",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6998800,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 80993400,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 22",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "22",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 314033600,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1998300,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:39.526Z",
        "line": 36,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;25",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 89031900,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 23 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "23",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 59001000,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 23 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "23",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4972700,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62033600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 23",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "23",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 383998900,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1980100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:40.147Z",
        "line": 37,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;26",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 92001300,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 24 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "24",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 24 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)\r\n",
              "duration": 63997900,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 24 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "24",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 24",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "24",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000200,
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2001200,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:40.332Z",
        "line": 38,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;27",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 76999200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 25 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "25",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [Failed to create-invalida data] but found [Failed to create-invalid data]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:442)\r\n\tat step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:201)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 25 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)\r\n",
              "duration": 70999100,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 25 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "25",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 25",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "25",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1998900,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:40.512Z",
        "line": 39,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;28",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 72002800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 26 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "26",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [Failed to create-invalida data] but found [Failed to create-invalid data]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:442)\r\n\tat step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:201)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 26 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)\r\n",
              "duration": 85996400,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 26 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "26",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 26",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "26",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1999600,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:40.700Z",
        "line": 44,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;29",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 90004200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"location_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"location_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 64
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 69996800,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"location_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"location_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 84
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72000600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"location_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"location_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 84
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 332032000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2023600,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:41.288Z",
        "line": 45,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;30",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 76966500,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"time_zone_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"time_zone_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 65
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 78008500,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"time_zone_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"time_zone_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 85
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79995200,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"time_zone_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"time_zone_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 85
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 313845100,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2036100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:41.860Z",
        "line": 46,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;31",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 71024200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"linkedin_url_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"linkedin_url_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 107002300,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"linkedin_url_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"linkedin_url_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 88
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 997900,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 115996300,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"linkedin_url_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"linkedin_url_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 88
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 369998600,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2002600,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:42.558Z",
        "line": 47,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;32",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 111000400,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"education_ug_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"education_ug_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 99001900,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"education_ug_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"education_ug_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 88
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7998800,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 96998800,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"education_ug_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"education_ug_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 88
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 334999700,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2028000,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:43.248Z",
        "line": 48,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;33",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 110004200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"education_pg_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"education_pg_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 92997400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"education_pg_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"education_pg_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 88
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001600,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74996200,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"education_pg_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"education_pg_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 88
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 292998000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1997000,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:43.847Z",
        "line": 49,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;34",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 85004800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"visa_status_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"visa_status_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 67
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 67998100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"visa_status_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"visa_status_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 87
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999100,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69999600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"visa_status_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"visa_status_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 87
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 363001700,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2997600,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:44.461Z",
        "line": 50,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;35",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 97001400,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"comments_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"comments_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 64
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 87995400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"comments_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"comments_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 84
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1005400,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84994300,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"comments_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"comments_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 84
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 316008200,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1997800,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:45.077Z",
        "line": 51,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;36",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 61004400,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"Invalid_Content\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_Content\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 66
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 63966200,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"Invalid_Content\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_Content\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69002200,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"Invalid_Content\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_Content\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 292028000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The POST method for Users",
    "description": "",
    "id": "to-check-the-post-method-for-users",
    "keyword": "Feature",
    "uri": "file:src/test/resources/users.feature/Users_POST.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000600,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:45.587Z",
        "line": 15,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 132019200,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 0 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 68999400,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6002100,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93994000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "0",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 351998600,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2002500,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:46.271Z",
        "line": 16,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 128992700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 1 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 96006200,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 73998900,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "1",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 298034900,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2006100,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:46.897Z",
        "line": 17,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 147993200,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 2 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 55032700,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 66048300,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "2",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 350002500,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1998500,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:47.555Z",
        "line": 18,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 160001700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 3 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 73997700,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "3",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82003000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "3",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 351001200,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1998100,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:48.256Z",
        "line": 19,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 171000700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 4 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 54996300,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "4",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63998000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "4",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 343993000,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1998200,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:48.920Z",
        "line": 20,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 176003300,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 5 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "5",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 74998000,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "5",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 66000700,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "5",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 337998000,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1001100,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:49.597Z",
        "line": 21,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 136000100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 6 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "6",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 65000600,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 6 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "6",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 54007700,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 6",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "6",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 288964600,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1999900,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:50.165Z",
        "line": 22,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 142008400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 7 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "7",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 75000300,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 7 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "7",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 995300,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79999400,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 7",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "7",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 335032900,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1997400,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:50.820Z",
        "line": 23,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 135982700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 8 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "8",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 69001600,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 8 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "8",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 997900,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71999800,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 8",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "8",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 307997900,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1966700,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:51.431Z",
        "line": 24,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;11",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 124002800,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 9 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "9",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 66002000,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 9 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "9",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 996800,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68002600,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 9",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "9",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 348995700,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1988700,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:52.066Z",
        "line": 25,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;12",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 134999700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 10 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "10",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 64000700,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 10 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "10",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 65133200,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 10",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "10",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 288007700,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1005600,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:52.644Z",
        "line": 26,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;13",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 122996700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 11 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "11",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 54048100,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 11 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "11",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6958500,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58996900,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 11",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "11",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 312028600,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1006900,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:53.234Z",
        "line": 27,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;14",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 155999100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 12 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "12",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 94999000,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 12 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "12",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000400,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81998100,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 12",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "12",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 382009100,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 999100,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:53.985Z",
        "line": 28,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;15",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 155999600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 13 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "13",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 54002800,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 13 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "13",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62996100,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 13",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "13",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 306005700,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2001700,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:54.606Z",
        "line": 29,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;16",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 157967000,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 14 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "14",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 64000600,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 14 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "14",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6003800,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69995500,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 14",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "14",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 329025400,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000300,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:55.256Z",
        "line": 30,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;17",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 133000100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 15 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "15",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 55006200,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 15 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "15",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58996000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 15",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "15",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 307047500,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1996900,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:55.834Z",
        "line": 31,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;18",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 117970700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 16 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "16",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 16 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_PUT.feature:8)\r\n",
              "duration": 54041900,
              "status": "failed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 16 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "16",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 16",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "16",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1002100,
              "status": "skipped"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1997200,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:56.038Z",
        "line": 32,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;19",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 141001100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 17 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "17",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 55997500,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 17 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "17",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6005100,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 78996100,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 17",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "17",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 336998400,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1004000,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:56.683Z",
        "line": 33,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;20",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 122986900,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 18 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "18",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 59996300,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 18 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "18",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001900,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 57030700,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 18",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "18",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 316000700,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1997200,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:57.277Z",
        "line": 34,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;21",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 136006200,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 19 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "19",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 59994600,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 19 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "19",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62001500,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 19",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "19",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 335994900,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1997700,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:57.902Z",
        "line": 35,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;22",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 153000400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 20 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "20",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 76997300,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 20 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "20",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003200,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 225997400,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 20",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "20",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 410999400,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1995400,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:58.799Z",
        "line": 36,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;23",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 144002200,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 21 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "21",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 55029000,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 21 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "21",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 73998400,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 21",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "21",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 332002000,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2002900,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:25:59.429Z",
        "line": 37,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;24",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 143003900,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 22 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "22",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 57004400,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 22 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "22",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 54991500,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 22",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "22",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 327001700,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:26:00.045Z",
        "line": 38,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;25",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 158002600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 23 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "23",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 23 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_PUT.feature:8)\r\n",
              "duration": 64995500,
              "status": "failed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 23 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "23",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 23",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "23",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 998400,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:26:00.295Z",
        "line": 39,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;26",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 150006800,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 24 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "24",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62001600,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 24 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "24",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72998900,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 24",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "24",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 413996500,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2001300,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-27T15:26:01.028Z",
        "line": 40,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;27",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 165004900,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 25 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "25",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [0] but found [404]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 25 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_PUT.feature:8)\r\n",
              "duration": 73003000,
              "status": "failed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 25 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "25",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 25",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "25",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The PUT method for Users",
    "description": "",
    "id": "to-check-the-put-method-for-users",
    "keyword": "Feature",
    "uri": "file:src/test/resources/users.feature/Users_PUT.feature",
    "tags": []
  }
]