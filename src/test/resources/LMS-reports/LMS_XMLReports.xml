<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testsuite errors="0" failures="27" name="io.cucumber.core.plugin.JUnitFormatter" skipped="0" tests="158" time="78.183">
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password" time="3.163">
        <system-out>
            <![CDATA[Given Skills User with  username & password from "Skills_Authorization" and 0 is on Endpoint: url/Skills.passed
When skills User sends GET request..........................................passed
Then Skills User Checks for StatusCode StatusCode and StatusMessage from "Skills_Authorization" sheet and 0 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password 2" time="0.41">
        <system-out>
            <![CDATA[Given Skills User with  username & password from "Skills_Authorization" and 1 is on Endpoint: url/Skills.passed
When skills User sends GET request..........................................passed
Then Skills User Checks for StatusCode StatusCode and StatusMessage from "Skills_Authorization" sheet and 1 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password 3" time="0.281">
        <system-out>
            <![CDATA[Given Skills User with  username & password from "Skills_Authorization" and 2 is on Endpoint: url/Skills.passed
When skills User sends GET request..........................................passed
Then Skills User Checks for StatusCode StatusCode and StatusMessage from "Skills_Authorization" sheet and 2 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password 4" time="0.29">
        <system-out>
            <![CDATA[Given Skills User with  username & password from "Skills_Authorization" and 3 is on Endpoint: url/Skills.passed
When skills User sends GET request..........................................passed
Then Skills User Checks for StatusCode StatusCode and StatusMessage from "Skills_Authorization" sheet and 3 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The DELETE method for Skills" name="Validate DELETE Skills when user logged with UserName with Password" time="0.716">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends DELETE skill id ON DELETE Method from "Skills_POST" and 0.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_DELETE" sheet and 0 row.passed
And skills User checks the Database to validate deletion from "Skills_POST" sheet and 0 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The DELETE method for Skills" name="Validate DELETE Skills when user logged with UserName with Password 2" time="0.35">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends DELETE skill id ON DELETE Method from "Skills_DELETE" and 1.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_DELETE" sheet and 1 row.passed
And skills User checks the Database to validate deletion from "Skills_DELETE" sheet and 1 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The DELETE method for Skills" name="Validate DELETE Skills when user logged with UserName with Password 3" time="0.286">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends DELETE skill id ON DELETE Method from "Skills_DELETE" and 2.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_DELETE" sheet and 2 row.passed
And skills User checks the Database to validate deletion from "Skills_DELETE" sheet and 2 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The DELETE method for Skills" name="Validate DELETE Skills when user logged with UserName with Password 4" time="0.411">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends DELETE skill id ON DELETE Method from "Skills_DELETE" and 3.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_DELETE" sheet and 3 row.passed
And skills User checks the Database to validate deletion from "Skills_DELETE" sheet and 3 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The DELETE method for Skills" name="Validate DELETE Skills when user logged with UserName with Password 5" time="0.446">
        <failure message="Unexpected character ('&lt;' (code 60)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')&#10; at [Source: (String)&quot;&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 3.2 Final//EN&quot;&gt;&#10;&lt;title&gt;404 Not Found&lt;/title&gt;&#10;&lt;h1&gt;Not Found&lt;/h1&gt;&#10;&lt;p&gt;The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.&lt;/p&gt;&#10;&quot;; line: 1, column: 2]" type="com.fasterxml.jackson.core.JsonParseException">
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends DELETE skill id ON DELETE Method from "Skills_DELETE" and 4.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_DELETE" sheet and 4 row.failed
And skills User checks the Database to validate deletion from "Skills_DELETE" sheet and 4 row.skipped

StackTrace:
com.fasterxml.jackson.core.JsonParseException: Unexpected character ('<' (code 60)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
"; line: 1, column: 2]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2005)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:802)
	at com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4762)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4668)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3630)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3598)
	at step_definition.SkillMaster.extractResponse(SkillMaster.java:305)
	at step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:291)
	at âœ½.skills User validates the StatusCode and StatusMessage from "Skills_DELETE" sheet and 4 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_DELETE.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The GET method for Skills" name="Verify GET all Skills for Skill Master" time="0.06">
        <failure message="Illegal character in path at index 29: http://127.0.0.1:5000/Skills/    " type="java.net.URISyntaxException">
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends GET request..........................................failed
Then skills User validates StatusCode.......................................skipped
And skills JSON schema is valid.............................................skipped

StackTrace:
java.net.URISyntaxException: Illegal character in path at index 29: http://127.0.0.1:5000/Skills/    
	at java.base/java.net.URI$Parser.fail(URI.java:2913)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3084)
	at java.base/java.net.URI$Parser.parseHierarchical(URI.java:3166)
	at java.base/java.net.URI$Parser.parse(URI.java:3114)
	at java.base/java.net.URI.<init>(URI.java:600)
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor50.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
	at io.restassured.internal.RequestSpecificationImpl.getTargetPath(RequestSpecificationImpl.groovy:1452)
	at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
	at io.restassured.internal.RequestSpecificationImpl.getPathParamPlaceholders(RequestSpecificationImpl.groovy:2063)
	at jdk.internal.reflect.GeneratedMethodAccessor176.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:161)
	at io.restassured.internal.RequestSpecificationImpl.getRedundantNamedPathParams(RequestSpecificationImpl.groovy:2329)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:161)
	at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1300)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:161)
	at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1228)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:152)
	at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
	at io.restassured.filter.Filter$filter$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
	at io.restassured.filter.Filter$filter.call(Unknown Source)
	at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
	at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
	at io.restassured.filter.Filter$filter.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
	at io.restassured.filter.Filter$filter$0.call(Unknown Source)
	at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
	at io.restassured.filter.FilterContext$next.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1749)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1755)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)
	at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:171)
	at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
	at util.Send_Request_For_Method.Sent_request(Send_Request_For_Method.java:237)
	at step_definition.SkillMaster.user_sends_get_request_on_skills(SkillMaster.java:75)
	at âœ½.skills User sends GET request(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_GET.feature:6)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The GET method for Skills" name="Validate Skills Api with specific ID" time="1.402">
        <failure message="expected [8] but found [4]" type="java.lang.AssertionError">
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When User sends GET request on skill id from "Skills_GET" and 0.............passed
Then skills User validates the StatusCode and StatusMessage from "Skills_GET" sheet and 0 row.passed
And JSON schema is valid for "GET" in Skills................................passed
And skills User should receive the skill in JSON body from "Skills_GET" and 0.passed
And check the Database for skills...........................................failed

StackTrace:
java.lang.AssertionError: expected [8] but found [4]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:453)
	at org.testng.Assert.assertEquals(Assert.java:463)
	at step_definition.SkillMaster.check_the_database_for_all_skills(SkillMaster.java:350)
	at âœ½.check the Database for skills(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_GET.feature:16)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The GET method for Skills" name="Validate Skills Api with specific ID 2" time="0.946">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When User sends GET request on skill id from "Skills_GET" and 1.............passed
Then skills User validates the StatusCode and StatusMessage from "Skills_GET" sheet and 1 row.passed
And JSON schema is valid for "GET" in Skills................................passed
And skills User should receive the skill in JSON body from "Skills_GET" and 1.passed
And check the Database for skills...........................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for Skills" name="Validate Skills Api with specific ID 3" time="0.585">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When User sends GET request on skill id from "Skills_GET" and 2.............passed
Then skills User validates the StatusCode and StatusMessage from "Skills_GET" sheet and 2 row.passed
And JSON schema is valid for "GET" in Skills................................passed
And skills User should receive the skill in JSON body from "Skills_GET" and 2.passed
And check the Database for skills...........................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for Skills" name="Validate Skills Api with specific ID 4" time="0.682">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When User sends GET request on skill id from "Skills_GET" and 3.............passed
Then skills User validates the StatusCode and StatusMessage from "Skills_GET" sheet and 3 row.passed
And JSON schema is valid for "GET" in Skills................................passed
And skills User should receive the skill in JSON body from "Skills_GET" and 3.passed
And check the Database for skills...........................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for Skills" name="Validate Skills Api with specific ID 5" time="0.583">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When User sends GET request on skill id from "Skills_GET" and 4.............passed
Then skills User validates the StatusCode and StatusMessage from "Skills_GET" sheet and 4 row.passed
And JSON schema is valid for "GET" in Skills................................passed
And skills User should receive the skill in JSON body from "Skills_GET" and 4.passed
And check the Database for skills...........................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for Skills" name="Validate Skills Api with specific ID 6" time="0.175">
        <failure message="Unexpected character ('&lt;' (code 60)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')&#10; at [Source: (String)&quot;&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 3.2 Final//EN&quot;&gt;&#10;&lt;title&gt;404 Not Found&lt;/title&gt;&#10;&lt;h1&gt;Not Found&lt;/h1&gt;&#10;&lt;p&gt;The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.&lt;/p&gt;&#10;&quot;; line: 1, column: 2]" type="com.fasterxml.jackson.core.JsonParseException">
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When User sends GET request on skill id from "Skills_GET" and 5.............passed
Then skills User validates the StatusCode and StatusMessage from "Skills_GET" sheet and 5 row.failed
And JSON schema is valid for "GET" in Skills................................skipped
And skills User should receive the skill in JSON body from "Skills_GET" and 5.skipped
And check the Database for skills...........................................skipped

StackTrace:
com.fasterxml.jackson.core.JsonParseException: Unexpected character ('<' (code 60)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
"; line: 1, column: 2]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2005)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:802)
	at com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4762)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4668)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3630)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3598)
	at step_definition.SkillMaster.extractResponse(SkillMaster.java:305)
	at step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:291)
	at âœ½.skills User validates the StatusCode and StatusMessage from "Skills_GET" sheet and 5 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_GET.feature:13)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The POST method for Skills" name="Verify POST for a Skill when user logged with UserName with Password" time="0.962">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends POST request body in skills from "Skills_POST" and 0 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_POST" sheet and 0 row.passed
And JSON schema is valid for "POST" in Skills...............................passed
And skills User should receive the skill in JSON body from "Skills_POST" and 0.passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Skills" name="Verify POST for a Skill when user logged with UserName with Password 2" time="0.254">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends POST request body in skills from "Skills_POST" and 1 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_POST" sheet and 1 row.passed
And JSON schema is valid for "POST" in Skills...............................passed
And skills User should receive the skill in JSON body from "Skills_POST" and 1.passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Skills" name="Verify POST for a Skill when user logged with UserName with Password 3" time="0.288">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends POST request body in skills from "Skills_POST" and 2 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_POST" sheet and 2 row.passed
And JSON schema is valid for "POST" in Skills...............................passed
And skills User should receive the skill in JSON body from "Skills_POST" and 2.passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Skills" name="Verify POST for a Skill when user logged with UserName with Password 4" time="0.431">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends POST request body in skills from "Skills_POST" and 3 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_POST" sheet and 3 row.passed
And JSON schema is valid for "POST" in Skills...............................passed
And skills User should receive the skill in JSON body from "Skills_POST" and 3.passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Skills" name="Verify POST for a Skill when user logged with UserName with Password 5" time="0.4">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends POST request body in skills from "Skills_POST" and 4 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_POST" sheet and 4 row.passed
And JSON schema is valid for "POST" in Skills...............................passed
And skills User should receive the skill in JSON body from "Skills_POST" and 4.passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Skills" name="Verify POST for a Skill when user logged with UserName with Password 6" time="0.538">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends POST request body in skills from "Skills_POST" and 5 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_POST" sheet and 5 row.passed
And JSON schema is valid for "POST" in Skills...............................passed
And skills User should receive the skill in JSON body from "Skills_POST" and 5.passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Skills" name="Verify POST for a Skill when user logged with UserName with Password 7" time="0.851">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends POST request body in skills from "Skills_POST" and 6 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_POST" sheet and 6 row.passed
And JSON schema is valid for "POST" in Skills...............................passed
And skills User should receive the skill in JSON body from "Skills_POST" and 6.passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Skills" name="Verify POST for a Skill when user logged with UserName with Password 8" time="0.198">
        <failure message="expected [400] but found [201]" type="java.lang.AssertionError">
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends POST request body in skills from "Skills_POST" and 7 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_POST" sheet and 7 row.failed
And JSON schema is valid for "POST" in Skills...............................skipped
And skills User should receive the skill in JSON body from "Skills_POST" and 7.skipped
And skills check the Database...............................................skipped

StackTrace:
java.lang.AssertionError: expected [400] but found [201]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:652)
	at org.testng.Assert.assertEquals(Assert.java:662)
	at step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:289)
	at âœ½.skills User validates the StatusCode and StatusMessage from "Skills_POST" sheet and 7 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_POST.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The POST method for Skills" name="Verify if POST fails for improper format when user logged with UserName with Password" time="0.146">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends POST request body in text format skills from "Text_POST" and 0.passed
Then skills User validates the StatusCode and StatusMessage from "Text_POST" sheet and 0 row.passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Skills" name="Verify POST for a Skill when user logged with UserName with Password" time="0.149">
        <failure message="" type="java.lang.NullPointerException">
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends POST request body in skills from "Invalid_content_POST" and 0 with valid JSON Schema.failed
Then skills User validates the StatusCode and StatusMessage from "Invalid_content_POST" sheet and 0 row.skipped
And skills User should receive the skill in JSON body from "Invalid_content_POST" and 0.skipped
And skills check the Database...............................................skipped

StackTrace:
java.lang.NullPointerException
	at util.ExcelReader.readSheet(ExcelReader.java:58)
	at util.ExcelReader.getData(ExcelReader.java:28)
	at util.Send_Request_For_Method.Sent_request(Send_Request_For_Method.java:89)
	at step_definition.SkillMaster.user_sends_POST_request_body_from_and(SkillMaster.java:100)
	at âœ½.skills User sends POST request body in skills from "Invalid_content_POST" and 0 with valid JSON Schema(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_POST.feature:33)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The PUT method for Skills" name="Verify PUT for a Skill when user logged with UserName with Password" time="0.734">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends PUT request on id and request body in skills from "Skills_PUT" and 0 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_PUT" sheet and 0 row.passed
And JSON schema is valid for "PUT" in Skills................................passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Skills" name="Verify PUT for a Skill when user logged with UserName with Password 2" time="0.246">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends PUT request on id and request body in skills from "Skills_PUT" and 1 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_PUT" sheet and 1 row.passed
And JSON schema is valid for "PUT" in Skills................................passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Skills" name="Verify PUT for a Skill when user logged with UserName with Password 3" time="0.238">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends PUT request on id and request body in skills from "Skills_PUT" and 2 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_PUT" sheet and 2 row.passed
And JSON schema is valid for "PUT" in Skills................................passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Skills" name="Verify PUT for a Skill when user logged with UserName with Password 4" time="0.174">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends PUT request on id and request body in skills from "Skills_PUT" and 3 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_PUT" sheet and 3 row.passed
And JSON schema is valid for "PUT" in Skills................................passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Skills" name="Verify PUT for a Skill when user logged with UserName with Password 5" time="0.188">
        <failure message="Unexpected character ('&lt;' (code 60)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')&#10; at [Source: (String)&quot;&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 3.2 Final//EN&quot;&gt;&#10;&lt;title&gt;404 Not Found&lt;/title&gt;&#10;&lt;h1&gt;Not Found&lt;/h1&gt;&#10;&lt;p&gt;The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.&lt;/p&gt;&#10;&quot;; line: 1, column: 2]" type="com.fasterxml.jackson.core.JsonParseException">
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends PUT request on id and request body in skills from "Skills_PUT" and 4 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_PUT" sheet and 4 row.failed
And JSON schema is valid for "PUT" in Skills................................skipped
And skills check the Database...............................................skipped

StackTrace:
com.fasterxml.jackson.core.JsonParseException: Unexpected character ('<' (code 60)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
"; line: 1, column: 2]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2005)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:802)
	at com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4762)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4668)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3630)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3598)
	at step_definition.SkillMaster.extractResponse(SkillMaster.java:305)
	at step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:291)
	at âœ½.skills User validates the StatusCode and StatusMessage from "Skills_PUT" sheet and 4 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_PUT.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The PUT method for Skills" name="Verify PUT for a Skill when user logged with UserName with Password 6" time="0.252">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends PUT request on id and request body in skills from "Skills_PUT" and 5 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_PUT" sheet and 5 row.passed
And JSON schema is valid for "PUT" in Skills................................passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Skills" name="Verify PUT for a Skill when user logged with UserName with Password 7" time="0.479">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends PUT request on id and request body in skills from "Skills_PUT" and 6 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_PUT" sheet and 6 row.passed
And JSON schema is valid for "PUT" in Skills................................passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Skills" name="Verify PUT for a Skill when user logged with UserName with Password 8" time="0.312">
        <failure message="expected [400] but found [201]" type="java.lang.AssertionError">
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends PUT request on id and request body in skills from "Skills_PUT" and 7 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_PUT" sheet and 7 row.failed
And JSON schema is valid for "PUT" in Skills................................skipped
And skills check the Database...............................................skipped

StackTrace:
java.lang.AssertionError: expected [400] but found [201]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:652)
	at org.testng.Assert.assertEquals(Assert.java:662)
	at step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:289)
	at âœ½.skills User validates the StatusCode and StatusMessage from "Skills_PUT" sheet and 7 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_PUT.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The PUT method for Skills" name="Verify PUT for a Skill when user logged with UserName with Password 9" time="0.259">
        <failure message="expected [201] but found [404]" type="java.lang.AssertionError">
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends PUT request on id and request body in skills from "Skills_PUT" and 8 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Skills_PUT" sheet and 8 row.failed
And JSON schema is valid for "PUT" in Skills................................skipped
And skills check the Database...............................................skipped

StackTrace:
java.lang.AssertionError: expected [201] but found [404]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:652)
	at org.testng.Assert.assertEquals(Assert.java:662)
	at step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:289)
	at âœ½.skills User validates the StatusCode and StatusMessage from "Skills_PUT" sheet and 8 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_PUT.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The PUT method for Skills" name="Verify PUT for a Skill when user logged with UserName with Password 10" time="0.237">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends PUT request on id and request body in skills from "Invalid_content_PUT" and 0 with valid JSON Schema.passed
Then skills User validates the StatusCode and StatusMessage from "Invalid_content_PUT" sheet and 0 row.passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Skills" name="Verify PUT fails for a Skill with improper format when user logged with UserName with Password" time="0.347">
        <system-out>
            <![CDATA[Given Skills User is on Endpoint: url/Skills with valid username and password.passed
When skills User sends PUT request on id and request body in text format skills from "Text_PUT" and 0.passed
Then skills User validates the StatusCode and StatusMessage from "Text_PUT" sheet and 0 row.passed
And skills User should receive the skill in JSON body from "Text_PUT" and 0.passed
And skills check the Database...............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password" time="0.199">
        <system-out>
            <![CDATA[Given userSkill User with  username & password from "UserSkills_Authorization" and 0 is on Endpoint: url/UserSkills.passed
When userSkills User sends GET request......................................passed
Then userSkills User Checks for StatusCode StatusCode and StatusMessage from "UserSkills_Authorization" sheet and 0 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password 2" time="0.18">
        <system-out>
            <![CDATA[Given userSkill User with  username & password from "UserSkills_Authorization" and 1 is on Endpoint: url/UserSkills.passed
When userSkills User sends GET request......................................passed
Then userSkills User Checks for StatusCode StatusCode and StatusMessage from "UserSkills_Authorization" sheet and 1 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password 3" time="0.183">
        <system-out>
            <![CDATA[Given userSkill User with  username & password from "UserSkills_Authorization" and 2 is on Endpoint: url/UserSkills.passed
When userSkills User sends GET request......................................passed
Then userSkills User Checks for StatusCode StatusCode and StatusMessage from "UserSkills_Authorization" sheet and 2 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password 4" time="0.135">
        <system-out>
            <![CDATA[Given userSkill User with  username & password from "UserSkills_Authorization" and 3 is on Endpoint: url/UserSkills.passed
When userSkills User sends GET request......................................passed
Then userSkills User Checks for StatusCode StatusCode and StatusMessage from "UserSkills_Authorization" sheet and 3 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Delete user skills details" name="Validate the delete method for UserSkills" time="0.516">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends request id ON DELETE Method from "InputData_UserSkills_POST" and 0.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_DELETE" sheet and 0 row.passed
And userSkills users check the Database to validate deletion from "InputData_UserSkills_POST" sheet and 0 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Delete user skills details" name="Validate the delete method for UserSkills 2" time="0.487">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends request id ON DELETE Method from "InputData_UserSkills_DELETE" and 1.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_DELETE" sheet and 1 row.passed
And userSkills users check the Database to validate deletion from "InputData_UserSkills_DELETE" sheet and 1 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Delete user skills details" name="Validate the delete method for UserSkills 3" time="0.526">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends request id ON DELETE Method from "InputData_UserSkills_DELETE" and 2.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_DELETE" sheet and 2 row.passed
And userSkills users check the Database to validate deletion from "InputData_UserSkills_DELETE" sheet and 2 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Delete user skills details" name="Validate the delete method for UserSkills 4" time="0.478">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends request id ON DELETE Method from "InputData_UserSkills_DELETE" and 3.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_DELETE" sheet and 3 row.passed
And userSkills users check the Database to validate deletion from "InputData_UserSkills_DELETE" sheet and 3 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Delete user skills details" name="Validate the delete method for UserSkills 5" time="0.12">
        <failure message="expected object to not be null" type="java.lang.AssertionError">
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends request id ON DELETE Method from "InputData_UserSkills_DELETE" and 4.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_DELETE" sheet and 4 row.failed
And userSkills users check the Database to validate deletion from "InputData_UserSkills_DELETE" sheet and 4 row.skipped

StackTrace:
java.lang.AssertionError: expected object to not be null
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.assertNotNull(Assert.java:686)
	at org.testng.Assert.assertNotNull(Assert.java:671)
	at step_definition.UserSkills.userSkills_user_receives_status_code_with(UserSkills.java:258)
	at âœ½.userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_DELETE" sheet and 4 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/userSkills.feature/UserSkills_DELETE.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The GET method for UserSkills" name="Validate GET all UserSkills" time="0.074">
        <failure message="1 expectation failed.&#10;Response body doesn't match expectation.&#10;Expected: The content to match the given JSON schema.&#10;error: instance type (string) does not match any allowed primitive type (allowed: [&quot;integer&quot;])&#10;    level: &quot;error&quot;&#10;    schema: {&quot;loadingURI&quot;:&quot;file:/C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/target/test-classes/JSON_Schemas/user_skill_schema_GET_all.json#&quot;,&quot;pointer&quot;:&quot;/properties/UserSkillMapping/items/0/properties/Skill_id&quot;}&#10;    instance: {&quot;pointer&quot;:&quot;/UserSkillMapping/0/Skill_id&quot;}&#10;    domain: &quot;validation&quot;&#10;    keyword: &quot;type&quot;&#10;    found: &quot;string&quot;&#10;    expected: [&quot;integer&quot;]&#10;error: instance type (string) does not match any allowed primitive type (allowed: [&quot;integer&quot;])&#10;    level: &quot;error&quot;&#10;    schema: {&quot;loadingURI&quot;:&quot;file:/C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/target/test-classes/JSON_Schemas/user_skill_schema_GET_all.json#&quot;,&quot;pointer&quot;:&quot;/properties/UserSkillMapping/items/0/properties/months_of_exp&quot;}&#10;    instance: {&quot;pointer&quot;:&quot;/UserSkillMapping/0/months_of_exp&quot;}&#10;    domain: &quot;validation&quot;&#10;    keyword: &quot;type&quot;&#10;    found: &quot;string&quot;&#10;    expected: [&quot;integer&quot;]&#10;&#10;  Actual: {&#10;    &quot;UserSkillMapping&quot;: [&#10;        {&#10;            &quot;user_skill_id&quot;: &quot;US01&quot;,&#10;            &quot;user_id&quot;: &quot;U01&quot;,&#10;            &quot;Skill_id&quot;: &quot;2&quot;,&#10;            &quot;months_of_exp&quot;: &quot;24&quot;&#10;        },&#10;        {&#10;            &quot;user_skill_id&quot;: &quot;US02&quot;,&#10;            &quot;user_id&quot;: &quot;U02&quot;,&#10;            &quot;Skill_id&quot;: &quot;1&quot;,&#10;            &quot;months_of_exp&quot;: &quot;36&quot;&#10;        },&#10;        {&#10;            &quot;user_skill_id&quot;: &quot;US03&quot;,&#10;            &quot;user_id&quot;: &quot;U03&quot;,&#10;            &quot;Skill_id&quot;: &quot;2&quot;,&#10;            &quot;months_of_exp&quot;: &quot;12&quot;&#10;        },&#10;        {&#10;            &quot;user_skill_id&quot;: &quot;US05&quot;,&#10;            &quot;user_id&quot;: &quot;U05&quot;,&#10;            &quot;Skill_id&quot;: &quot;5&quot;,&#10;            &quot;months_of_exp&quot;: &quot;12&quot;&#10;        },&#10;        {&#10;            &quot;user_skill_id&quot;: &quot;US04&quot;,&#10;            &quot;user_id&quot;: &quot;U04&quot;,&#10;            &quot;Skill_id&quot;: &quot;6&quot;,&#10;            &quot;months_of_exp&quot;: &quot;36&quot;&#10;        },&#10;        {&#10;            &quot;user_skill_id&quot;: &quot;US06&quot;,&#10;            &quot;user_id&quot;: &quot;U06&quot;,&#10;            &quot;Skill_id&quot;: &quot;5&quot;,&#10;            &quot;months_of_exp&quot;: &quot;12&quot;&#10;        },&#10;        {&#10;            &quot;user_skill_id&quot;: &quot;US07&quot;,&#10;            &quot;user_id&quot;: &quot;U07&quot;,&#10;            &quot;Skill_id&quot;: &quot;2&quot;,&#10;            &quot;months_of_exp&quot;: &quot;12&quot;&#10;        },&#10;        {&#10;            &quot;user_skill_id&quot;: &quot;US09&quot;,&#10;            &quot;user_id&quot;: &quot;U09&quot;,&#10;            &quot;Skill_id&quot;: &quot;3&quot;,&#10;            &quot;months_of_exp&quot;: &quot;36&quot;&#10;        },&#10;        {&#10;            &quot;user_skill_id&quot;: &quot;US10&quot;,&#10;            &quot;user_id&quot;: &quot;U10&quot;,&#10;            &quot;Skill_id&quot;: &quot;2&quot;,&#10;            &quot;months_of_exp&quot;: &quot;10&quot;&#10;        },&#10;        {&#10;            &quot;user_skill_id&quot;: &quot;US08&quot;,&#10;            &quot;user_id&quot;: &quot;U08&quot;,&#10;            &quot;Skill_id&quot;: &quot;1&quot;,&#10;            &quot;months_of_exp&quot;: &quot;30&quot;&#10;        },&#10;        {&#10;            &quot;user_skill_id&quot;: &quot;US12&quot;,&#10;            &quot;user_id&quot;: &quot;U08&quot;,&#10;            &quot;Skill_id&quot;: &quot;4&quot;,&#10;            &quot;months_of_exp&quot;: &quot;12&quot;&#10;        }&#10;    ]&#10;}&#10;&#10;" type="java.lang.AssertionError">
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends GET request......................................passed
Then userSkills User validates StatusCode...................................passed
And userSkills JSON schema is valid.........................................failed
And check the Database for userSkills.......................................skipped

StackTrace:
java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: instance type (string) does not match any allowed primitive type (allowed: ["integer"])
    level: "error"
    schema: {"loadingURI":"file:/C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/target/test-classes/JSON_Schemas/user_skill_schema_GET_all.json#","pointer":"/properties/UserSkillMapping/items/0/properties/Skill_id"}
    instance: {"pointer":"/UserSkillMapping/0/Skill_id"}
    domain: "validation"
    keyword: "type"
    found: "string"
    expected: ["integer"]
error: instance type (string) does not match any allowed primitive type (allowed: ["integer"])
    level: "error"
    schema: {"loadingURI":"file:/C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/target/test-classes/JSON_Schemas/user_skill_schema_GET_all.json#","pointer":"/properties/UserSkillMapping/items/0/properties/months_of_exp"}
    instance: {"pointer":"/UserSkillMapping/0/months_of_exp"}
    domain: "validation"
    keyword: "type"
    found: "string"
    expected: ["integer"]

  Actual: {
    "UserSkillMapping": [
        {
            "user_skill_id": "US01",
            "user_id": "U01",
            "Skill_id": "2",
            "months_of_exp": "24"
        },
        {
            "user_skill_id": "US02",
            "user_id": "U02",
            "Skill_id": "1",
            "months_of_exp": "36"
        },
        {
            "user_skill_id": "US03",
            "user_id": "U03",
            "Skill_id": "2",
            "months_of_exp": "12"
        },
        {
            "user_skill_id": "US05",
            "user_id": "U05",
            "Skill_id": "5",
            "months_of_exp": "12"
        },
        {
            "user_skill_id": "US04",
            "user_id": "U04",
            "Skill_id": "6",
            "months_of_exp": "36"
        },
        {
            "user_skill_id": "US06",
            "user_id": "U06",
            "Skill_id": "5",
            "months_of_exp": "12"
        },
        {
            "user_skill_id": "US07",
            "user_id": "U07",
            "Skill_id": "2",
            "months_of_exp": "12"
        },
        {
            "user_skill_id": "US09",
            "user_id": "U09",
            "Skill_id": "3",
            "months_of_exp": "36"
        },
        {
            "user_skill_id": "US10",
            "user_id": "U10",
            "Skill_id": "2",
            "months_of_exp": "10"
        },
        {
            "user_skill_id": "US08",
            "user_id": "U08",
            "Skill_id": "1",
            "months_of_exp": "30"
        },
        {
            "user_skill_id": "US12",
            "user_id": "U08",
            "Skill_id": "4",
            "months_of_exp": "12"
        }
    ]
}


	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:97)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:256)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at util.JSON_Schema_Validation.cls_JSON_SchemaValidation(JSON_Schema_Validation.java:29)
	at step_definition.UserSkills.userSkills_json_schema_is_valid(UserSkills.java:193)
	at âœ½.userSkills JSON schema is valid(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/userSkills.feature/UserSkills_GET.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The GET method for UserSkills" name="Validate UserSkills Api with specific ID" time="0.561">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends GET request on  id from "InputData_UserSkills_GET" and 0.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_GET" sheet and 0 row.passed
And userSkills JSON schema is valid for "GET"...............................passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkills" name="Validate UserSkills Api with specific ID 2" time="0.396">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends GET request on  id from "InputData_UserSkills_GET" and 1.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_GET" sheet and 1 row.passed
And userSkills JSON schema is valid for "GET"...............................passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkills" name="Validate UserSkills Api with specific ID 3" time="0.38">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends GET request on  id from "InputData_UserSkills_GET" and 2.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_GET" sheet and 2 row.passed
And userSkills JSON schema is valid for "GET"...............................passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkills" name="Validate UserSkills Api with specific ID 4" time="0.407">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends GET request on  id from "InputData_UserSkills_GET" and 3.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_GET" sheet and 3 row.passed
And userSkills JSON schema is valid for "GET"...............................passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkills" name="Validate UserSkills Api with specific ID 5" time="0.449">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends GET request on  id from "InputData_UserSkills_GET" and 4.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_GET" sheet and 4 row.passed
And userSkills JSON schema is valid for "GET"...............................passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkills" name="Validate UserSkills Api with specific ID 6" time="0.095">
        <failure message="expected object to not be null" type="java.lang.AssertionError">
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends GET request on  id from "InputData_UserSkills_GET" and 5.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_GET" sheet and 5 row.failed
And userSkills JSON schema is valid for "GET"...............................skipped
And check the Database......................................................skipped

StackTrace:
java.lang.AssertionError: expected object to not be null
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.assertNotNull(Assert.java:686)
	at org.testng.Assert.assertNotNull(Assert.java:671)
	at step_definition.UserSkills.userSkills_user_receives_status_code_with(UserSkills.java:258)
	at âœ½.userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_GET" sheet and 5 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/userSkills.feature/UserSkills_GET.feature:12)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The POST method for UserSkills" name="Validate POST all UserSkills" time="0.558">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends POST request body from "InputData_UserSkills_POST" and 0 with valid JSON Schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_POST" sheet and 0 row.passed
And userSkills JSON schema is valid for "POST"..............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_POST" and 0.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for UserSkills" name="Validate POST all UserSkills 2" time="0.492">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends POST request body from "InputData_UserSkills_POST" and 1 with valid JSON Schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_POST" sheet and 1 row.passed
And userSkills JSON schema is valid for "POST"..............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_POST" and 1.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for UserSkills" name="Validate POST all UserSkills 3" time="0.465">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends POST request body from "InputData_UserSkills_POST" and 2 with valid JSON Schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_POST" sheet and 2 row.passed
And userSkills JSON schema is valid for "POST"..............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_POST" and 2.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for UserSkills" name="Validate POST all UserSkills 4" time="0.418">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends POST request body from "InputData_UserSkills_POST" and 3 with valid JSON Schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_POST" sheet and 3 row.passed
And userSkills JSON schema is valid for "POST"..............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_POST" and 3.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for UserSkills" name="Validate POST all UserSkills 5" time="0.486">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends POST request body from "InputData_UserSkills_POST" and 4 with valid JSON Schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_POST" sheet and 4 row.passed
And userSkills JSON schema is valid for "POST"..............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_POST" and 4.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for UserSkills" name="Validate POST all UserSkills 6" time="0.492">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends POST request body from "InputData_UserSkills_POST" and 5 with valid JSON Schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_POST" sheet and 5 row.passed
And userSkills JSON schema is valid for "POST"..............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_POST" and 5.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for UserSkills" name="Validate POST all UserSkills 7" time="0.433">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends POST request body from "InputData_UserSkills_POST" and 6 with valid JSON Schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_POST" sheet and 6 row.passed
And userSkills JSON schema is valid for "POST"..............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_POST" and 6.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for UserSkills" name="Validate POST all UserSkills 8" time="0.465">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends POST request body from "InputData_UserSkills_POST" and 7 with valid JSON Schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_POST" sheet and 7 row.passed
And userSkills JSON schema is valid for "POST"..............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_POST" and 7.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for UserSkills" name="Validate POST all UserSkills 9" time="0.502">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends POST request body from "InputData_UserSkills_POST" and 8 with valid JSON Schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_POST" sheet and 8 row.passed
And userSkills JSON schema is valid for "POST"..............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_POST" and 8.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for UserSkills" name="Validate PUT method for UserSkills" time="0.527">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends PUT request on id and request body from "InputData_UserSkills_PUT" and 0 with valid JSON schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_PUT" sheet and 0 row.passed
And userSkills JSON schema is valid for "PUT"...............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_PUT" and 0.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for UserSkills" name="Validate PUT method for UserSkills 2" time="0.557">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends PUT request on id and request body from "InputData_UserSkills_PUT" and 1 with valid JSON schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_PUT" sheet and 1 row.passed
And userSkills JSON schema is valid for "PUT"...............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_PUT" and 1.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for UserSkills" name="Validate PUT method for UserSkills 3" time="0.472">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends PUT request on id and request body from "InputData_UserSkills_PUT" and 2 with valid JSON schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_PUT" sheet and 2 row.passed
And userSkills JSON schema is valid for "PUT"...............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_PUT" and 2.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for UserSkills" name="Validate PUT method for UserSkills 4" time="0.459">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends PUT request on id and request body from "InputData_UserSkills_PUT" and 3 with valid JSON schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_PUT" sheet and 3 row.passed
And userSkills JSON schema is valid for "PUT"...............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_PUT" and 3.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for UserSkills" name="Validate PUT method for UserSkills 5" time="0.532">
        <system-out>
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User sends PUT request on id and request body from "InputData_UserSkills_PUT" and 4 with valid JSON schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_PUT" sheet and 4 row.passed
And userSkills JSON schema is valid for "PUT"...............................passed
And userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from "InputData_UserSkills_PUT" and 4.passed
And check the Database......................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for UserSkills" name="Validate creation time &amp; modification time for PUT method for UserSkills" time="0.877">
        <failure message="expected [2022-01-27 10:25:17.026599] but found [2022-01-27 10:25:14.001954]" type="java.lang.AssertionError">
            <![CDATA[Given userSkills User is on Endpoint: url/UserSkills with valid username and password.passed
When userSkills User check the database for creation time & modification time of a user with specified UserSkillsId from "InputData_UserSkills_PUT" and 0.passed
And userSkills User sends PUT request on id and request body from "InputData_UserSkills_PUT" and 0 with valid JSON schema.passed
Then userSkills User validates StatusCode and StatusMessage from "InputData_UserSkills_PUT" sheet and 0 row.passed
And userSkills User check the database for new creation time & modification time of a user with specified UserSkillsId from "InputData_UserSkills_PUT" and 0.passed
And userSkills User check that the creation time is same but modification is different..failed

StackTrace:
java.lang.AssertionError: expected [2022-01-27 10:25:17.026599] but found [2022-01-27 10:25:14.001954]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:453)
	at org.testng.Assert.assertEquals(Assert.java:463)
	at step_definition.UserSkills.user_skills_user_check_that_the_creation_time_is_same_but_modification_is_different(UserSkills.java:485)
	at âœ½.userSkills User check that the creation time is same but modification is different.(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/userSkills.feature/UserSkills_PUT.feature:26)
]]>
        </failure>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password" time="0.092">
        <system-out>
            <![CDATA[Given UserSkillsMap User with  username & password from "UserSkillsMap_Authorization" and 0  is on Endpoint: url/UserSkillsMap".passed
When UserSkillsMap User sends GET request...................................passed
Then UserSkillsMap User Checks for StatusCode StatusCode and StatusMessage from "UserSkillsMap_Authorization" sheet and 0 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password 2" time="0.159">
        <system-out>
            <![CDATA[Given UserSkillsMap User with  username & password from "UserSkillsMap_Authorization" and 1  is on Endpoint: url/UserSkillsMap".passed
When UserSkillsMap User sends GET request...................................passed
Then UserSkillsMap User Checks for StatusCode StatusCode and StatusMessage from "UserSkillsMap_Authorization" sheet and 1 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password 3" time="0.11">
        <system-out>
            <![CDATA[Given UserSkillsMap User with  username & password from "UserSkillsMap_Authorization" and 2  is on Endpoint: url/UserSkillsMap".passed
When UserSkillsMap User sends GET request...................................passed
Then UserSkillsMap User Checks for StatusCode StatusCode and StatusMessage from "UserSkillsMap_Authorization" sheet and 2 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password 4" time="0.229">
        <system-out>
            <![CDATA[Given UserSkillsMap User with  username & password from "UserSkillsMap_Authorization" and 3  is on Endpoint: url/UserSkillsMap".passed
When UserSkillsMap User sends GET request...................................passed
Then UserSkillsMap User Checks for StatusCode StatusCode and StatusMessage from "UserSkillsMap_Authorization" sheet and 3 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkillsMap API" name="Validate GET all User-to-skill mappings" time="0.189">
        <system-out>
            <![CDATA[Given UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password.passed
When UserSkillsMap User sends GET request...................................passed
Then UserSkillsMap User validates StatusCode................................passed
And UserSkillsMap JSON schema is valid......................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkillsMap API" name="Validate GET one particular User-to-skill mappings with specific user ID" time="0.342">
        <system-out>
            <![CDATA[Given UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password.passed
When UserSkillsMap_user User sends GET request on user id from "InputData_UserSkillsMap_userGET" and 0.passed
Then UserSkillsMap_user User validates StatusCode and StatusMessage from "InputData_UserSkillsMap_userGET" sheet and 0 row.passed
And UserSkillsMap JSON schema is valid......................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkillsMap API" name="Validate GET one particular User-to-skill mappings with specific user ID 2" time="0.13">
        <system-out>
            <![CDATA[Given UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password.passed
When UserSkillsMap_user User sends GET request on user id from "InputData_UserSkillsMap_userGET" and 1.passed
Then UserSkillsMap_user User validates StatusCode and StatusMessage from "InputData_UserSkillsMap_userGET" sheet and 1 row.passed
And UserSkillsMap JSON schema is valid......................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkillsMap API" name="Validate GET one particular User-to-skill mappings with specific user ID 3" time="0.105">
        <system-out>
            <![CDATA[Given UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password.passed
When UserSkillsMap_user User sends GET request on user id from "InputData_UserSkillsMap_userGET" and 2.passed
Then UserSkillsMap_user User validates StatusCode and StatusMessage from "InputData_UserSkillsMap_userGET" sheet and 2 row.passed
And UserSkillsMap JSON schema is valid......................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkillsMap API" name="Validate GET one particular User-to-skill mappings with specific user ID 4" time="0.125">
        <system-out>
            <![CDATA[Given UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password.passed
When UserSkillsMap_user User sends GET request on user id from "InputData_UserSkillsMap_userGET" and 3.passed
Then UserSkillsMap_user User validates StatusCode and StatusMessage from "InputData_UserSkillsMap_userGET" sheet and 3 row.passed
And UserSkillsMap JSON schema is valid......................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkillsMap API" name="Validate GET one particular Skill-to-users mappings with specific skill ID" time="0.125">
        <system-out>
            <![CDATA[Given UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password.passed
When UserSkillsMap_skill User sends GET request on user id from "InputData_UserSkillsMap_skilGET" and 0.passed
Then UserSkillsMap_skill User validates StatusCode and StatusMessage from "InputData_UserSkillsMap_skilGET" sheet and 0 row.passed
And UserSkillsMap_skill JSON schema is valid................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkillsMap API" name="Validate GET one particular Skill-to-users mappings with specific skill ID 2" time="0.116">
        <system-out>
            <![CDATA[Given UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password.passed
When UserSkillsMap_skill User sends GET request on user id from "InputData_UserSkillsMap_skilGET" and 1.passed
Then UserSkillsMap_skill User validates StatusCode and StatusMessage from "InputData_UserSkillsMap_skilGET" sheet and 1 row.passed
And UserSkillsMap_skill JSON schema is valid................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkillsMap API" name="Validate GET one particular Skill-to-users mappings with specific skill ID 3" time="0.107">
        <system-out>
            <![CDATA[Given UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password.passed
When UserSkillsMap_skill User sends GET request on user id from "InputData_UserSkillsMap_skilGET" and 2.passed
Then UserSkillsMap_skill User validates StatusCode and StatusMessage from "InputData_UserSkillsMap_skilGET" sheet and 2 row.passed
And UserSkillsMap_skill JSON schema is valid................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for UserSkillsMap API" name="Validate GET one particular Skill-to-users mappings with specific skill ID 4" time="0.103">
        <system-out>
            <![CDATA[Given UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password.passed
When UserSkillsMap_skill User sends GET request on user id from "InputData_UserSkillsMap_skilGET" and 3.passed
Then UserSkillsMap_skill User validates StatusCode and StatusMessage from "InputData_UserSkillsMap_skilGET" sheet and 3 row.passed
And UserSkillsMap_skill JSON schema is valid................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password" time="0.22">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users username & password from "Users_Authorization" and 0.passed
When UsersAPI User sends GET request........................................passed
Then UsersAPI User Checks for StatusCode StatusCode and StatusMessage from "Users_Authorization" sheet and 0 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password 2" time="0.158">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users username & password from "Users_Authorization" and 1.passed
When UsersAPI User sends GET request........................................passed
Then UsersAPI User Checks for StatusCode StatusCode and StatusMessage from "Users_Authorization" sheet and 1 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password 3" time="0.178">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users username & password from "Users_Authorization" and 2.passed
When UsersAPI User sends GET request........................................passed
Then UsersAPI User Checks for StatusCode StatusCode and StatusMessage from "Users_Authorization" sheet and 2 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Check the Authorization for LMS API" name="Check the Authorization with with different set of username &amp; password 4" time="0.215">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users username & password from "Users_Authorization" and 3.passed
When UsersAPI User sends GET request........................................passed
Then UsersAPI User Checks for StatusCode StatusCode and StatusMessage from "Users_Authorization" sheet and 3 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Delete Users details" name="Validate the delete method for Users" time="0.21">
        <failure message="expected [200] but found [404]" type="java.lang.AssertionError">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI user sends request id ON DELETE Method from "InputData_Users_POST" and 0.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_DELETE" sheet and 0 row.failed

StackTrace:
java.lang.AssertionError: expected [200] but found [404]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:652)
	at org.testng.Assert.assertEquals(Assert.java:662)
	at step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)
	at âœ½.UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_DELETE" sheet and 0 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_DELETE.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="Delete Users details" name="Validate the delete method for Users 2" time="0.38">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI user sends request id ON DELETE Method from "InputData_Users_DELETE" and 1.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_DELETE" sheet and 1 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Delete Users details" name="Validate the delete method for Users 3" time="0.347">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI user sends request id ON DELETE Method from "InputData_Users_DELETE" and 2.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_DELETE" sheet and 2 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Delete Users details" name="Validate the delete method for Users 4" time="0.349">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI user sends request id ON DELETE Method from "InputData_Users_DELETE" and 3.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_DELETE" sheet and 3 row.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Delete Users details" name="Validate the delete method for Users 5" time="0.208">
        <failure message="expected object to not be null" type="java.lang.AssertionError">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI user sends request id ON DELETE Method from "InputData_Users_DELETE" and 4.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_DELETE" sheet and 4 row.failed

StackTrace:
java.lang.AssertionError: expected object to not be null
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.assertNotNull(Assert.java:686)
	at org.testng.Assert.assertNotNull(Assert.java:671)
	at step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:199)
	at âœ½.UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_DELETE" sheet and 4 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_DELETE.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The GET method for Users" name="Validate GET all Users" time="0.025">
        <failure message="" type="java.lang.NullPointerException">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends GET request........................................passed
Then UsersAPI User validates StatusCode.....................................passed
And UsersAPI JSON schema is valid...........................................failed
And check the Database for all users........................................skipped

StackTrace:
java.lang.NullPointerException
	at java.base/java.util.Objects.requireNonNull(Objects.java:221)
	at java.base/java.lang.ClassLoader.getResource(ClassLoader.java:1392)
	at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)
	at util.JSON_Schema_Validation.cls_JSON_SchemaValidation(JSON_Schema_Validation.java:29)
	at step_definition.Users.UsersAPI_json_schema_is_valid(Users.java:121)
	at âœ½.UsersAPI JSON schema is valid(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_GET.feature:9)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The GET method for Users" name="Validate Users Api with specific ID" time="0.185">
        <failure message="" type="java.lang.NullPointerException">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends GET request on userid from "InputData_User_GET" and 0.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_User_GET" sheet and 0 row.passed
And UsersAPI JSON schema is valid for "GET".................................failed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_User_GET" and 0.skipped
And UsersAPI check the Database.............................................skipped

StackTrace:
java.lang.NullPointerException
	at java.base/java.util.Objects.requireNonNull(Objects.java:221)
	at java.base/java.lang.ClassLoader.getResource(ClassLoader.java:1392)
	at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)
	at util.JSON_Schema_Validation.cls_JSON_SchemaValidation(JSON_Schema_Validation.java:29)
	at step_definition.Users.UsersAPI_json_schema_is_valid_for(Users.java:150)
	at âœ½.UsersAPI JSON schema is valid for "GET"(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_GET.feature:15)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The GET method for Users" name="Validate Users Api with specific ID 2" time="0.672">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends GET request on userid from "InputData_User_GET" and 1.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_User_GET" sheet and 1 row.passed
And UsersAPI JSON schema is valid for "GET".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_User_GET" and 1.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for Users" name="Validate Users Api with specific ID 3" time="0.629">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends GET request on userid from "InputData_User_GET" and 2.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_User_GET" sheet and 2 row.passed
And UsersAPI JSON schema is valid for "GET".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_User_GET" and 2.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for Users" name="Validate Users Api with specific ID 4" time="0.608">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends GET request on userid from "InputData_User_GET" and 3.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_User_GET" sheet and 3 row.passed
And UsersAPI JSON schema is valid for "GET".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_User_GET" and 3.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for Users" name="Validate Users Api with specific ID 5" time="0.553">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends GET request on userid from "InputData_User_GET" and 4.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_User_GET" sheet and 4 row.passed
And UsersAPI JSON schema is valid for "GET".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_User_GET" and 4.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The GET method for Users" name="Validate Users Api with specific ID 6" time="0.152">
        <failure message="expected object to not be null" type="java.lang.AssertionError">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends GET request on userid from "InputData_User_GET" and 5.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_User_GET" sheet and 5 row.failed
And UsersAPI JSON schema is valid for "GET".................................skipped
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_User_GET" and 5.skipped
And UsersAPI check the Database.............................................skipped

StackTrace:
java.lang.AssertionError: expected object to not be null
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.assertNotNull(Assert.java:686)
	at org.testng.Assert.assertNotNull(Assert.java:671)
	at step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:199)
	at âœ½.UsersAPI User validates StatusCode and StatusMessage from "InputData_User_GET" sheet and 5 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_GET.feature:14)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users" time="0.901">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 0 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 0 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 0.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 2" time="0.577">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 1 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 1 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 1.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 3" time="0.925">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 2 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 2 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 2.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 4" time="0.644">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 3 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 3 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 3.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 5" time="0.562">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 4 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 4 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 4.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 6" time="0.667">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 5 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 5 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 5.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 7" time="0.557">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 6 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 6 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 6.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 8" time="0.626">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 7 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 7 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 7.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 9" time="0.601">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 8 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 8 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 8.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 10" time="0.744">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 9 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 9 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 9.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 11" time="0.299">
        <failure message="expected [400] but found [201]" type="java.lang.AssertionError">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 10 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 10 row.failed
And UsersAPI JSON schema is valid for "POST"................................skipped
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 10.skipped
And UsersAPI check the Database.............................................skipped

StackTrace:
java.lang.AssertionError: expected [400] but found [201]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:652)
	at org.testng.Assert.assertEquals(Assert.java:662)
	at step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)
	at âœ½.UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 10 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 12" time="0.188">
        <failure message="expected [400] but found [201]" type="java.lang.AssertionError">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 11 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 11 row.failed
And UsersAPI JSON schema is valid for "POST"................................skipped
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 11.skipped
And UsersAPI check the Database.............................................skipped

StackTrace:
java.lang.AssertionError: expected [400] but found [201]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:652)
	at org.testng.Assert.assertEquals(Assert.java:662)
	at step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)
	at âœ½.UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 11 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 13" time="0.573">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 12 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 12 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 12.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 14" time="0.661">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 13 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 13 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 13.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 15" time="0.663">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 14 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 14 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 14.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 16" time="0.536">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 15 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 15 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 15.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 17" time="0.565">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 16 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 16 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 16.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 18" time="0.648">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 17 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 17 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 17.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 19" time="0.194">
        <failure message="expected [201] but found [400]" type="java.lang.AssertionError">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 18 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 18 row.failed
And UsersAPI JSON schema is valid for "POST"................................skipped
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 18.skipped
And UsersAPI check the Database.............................................skipped

StackTrace:
java.lang.AssertionError: expected [201] but found [400]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:652)
	at org.testng.Assert.assertEquals(Assert.java:662)
	at step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)
	at âœ½.UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 18 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 20" time="0.548">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 19 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 19 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 19.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 21" time="0.526">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 20 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 20 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 20.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 22" time="0.604">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 21 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 21 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 21.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 23" time="0.559">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 22 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 22 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 22.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 24" time="0.603">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 23 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 23 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 23.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 25" time="0.163">
        <failure message="expected [400] but found [201]" type="java.lang.AssertionError">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 24 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 24 row.failed
And UsersAPI JSON schema is valid for "POST"................................skipped
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 24.skipped
And UsersAPI check the Database.............................................skipped

StackTrace:
java.lang.AssertionError: expected [400] but found [201]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:652)
	at org.testng.Assert.assertEquals(Assert.java:662)
	at step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)
	at âœ½.UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 24 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 26" time="0.156">
        <failure message="expected [FailedÂ toÂ create-invalida data] but found [Failed to create-invalid data]" type="java.lang.AssertionError">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 25 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 25 row.failed
And UsersAPI JSON schema is valid for "POST"................................skipped
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 25.skipped
And UsersAPI check the Database.............................................skipped

StackTrace:
java.lang.AssertionError: expected [FailedÂ toÂ create-invalida data] but found [Failed to create-invalid data]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:442)
	at step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:201)
	at âœ½.UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 25 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 27" time="0.165">
        <failure message="expected [FailedÂ toÂ create-invalida data] but found [Failed to create-invalid data]" type="java.lang.AssertionError">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "InputData_Users_POST" and 26 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 26 row.failed
And UsersAPI JSON schema is valid for "POST"................................skipped
And UsersAPI User should receive the user details in JSON body from "InputData_Users_POST" and 26.skipped
And UsersAPI check the Database.............................................skipped

StackTrace:
java.lang.AssertionError: expected [FailedÂ toÂ create-invalida data] but found [Failed to create-invalid data]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:442)
	at step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:201)
	at âœ½.UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_POST" sheet and 26 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 28" time="0.571">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "location_POST" and 0 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "location_POST" sheet and 0 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "location_POST" and 0.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 29" time="0.554">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "time_zone_POST" and 0 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "time_zone_POST" sheet and 0 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "time_zone_POST" and 0.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 30" time="0.672">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "linkedin_url_POST" and 0 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "linkedin_url_POST" sheet and 0 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "linkedin_url_POST" and 0.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 31" time="0.669">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "education_ug_POST" and 0 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "education_ug_POST" sheet and 0 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "education_ug_POST" and 0.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 32" time="0.58">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "education_pg_POST" and 0 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "education_pg_POST" sheet and 0 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "education_pg_POST" and 0.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 33" time="0.593">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "visa_status_POST" and 0 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "visa_status_POST" sheet and 0 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "visa_status_POST" and 0.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 34" time="0.593">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "comments_POST" and 0 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "comments_POST" sheet and 0 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "comments_POST" and 0.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The POST method for Users" name="Validate POST Users 35" time="0.493">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User  sends POST request body from "Invalid_Content" and 0 with valid JSON Schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "Invalid_Content" sheet and 0 row.passed
And UsersAPI JSON schema is valid for "POST"................................passed
And UsersAPI User should receive the user details in JSON body from "Invalid_Content" and 0.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users" time="0.667">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 0 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 0 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 0.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 2" time="0.604">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 1 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 1 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 1.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 3" time="0.628">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 2 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 2 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 2.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 4" time="0.674">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 3 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 3 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 3.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 5" time="0.647">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 4 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 4 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 4.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 6" time="0.66">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 5 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 5 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 5.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 7" time="0.551">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 6 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 6 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 6.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 8" time="0.638">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 7 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 7 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 7.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 9" time="0.592">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 8 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 8 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 8.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 10" time="0.613">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 9 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 9 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 9.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 11" time="0.56">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 10 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 10 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 10.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 12" time="0.559">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 11 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 11 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 11.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 13" time="0.73">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 12 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 12 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 12.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 14" time="0.604">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 13 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 13 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 13.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 15" time="0.632">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 14 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 14 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 14.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 16" time="0.56">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 15 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 15 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 15.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 17" time="0.178">
        <failure message="expected [400] but found [201]" type="java.lang.AssertionError">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 16 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 16 row.failed
And UsersAPI JSON schema is valid for "PUT".................................skipped
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 16.skipped
And UsersAPI check the Database.............................................skipped

StackTrace:
java.lang.AssertionError: expected [400] but found [201]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:652)
	at org.testng.Assert.assertEquals(Assert.java:662)
	at step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)
	at âœ½.UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 16 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_PUT.feature:8)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 18" time="0.627">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 17 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 17 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 17.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 19" time="0.563">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 18 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 18 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 18.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 20" time="0.6">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 19 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 19 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 19.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 21" time="0.873">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 20 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 20 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 20.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 22" time="0.612">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 21 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 21 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 21.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 23" time="0.594">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 22 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 22 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 22.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 24" time="0.228">
        <failure message="expected [400] but found [201]" type="java.lang.AssertionError">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 23 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 23 row.failed
And UsersAPI JSON schema is valid for "PUT".................................skipped
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 23.skipped
And UsersAPI check the Database.............................................skipped

StackTrace:
java.lang.AssertionError: expected [400] but found [201]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:652)
	at org.testng.Assert.assertEquals(Assert.java:662)
	at step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)
	at âœ½.UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 23 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_PUT.feature:8)
]]>
        </failure>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 25" time="0.705">
        <system-out>
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 24 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 24 row.passed
And UsersAPI JSON schema is valid for "PUT".................................passed
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 24.passed
And UsersAPI check the Database.............................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="To check The PUT method for Users" name="Validate PUT method for Users 26" time="0.246">
        <failure message="expected [0] but found [404]" type="java.lang.AssertionError">
            <![CDATA[Given UsersAPI User is on Endpoint: url/Users with valid username and password.passed
When UsersAPI User sends PUT request on id and request body from "InputData_Users_PUT" and 25 with valid JSON schema.passed
Then UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 25 row.failed
And UsersAPI JSON schema is valid for "PUT".................................skipped
And UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from "InputData_Users_PUT" and 25.skipped
And UsersAPI check the Database.............................................skipped

StackTrace:
java.lang.AssertionError: expected [0] but found [404]
	at org.testng.Assert.fail(Assert.java:96)
	at org.testng.Assert.failNotEquals(Assert.java:776)
	at org.testng.Assert.assertEqualsImpl(Assert.java:137)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:652)
	at org.testng.Assert.assertEquals(Assert.java:662)
	at step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:196)
	at âœ½.UsersAPI User validates StatusCode and StatusMessage from "InputData_Users_PUT" sheet and 25 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_PUT.feature:8)
]]>
        </failure>
    </testcase>
</testsuite>
