[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-01-28T02:05:26.230Z",
        "line": 11,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3584995700,
              "status": "passed"
            },
            "line": 4,
            "name": "Skills User with  username \u0026 password from \"Skills_Authorization\" and 0 is on Endpoint: url/Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 43
                },
                {
                  "val": "0",
                  "offset": 70
                }
              ],
              "location": "step_definition.SkillMaster.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2141993900,
              "status": "passed"
            },
            "line": 5,
            "name": "skills User sends GET request",
            "match": {
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skills()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 443004000,
              "status": "passed"
            },
            "line": 6,
            "name": "Skills User Checks for StatusCode StatusCode and StatusMessage from \"Skills_Authorization\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 68
                },
                {
                  "val": "0",
                  "offset": 101
                }
              ],
              "location": "step_definition.SkillMaster.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:33.292Z",
        "line": 12,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 403999700,
              "status": "passed"
            },
            "line": 4,
            "name": "Skills User with  username \u0026 password from \"Skills_Authorization\" and 1 is on Endpoint: url/Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 43
                },
                {
                  "val": "1",
                  "offset": 70
                }
              ],
              "location": "step_definition.SkillMaster.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49998500,
              "status": "passed"
            },
            "line": 5,
            "name": "skills User sends GET request",
            "match": {
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skills()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 268000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Skills User Checks for StatusCode StatusCode and StatusMessage from \"Skills_Authorization\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 68
                },
                {
                  "val": "1",
                  "offset": 101
                }
              ],
              "location": "step_definition.SkillMaster.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:34.172Z",
        "line": 13,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 288000800,
              "status": "passed"
            },
            "line": 4,
            "name": "Skills User with  username \u0026 password from \"Skills_Authorization\" and 2 is on Endpoint: url/Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 43
                },
                {
                  "val": "2",
                  "offset": 70
                }
              ],
              "location": "step_definition.SkillMaster.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 56999500,
              "status": "passed"
            },
            "line": 5,
            "name": "skills User sends GET request",
            "match": {
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skills()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 215998300,
              "status": "passed"
            },
            "line": 6,
            "name": "Skills User Checks for StatusCode StatusCode and StatusMessage from \"Skills_Authorization\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 68
                },
                {
                  "val": "2",
                  "offset": 101
                }
              ],
              "location": "step_definition.SkillMaster.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:34.946Z",
        "line": 14,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 295997300,
              "status": "passed"
            },
            "line": 4,
            "name": "Skills User with  username \u0026 password from \"Skills_Authorization\" and 3 is on Endpoint: url/Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 43
                },
                {
                  "val": "3",
                  "offset": 70
                }
              ],
              "location": "step_definition.SkillMaster.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 132001200,
              "status": "passed"
            },
            "line": 5,
            "name": "skills User sends GET request",
            "match": {
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skills()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 227996800,
              "status": "passed"
            },
            "line": 6,
            "name": "Skills User Checks for StatusCode StatusCode and StatusMessage from \"Skills_Authorization\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_Authorization\"",
                  "offset": 68
                },
                {
                  "val": "3",
                  "offset": 101
                }
              ],
              "location": "step_definition.SkillMaster.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Check the Authorization for LMS API",
    "description": "",
    "id": "check-the-authorization-for-lms-api",
    "keyword": "Feature",
    "uri": "file:src/test/resources/skillMaster.feature/SkillMaster_Authorization.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 11003200,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:35.752Z",
        "line": 12,
        "name": "Validate DELETE Skills when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-delete-method-for-skills;validate-delete-skills-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 446527400,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends DELETE skill id ON DELETE Method from \"Skills_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 56
                },
                {
                  "val": "0",
                  "offset": 74
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_delete_skill_id_on_delete_method_from_and_row_number(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 771510600,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_DELETE\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 86
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 216996800,
              "status": "passed"
            },
            "line": 8,
            "name": "skills User checks the Database to validate deletion from \"Skills_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 82
                }
              ],
              "location": "step_definition.SkillMaster.skills_user_check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 9998000,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:37.361Z",
        "line": 13,
        "name": "Validate DELETE Skills when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-delete-method-for-skills;validate-delete-skills-when-user-logged-with-username-with-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 311985400,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends DELETE skill id ON DELETE Method from \"Skills_DELETE\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 56
                },
                {
                  "val": "1",
                  "offset": 76
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_delete_skill_id_on_delete_method_from_and_row_number(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 235986900,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_DELETE\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 86
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 284998600,
              "status": "passed"
            },
            "line": 8,
            "name": "skills User checks the Database to validate deletion from \"Skills_DELETE\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.skills_user_check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6989300,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:38.322Z",
        "line": 14,
        "name": "Validate DELETE Skills when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-delete-method-for-skills;validate-delete-skills-when-user-logged-with-username-with-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 397998300,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends DELETE skill id ON DELETE Method from \"Skills_DELETE\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 56
                },
                {
                  "val": "2",
                  "offset": 76
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_delete_skill_id_on_delete_method_from_and_row_number(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 312001400,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_DELETE\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 86
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 261999300,
              "status": "passed"
            },
            "line": 8,
            "name": "skills User checks the Database to validate deletion from \"Skills_DELETE\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.skills_user_check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 18984300,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:39.441Z",
        "line": 15,
        "name": "Validate DELETE Skills when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-delete-method-for-skills;validate-delete-skills-when-user-logged-with-username-with-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 218995300,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends DELETE skill id ON DELETE Method from \"Skills_DELETE\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 56
                },
                {
                  "val": "3",
                  "offset": 76
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_delete_skill_id_on_delete_method_from_and_row_number(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 113998600,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_DELETE\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 86
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 203001400,
              "status": "passed"
            },
            "line": 8,
            "name": "skills User checks the Database to validate deletion from \"Skills_DELETE\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "3",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.skills_user_check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 8996800,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:40.067Z",
        "line": 16,
        "name": "Validate DELETE Skills when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-delete-method-for-skills;validate-delete-skills-when-user-logged-with-username-with-password;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 193000300,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends DELETE skill id ON DELETE Method from \"Skills_DELETE\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 56
                },
                {
                  "val": "4",
                  "offset": 76
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_delete_skill_id_on_delete_method_from_and_row_number(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "com.fasterxml.jackson.core.JsonParseException: Unexpected character (\u0027\u003c\u0027 (code 60)): expected a valid value (JSON String, Number, Array, Object or token \u0027null\u0027, \u0027true\u0027 or \u0027false\u0027)\n at [Source: (String)\"\u003c!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"\u003e\n\u003ctitle\u003e404 Not Found\u003c/title\u003e\n\u003ch1\u003eNot Found\u003c/h1\u003e\n\u003cp\u003eThe requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.\u003c/p\u003e\n\"; line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2005)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:802)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4762)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4668)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3630)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3598)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.SkillMaster.extractResponse(SkillMaster.java:370)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:356)\r\n\tat ✽.skills User validates the StatusCode and StatusMessage from \"Skills_DELETE\" sheet and 4 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_DELETE.feature:7)\r\n",
              "duration": 287999700,
              "status": "failed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_DELETE\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 86
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2999800,
              "status": "skipped"
            },
            "line": 8,
            "name": "skills User checks the Database to validate deletion from \"Skills_DELETE\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "4",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.skills_user_check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The DELETE method for Skills",
    "description": "",
    "id": "to-check-the-delete-method-for-skills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/skillMaster.feature/SkillMaster_DELETE.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5997300,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:40.714Z",
        "line": 5,
        "name": "Verify GET all Skills for Skill Master",
        "description": "",
        "id": "to-check-the-get-method-for-skills;verify-get-all-skills-for-skill-master",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "error_message": "java.net.URISyntaxException: Illegal character in path at index 29: http://127.0.0.1:5000/Skills/    \r\n\tat java.base/java.net.URI$Parser.fail(URI.java:2913)\r\n\tat java.base/java.net.URI$Parser.checkChars(URI.java:3084)\r\n\tat java.base/java.net.URI$Parser.parseHierarchical(URI.java:3166)\r\n\tat java.base/java.net.URI$Parser.parse(URI.java:3114)\r\n\tat java.base/java.net.URI.\u003cinit\u003e(URI.java:600)\r\n\tat java.base/jdk.internal.reflect.GeneratedConstructorAccessor50.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)\r\n\tat io.restassured.internal.RequestSpecificationImpl.getTargetPath(RequestSpecificationImpl.groovy:1452)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)\r\n\tat io.restassured.internal.RequestSpecificationImpl.getPathParamPlaceholders(RequestSpecificationImpl.groovy:2063)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor176.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:161)\r\n\tat io.restassured.internal.RequestSpecificationImpl.getRedundantNamedPathParams(RequestSpecificationImpl.groovy:2329)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:161)\r\n\tat io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1300)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:161)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1228)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:152)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1749)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1755)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:171)\r\n\tat io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/util.Send_Request_For_Method.Sent_request(Send_Request_For_Method.java:237)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.SkillMaster.user_sends_get_request_on_skills(SkillMaster.java:101)\r\n\tat ✽.skills User sends GET request(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_GET.feature:6)\r\n",
              "duration": 34998500,
              "status": "failed"
            },
            "line": 6,
            "name": "skills User sends GET request",
            "match": {
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skills()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000200,
              "status": "skipped"
            },
            "line": 7,
            "name": "skills User validates StatusCode",
            "match": {
              "location": "step_definition.SkillMaster.user_validates_the_status_code()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "skills JSON schema is valid",
            "match": {
              "location": "step_definition.SkillMaster.json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4000400,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:40.943Z",
        "line": 19,
        "name": "Validate Skills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-skills;validate-skills-api-with-specific-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 230994800,
              "status": "passed"
            },
            "line": 12,
            "name": "User sends GET request on skill id from \"Skills_GET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 40
                },
                {
                  "val": "0",
                  "offset": 57
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skill_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 171997500,
              "status": "passed"
            },
            "line": 13,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 913996600,
              "status": "passed"
            },
            "line": 14,
            "name": "JSON schema is valid for \"GET\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 207987600,
              "status": "passed"
            },
            "line": 15,
            "name": "skills User should receive the skill in JSON body from \"Skills_GET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 55
                },
                {
                  "val": "0",
                  "offset": 72
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [8] but found [4]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:453)\r\n\tat org.testng.Assert.assertEquals(Assert.java:463)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.SkillMaster.check_the_database_for_all_skills(SkillMaster.java:422)\r\n\tat ✽.check the Database for skills(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_GET.feature:16)\r\n",
              "duration": 1193995100,
              "status": "failed"
            },
            "line": 16,
            "name": "check the Database for skills",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database_for_all_skills()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5002700,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:43.779Z",
        "line": 20,
        "name": "Validate Skills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-skills;validate-skills-api-with-specific-id;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 213998000,
              "status": "passed"
            },
            "line": 12,
            "name": "User sends GET request on skill id from \"Skills_GET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 40
                },
                {
                  "val": "1",
                  "offset": 57
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skill_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 145010200,
              "status": "passed"
            },
            "line": 13,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2975800,
              "status": "passed"
            },
            "line": 14,
            "name": "JSON schema is valid for \"GET\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 193997300,
              "status": "passed"
            },
            "line": 15,
            "name": "skills User should receive the skill in JSON body from \"Skills_GET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 55
                },
                {
                  "val": "1",
                  "offset": 72
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 569997600,
              "status": "passed"
            },
            "line": 16,
            "name": "check the Database for skills",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database_for_all_skills()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5000800,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:44.988Z",
        "line": 21,
        "name": "Validate Skills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-skills;validate-skills-api-with-specific-id;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 352003700,
              "status": "passed"
            },
            "line": 12,
            "name": "User sends GET request on skill id from \"Skills_GET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 40
                },
                {
                  "val": "2",
                  "offset": 57
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skill_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 175989000,
              "status": "passed"
            },
            "line": 13,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000600,
              "status": "passed"
            },
            "line": 14,
            "name": "JSON schema is valid for \"GET\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 238997600,
              "status": "passed"
            },
            "line": 15,
            "name": "skills User should receive the skill in JSON body from \"Skills_GET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 55
                },
                {
                  "val": "2",
                  "offset": 72
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 776000200,
              "status": "passed"
            },
            "line": 16,
            "name": "check the Database for skills",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database_for_all_skills()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 12000900,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:46.589Z",
        "line": 22,
        "name": "Validate Skills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-skills;validate-skills-api-with-specific-id;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 340996800,
              "status": "passed"
            },
            "line": 12,
            "name": "User sends GET request on skill id from \"Skills_GET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 40
                },
                {
                  "val": "3",
                  "offset": 57
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skill_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 140026800,
              "status": "passed"
            },
            "line": 13,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 14,
            "name": "JSON schema is valid for \"GET\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 202000200,
              "status": "passed"
            },
            "line": 15,
            "name": "skills User should receive the skill in JSON body from \"Skills_GET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 55
                },
                {
                  "val": "3",
                  "offset": 72
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 629996300,
              "status": "passed"
            },
            "line": 16,
            "name": "check the Database for skills",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database_for_all_skills()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 19016400,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:47.967Z",
        "line": 23,
        "name": "Validate Skills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-skills;validate-skills-api-with-specific-id;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 209000200,
              "status": "passed"
            },
            "line": 12,
            "name": "User sends GET request on skill id from \"Skills_GET\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 40
                },
                {
                  "val": "4",
                  "offset": 57
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skill_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 198008400,
              "status": "passed"
            },
            "line": 13,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "JSON schema is valid for \"GET\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 300998100,
              "status": "passed"
            },
            "line": 15,
            "name": "skills User should receive the skill in JSON body from \"Skills_GET\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 55
                },
                {
                  "val": "4",
                  "offset": 72
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 579001300,
              "status": "passed"
            },
            "line": 16,
            "name": "check the Database for skills",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database_for_all_skills()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 17001000,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:49.330Z",
        "line": 24,
        "name": "Validate Skills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-skills;validate-skills-api-with-specific-id;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 196000000,
              "status": "passed"
            },
            "line": 12,
            "name": "User sends GET request on skill id from \"Skills_GET\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 40
                },
                {
                  "val": "5",
                  "offset": 57
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_get_request_on_skill_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "com.fasterxml.jackson.core.JsonParseException: Unexpected character (\u0027\u003c\u0027 (code 60)): expected a valid value (JSON String, Number, Array, Object or token \u0027null\u0027, \u0027true\u0027 or \u0027false\u0027)\n at [Source: (String)\"\u003c!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"\u003e\n\u003ctitle\u003e404 Not Found\u003c/title\u003e\n\u003ch1\u003eNot Found\u003c/h1\u003e\n\u003cp\u003eThe requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.\u003c/p\u003e\n\"; line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2005)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:802)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4762)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4668)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3630)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3598)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.SkillMaster.extractResponse(SkillMaster.java:370)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:356)\r\n\tat ✽.skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 5 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_GET.feature:13)\r\n",
              "duration": 178000500,
              "status": "failed"
            },
            "line": 13,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_GET\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 60
                },
                {
                  "val": "5",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1002300,
              "status": "skipped"
            },
            "line": 14,
            "name": "JSON schema is valid for \"GET\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1997900,
              "status": "skipped"
            },
            "line": 15,
            "name": "skills User should receive the skill in JSON body from \"Skills_GET\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_GET\"",
                  "offset": 55
                },
                {
                  "val": "5",
                  "offset": 72
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "check the Database for skills",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database_for_all_skills()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The GET method for Skills",
    "description": "",
    "id": "to-check-the-get-method-for-skills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/skillMaster.feature/SkillMaster_GET.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 12001300,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:49.900Z",
        "line": 13,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1151997400,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "0",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 240001100,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15037400,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 262005800,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "0",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 571008900,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6000400,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:52.254Z",
        "line": 14,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 116997700,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 1 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "1",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 115999500,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1006000,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 257995600,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "1",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2987100,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6001100,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:52.833Z",
        "line": 15,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 172997000,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 2 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "2",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 152997200,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003500,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 310998700,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "2",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1002000,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6998200,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:53.580Z",
        "line": 16,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 277001000,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 3 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "3",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 321997500,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000700,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 251998200,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "3",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1013900,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 7004600,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:54.572Z",
        "line": 17,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 262997400,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 4 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "4",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 236996400,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 992600,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 285006500,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "4",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4991100,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6010100,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:55.566Z",
        "line": 18,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 449991100,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 5 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "5",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 137000900,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "5",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2995800,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 166005100,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "5",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000600,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6998300,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:56.469Z",
        "line": 19,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 429998900,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 6 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "6",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 250988600,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 6 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "6",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31006100,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 183013500,
              "status": "passed"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 6",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "6",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 721997600,
              "status": "passed"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 17001600,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:58.149Z",
        "line": 20,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 231000800,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends POST request body in skills from \"Skills_POST\" and 7 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 51
                },
                {
                  "val": "7",
                  "offset": 69
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:354)\r\n\tat ✽.skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 7 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_POST.feature:7)\r\n",
              "duration": 266999200,
              "status": "failed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_POST\" sheet and 7 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 60
                },
                {
                  "val": "7",
                  "offset": 84
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1004900,
              "status": "skipped"
            },
            "line": 8,
            "name": "JSON schema is valid for \"POST\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 996800,
              "status": "skipped"
            },
            "line": 9,
            "name": "skills User should receive the skill in JSON body from \"Skills_POST\" and 7",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_POST\"",
                  "offset": 55
                },
                {
                  "val": "7",
                  "offset": 73
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1002000,
              "status": "skipped"
            },
            "line": 10,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4997700,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:58.748Z",
        "line": 28,
        "name": "Verify if POST fails for improper format when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-if-post-fails-for-improper-format-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 171999300,
              "status": "passed"
            },
            "line": 23,
            "name": "skills User sends POST request body in text format skills from \"Text_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Text_POST\"",
                  "offset": 63
                },
                {
                  "val": "0",
                  "offset": 79
                }
              ],
              "location": "step_definition.SkillMaster.skills_User_sends_POST_request_body_in_text_format_skills_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 132998100,
              "status": "passed"
            },
            "line": 24,
            "name": "skills User validates the StatusCode and StatusMessage from \"Text_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Text_POST\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 82
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2997900,
              "status": "passed"
            },
            "line": 25,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5004200,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:59.109Z",
        "line": 40,
        "name": "Verify POST for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-post-method-for-skills;verify-post-for-a-skill-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/util.ExcelReader.readSheet(ExcelReader.java:77)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/util.ExcelReader.getData(ExcelReader.java:37)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/util.Send_Request_For_Method.Sent_request(Send_Request_For_Method.java:89)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.SkillMaster.user_sends_POST_request_body_from_and(SkillMaster.java:134)\r\n\tat ✽.skills User sends POST request body in skills from \"Invalid_content_POST\" and 0 with valid JSON Schema(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_POST.feature:33)\r\n",
              "duration": 148995700,
              "status": "failed"
            },
            "line": 33,
            "name": "skills User sends POST request body in skills from \"Invalid_content_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_content_POST\"",
                  "offset": 51
                },
                {
                  "val": "0",
                  "offset": 78
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_POST_request_body_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1002400,
              "status": "skipped"
            },
            "line": 34,
            "name": "skills User validates the StatusCode and StatusMessage from \"Invalid_content_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_content_POST\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 93
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001900,
              "status": "skipped"
            },
            "line": 35,
            "name": "skills User should receive the skill in JSON body from \"Invalid_content_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_content_POST\"",
                  "offset": 55
                },
                {
                  "val": "0",
                  "offset": 82
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1001200,
              "status": "skipped"
            },
            "line": 36,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The POST method for Skills",
    "description": "",
    "id": "to-check-the-post-method-for-skills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/skillMaster.feature/SkillMaster_POST.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4999900,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:05:59.332Z",
        "line": 12,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 280997600,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "0",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 129002400,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 25996100,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 795998900,
              "status": "passed"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4000800,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:00.657Z",
        "line": 13,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 317000700,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 1 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "1",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 139999000,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003400,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11996900,
              "status": "passed"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 7999900,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:01.208Z",
        "line": 14,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 285995800,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 2 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "2",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 123001600,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001900,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2996900,
              "status": "passed"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5001300,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:01.704Z",
        "line": 15,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 347996100,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 3 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "3",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 117005600,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7997000,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1003700,
              "status": "passed"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5003600,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:02.247Z",
        "line": 16,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 302998000,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 4 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "4",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "com.fasterxml.jackson.core.JsonParseException: Unexpected character (\u0027\u003c\u0027 (code 60)): expected a valid value (JSON String, Number, Array, Object or token \u0027null\u0027, \u0027true\u0027 or \u0027false\u0027)\n at [Source: (String)\"\u003c!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"\u003e\n\u003ctitle\u003e404 Not Found\u003c/title\u003e\n\u003ch1\u003eNot Found\u003c/h1\u003e\n\u003cp\u003eThe requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.\u003c/p\u003e\n\"; line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2005)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:802)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4762)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4668)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3630)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3598)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.SkillMaster.extractResponse(SkillMaster.java:370)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:356)\r\n\tat ✽.skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 4 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_PUT.feature:7)\r\n",
              "duration": 123000700,
              "status": "failed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1001200,
              "status": "skipped"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 12001900,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:02.802Z",
        "line": 17,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 506994700,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 5 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "5",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 96999400,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "5",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003000,
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8003100,
              "status": "passed"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 29999800,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:03.557Z",
        "line": 18,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 443996500,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 6 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "6",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 138000900,
              "status": "passed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 6 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "6",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1002000,
              "status": "passed"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 35995800,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:04.264Z",
        "line": 19,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 366001400,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 7 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "7",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:354)\r\n\tat ✽.skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 7 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_PUT.feature:7)\r\n",
              "duration": 87998200,
              "status": "failed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 7 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "7",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 996500,
              "status": "skipped"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 7997600,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:04.837Z",
        "line": 20,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 217999600,
              "status": "passed"
            },
            "line": 6,
            "name": "skills User sends PUT request on id and request body in skills from \"Skills_PUT\" and 8 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 68
                },
                {
                  "val": "8",
                  "offset": 85
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [201] but found [404]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(SkillMaster.java:354)\r\n\tat ✽.skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 8 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/skillMaster.feature/SkillMaster_PUT.feature:7)\r\n",
              "duration": 82997600,
              "status": "failed"
            },
            "line": 7,
            "name": "skills User validates the StatusCode and StatusMessage from \"Skills_PUT\" sheet and 8 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Skills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "8",
                  "offset": 83
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 984800,
              "status": "skipped"
            },
            "line": 8,
            "name": "JSON schema is valid for \"PUT\" in Skills",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 25
                }
              ],
              "location": "step_definition.SkillMaster.json_schema_is_valid_for_get_in_skills(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1002600,
              "status": "skipped"
            },
            "line": 9,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6002800,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:05.221Z",
        "line": 29,
        "name": "Verify PUT for a Skill when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-for-a-skill-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 243000200,
              "status": "passed"
            },
            "line": 24,
            "name": "skills User sends PUT request on id and request body in skills from \"Invalid_content_PUT\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_content_PUT\"",
                  "offset": 68
                },
                {
                  "val": "0",
                  "offset": 94
                }
              ],
              "location": "step_definition.SkillMaster.user_sends_put_request_body_in_skills_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 83999300,
              "status": "passed"
            },
            "line": 25,
            "name": "skills User validates the StatusCode and StatusMessage from \"Invalid_content_PUT\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_content_PUT\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 92
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003200,
              "status": "passed"
            },
            "line": 26,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5025100,
              "status": "passed"
            },
            "line": 3,
            "name": "Skills User is on Endpoint: url/Skills with valid username and password",
            "match": {
              "location": "step_definition.SkillMaster.skills_user_is_on_endpoint_url_user_skills()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:05.629Z",
        "line": 39,
        "name": "Verify PUT fails for a Skill with improper format when user logged with UserName with Password",
        "description": "",
        "id": "to-check-the-put-method-for-skills;verify-put-fails-for-a-skill-with-improper-format-when-user-logged-with-username-with-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 102995600,
              "status": "passed"
            },
            "line": 33,
            "name": "skills User sends PUT request on id and request body in text format skills from \"Text_PUT\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Text_PUT\"",
                  "offset": 80
                },
                {
                  "val": "0",
                  "offset": 95
                }
              ],
              "location": "step_definition.SkillMaster.skills_User_sends_PUT_request_body_in_text_format_skills_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 86000200,
              "status": "passed"
            },
            "line": 34,
            "name": "skills User validates the StatusCode and StatusMessage from \"Text_PUT\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Text_PUT\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 81
                }
              ],
              "location": "step_definition.SkillMaster.user_validates_the_statuscode_and_statusmessage_from(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 108991900,
              "status": "passed"
            },
            "line": 35,
            "name": "skills User should receive the skill in JSON body from \"Text_PUT\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Text_PUT\"",
                  "offset": 55
                },
                {
                  "val": "0",
                  "offset": 70
                }
              ],
              "location": "step_definition.SkillMaster.user_should_receive_created_skill_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2004800,
              "status": "passed"
            },
            "line": 36,
            "name": "skills check the Database",
            "match": {
              "location": "step_definition.SkillMaster.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The PUT method for Skills",
    "description": "",
    "id": "to-check-the-put-method-for-skills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/skillMaster.feature/SkillMaster_PUT.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-01-28T02:06:05.989Z",
        "line": 11,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 150996500,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkill User with  username \u0026 password from \"UserSkills_Authorization\" and 0 is on Endpoint: url/UserSkills",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 46
                },
                {
                  "val": "0",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.user_skill_user_with_username_password_from_and_is_on_endpoint_url_user_skills(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 43002600,
              "status": "passed"
            },
            "line": 5,
            "name": "userSkills User sends GET request",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_sends_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 76998100,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User Checks for StatusCode StatusCode and StatusMessage from \"UserSkills_Authorization\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 72
                },
                {
                  "val": "0",
                  "offset": 109
                }
              ],
              "location": "step_definition.UserSkills.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:06.314Z",
        "line": 12,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 102002200,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkill User with  username \u0026 password from \"UserSkills_Authorization\" and 1 is on Endpoint: url/UserSkills",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 46
                },
                {
                  "val": "1",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.user_skill_user_with_username_password_from_and_is_on_endpoint_url_user_skills(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 42995300,
              "status": "passed"
            },
            "line": 5,
            "name": "userSkills User sends GET request",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_sends_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 100997600,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User Checks for StatusCode StatusCode and StatusMessage from \"UserSkills_Authorization\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 72
                },
                {
                  "val": "1",
                  "offset": 109
                }
              ],
              "location": "step_definition.UserSkills.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:06.625Z",
        "line": 13,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 83000700,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkill User with  username \u0026 password from \"UserSkills_Authorization\" and 2 is on Endpoint: url/UserSkills",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 46
                },
                {
                  "val": "2",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.user_skill_user_with_username_password_from_and_is_on_endpoint_url_user_skills(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14999200,
              "status": "passed"
            },
            "line": 5,
            "name": "userSkills User sends GET request",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_sends_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 58995700,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User Checks for StatusCode StatusCode and StatusMessage from \"UserSkills_Authorization\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 72
                },
                {
                  "val": "2",
                  "offset": 109
                }
              ],
              "location": "step_definition.UserSkills.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:06.818Z",
        "line": 14,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 75000400,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkill User with  username \u0026 password from \"UserSkills_Authorization\" and 3 is on Endpoint: url/UserSkills",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 46
                },
                {
                  "val": "3",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.user_skill_user_with_username_password_from_and_is_on_endpoint_url_user_skills(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 27025900,
              "status": "passed"
            },
            "line": 5,
            "name": "userSkills User sends GET request",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_sends_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 61996400,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User Checks for StatusCode StatusCode and StatusMessage from \"UserSkills_Authorization\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkills_Authorization\"",
                  "offset": 72
                },
                {
                  "val": "3",
                  "offset": 109
                }
              ],
              "location": "step_definition.UserSkills.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Check the Authorization for LMS API",
    "description": "",
    "id": "check-the-authorization-for-lms-api",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkills.feature/UserSkills_Authorization.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3997300,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:07.037Z",
        "line": 12,
        "name": "Validate the delete method for UserSkills",
        "description": "",
        "id": "delete-user-skills-details;validate-the-delete-method-for-userskills;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 205995700,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends request id ON DELETE Method from \"InputData_UserSkills_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 55
                },
                {
                  "val": "0",
                  "offset": 87
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_on_DELETE_method(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 64001100,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_DELETE\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 100
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 662972800,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills users check the Database to validate deletion from \"InputData_UserSkills_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 62
                },
                {
                  "val": "0",
                  "offset": 100
                }
              ],
              "location": "step_definition.UserSkills.check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6002500,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:08.015Z",
        "line": 13,
        "name": "Validate the delete method for UserSkills",
        "description": "",
        "id": "delete-user-skills-details;validate-the-delete-method-for-userskills;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 100997800,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends request id ON DELETE Method from \"InputData_UserSkills_DELETE\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 55
                },
                {
                  "val": "1",
                  "offset": 89
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_on_DELETE_method(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 61002700,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_DELETE\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 100
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 718998600,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills users check the Database to validate deletion from \"InputData_UserSkills_DELETE\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 62
                },
                {
                  "val": "1",
                  "offset": 102
                }
              ],
              "location": "step_definition.UserSkills.check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 9017400,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:08.942Z",
        "line": 14,
        "name": "Validate the delete method for UserSkills",
        "description": "",
        "id": "delete-user-skills-details;validate-the-delete-method-for-userskills;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 112999700,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends request id ON DELETE Method from \"InputData_UserSkills_DELETE\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 55
                },
                {
                  "val": "2",
                  "offset": 89
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_on_DELETE_method(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 82000100,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_DELETE\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 100
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 731994300,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills users check the Database to validate deletion from \"InputData_UserSkills_DELETE\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 62
                },
                {
                  "val": "2",
                  "offset": 102
                }
              ],
              "location": "step_definition.UserSkills.check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4998900,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:09.918Z",
        "line": 15,
        "name": "Validate the delete method for UserSkills",
        "description": "",
        "id": "delete-user-skills-details;validate-the-delete-method-for-userskills;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 109998600,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends request id ON DELETE Method from \"InputData_UserSkills_DELETE\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 55
                },
                {
                  "val": "3",
                  "offset": 89
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_on_DELETE_method(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 63997000,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_DELETE\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 100
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1383996100,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills users check the Database to validate deletion from \"InputData_UserSkills_DELETE\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 62
                },
                {
                  "val": "3",
                  "offset": 102
                }
              ],
              "location": "step_definition.UserSkills.check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5998800,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:11.522Z",
        "line": 16,
        "name": "Validate the delete method for UserSkills",
        "description": "",
        "id": "delete-user-skills-details;validate-the-delete-method-for-userskills;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 179000800,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends request id ON DELETE Method from \"InputData_UserSkills_DELETE\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 55
                },
                {
                  "val": "4",
                  "offset": 89
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_on_DELETE_method(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected object to not be null\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:686)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:671)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.UserSkills.userSkills_user_receives_status_code_with(UserSkills.java:258)\r\n\tat ✽.userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_DELETE\" sheet and 4 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/userSkills.feature/UserSkills_DELETE.feature:7)\r\n",
              "duration": 84993500,
              "status": "failed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_DELETE\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 100
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1002400,
              "status": "skipped"
            },
            "line": 8,
            "name": "userSkills users check the Database to validate deletion from \"InputData_UserSkills_DELETE\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_DELETE\"",
                  "offset": 62
                },
                {
                  "val": "4",
                  "offset": 102
                }
              ],
              "location": "step_definition.UserSkills.check_the_Database_to_validate_deletion(java.lang.String,int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Delete user skills details",
    "description": "",
    "id": "delete-user-skills-details",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkills.feature/UserSkills_DELETE.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4998000,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:11.891Z",
        "line": 4,
        "name": "Validate GET all UserSkills",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-get-all-userskills",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 62975900,
              "status": "passed"
            },
            "line": 5,
            "name": "userSkills User sends GET request",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_sends_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 997700,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User validates StatusCode",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nResponse body doesn\u0027t match expectation.\nExpected: The content to match the given JSON schema.\nerror: instance type (string) does not match any allowed primitive type (allowed: [\"integer\"])\n    level: \"error\"\n    schema: {\"loadingURI\":\"file:/C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/target/test-classes/JSON_Schemas/user_skill_schema_GET_all.json#\",\"pointer\":\"/properties/UserSkillMapping/items/0/properties/Skill_id\"}\n    instance: {\"pointer\":\"/UserSkillMapping/0/Skill_id\"}\n    domain: \"validation\"\n    keyword: \"type\"\n    found: \"string\"\n    expected: [\"integer\"]\nerror: instance type (string) does not match any allowed primitive type (allowed: [\"integer\"])\n    level: \"error\"\n    schema: {\"loadingURI\":\"file:/C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/target/test-classes/JSON_Schemas/user_skill_schema_GET_all.json#\",\"pointer\":\"/properties/UserSkillMapping/items/0/properties/months_of_exp\"}\n    instance: {\"pointer\":\"/UserSkillMapping/0/months_of_exp\"}\n    domain: \"validation\"\n    keyword: \"type\"\n    found: \"string\"\n    expected: [\"integer\"]\n\n  Actual: {\n    \"UserSkillMapping\": [\n        {\n            \"user_skill_id\": \"US01\",\n            \"user_id\": \"U01\",\n            \"Skill_id\": \"2\",\n            \"months_of_exp\": \"24\"\n        },\n        {\n            \"user_skill_id\": \"US02\",\n            \"user_id\": \"U02\",\n            \"Skill_id\": \"1\",\n            \"months_of_exp\": \"36\"\n        },\n        {\n            \"user_skill_id\": \"US03\",\n            \"user_id\": \"U03\",\n            \"Skill_id\": \"2\",\n            \"months_of_exp\": \"12\"\n        },\n        {\n            \"user_skill_id\": \"US05\",\n            \"user_id\": \"U05\",\n            \"Skill_id\": \"5\",\n            \"months_of_exp\": \"12\"\n        },\n        {\n            \"user_skill_id\": \"US04\",\n            \"user_id\": \"U04\",\n            \"Skill_id\": \"6\",\n            \"months_of_exp\": \"36\"\n        },\n        {\n            \"user_skill_id\": \"US06\",\n            \"user_id\": \"U06\",\n            \"Skill_id\": \"5\",\n            \"months_of_exp\": \"12\"\n        },\n        {\n            \"user_skill_id\": \"US07\",\n            \"user_id\": \"U07\",\n            \"Skill_id\": \"2\",\n            \"months_of_exp\": \"12\"\n        },\n        {\n            \"user_skill_id\": \"US09\",\n            \"user_id\": \"U09\",\n            \"Skill_id\": \"3\",\n            \"months_of_exp\": \"36\"\n        },\n        {\n            \"user_skill_id\": \"US10\",\n            \"user_id\": \"U10\",\n            \"Skill_id\": \"2\",\n            \"months_of_exp\": \"10\"\n        },\n        {\n            \"user_skill_id\": \"US08\",\n            \"user_id\": \"U08\",\n            \"Skill_id\": \"1\",\n            \"months_of_exp\": \"30\"\n        },\n        {\n            \"user_skill_id\": \"US12\",\n            \"user_id\": \"U08\",\n            \"Skill_id\": \"4\",\n            \"months_of_exp\": \"12\"\n        }\n    ]\n}\n\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:97)\r\n\tat io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)\r\n\tat io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:256)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/util.JSON_Schema_Validation.cls_JSON_SchemaValidation(JSON_Schema_Validation.java:29)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.UserSkills.userSkills_json_schema_is_valid(UserSkills.java:193)\r\n\tat ✽.userSkills JSON schema is valid(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/userSkills.feature/UserSkills_GET.feature:7)\r\n",
              "duration": 82000000,
              "status": "failed"
            },
            "line": 7,
            "name": "userSkills JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1001700,
              "status": "skipped"
            },
            "line": 8,
            "name": "check the Database for userSkills",
            "match": {
              "location": "step_definition.UserSkills.check_the_database_for_all_users()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5999900,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:12.170Z",
        "line": 17,
        "name": "Validate UserSkills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-userskills-api-with-specific-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 237000000,
              "status": "passed"
            },
            "line": 11,
            "name": "userSkills User sends GET request on  id from \"InputData_UserSkills_GET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 46
                },
                {
                  "val": "0",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_with_specific(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 59996300,
              "status": "passed"
            },
            "line": 12,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 40976200,
              "status": "passed"
            },
            "line": 13,
            "name": "userSkills JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1030998200,
              "status": "passed"
            },
            "line": 14,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4993900,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:13.589Z",
        "line": 18,
        "name": "Validate UserSkills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-userskills-api-with-specific-id;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 79615700,
              "status": "passed"
            },
            "line": 11,
            "name": "userSkills User sends GET request on  id from \"InputData_UserSkills_GET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 46
                },
                {
                  "val": "1",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_with_specific(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 73001800,
              "status": "passed"
            },
            "line": 12,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 998600,
              "status": "passed"
            },
            "line": 13,
            "name": "userSkills JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 656188400,
              "status": "passed"
            },
            "line": 14,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4997300,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:14.446Z",
        "line": 19,
        "name": "Validate UserSkills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-userskills-api-with-specific-id;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 103002600,
              "status": "passed"
            },
            "line": 11,
            "name": "userSkills User sends GET request on  id from \"InputData_UserSkills_GET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 46
                },
                {
                  "val": "2",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_with_specific(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 96006700,
              "status": "passed"
            },
            "line": 12,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 992900,
              "status": "passed"
            },
            "line": 13,
            "name": "userSkills JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 717999300,
              "status": "passed"
            },
            "line": 14,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4003100,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:15.412Z",
        "line": 20,
        "name": "Validate UserSkills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-userskills-api-with-specific-id;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 153010700,
              "status": "passed"
            },
            "line": 11,
            "name": "userSkills User sends GET request on  id from \"InputData_UserSkills_GET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 46
                },
                {
                  "val": "3",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_with_specific(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 344986400,
              "status": "passed"
            },
            "line": 12,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 998600,
              "status": "passed"
            },
            "line": 13,
            "name": "userSkills JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 793996300,
              "status": "passed"
            },
            "line": 14,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4000400,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:16.754Z",
        "line": 21,
        "name": "Validate UserSkills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-userskills-api-with-specific-id;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 179999200,
              "status": "passed"
            },
            "line": 11,
            "name": "userSkills User sends GET request on  id from \"InputData_UserSkills_GET\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 46
                },
                {
                  "val": "4",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_with_specific(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 69997700,
              "status": "passed"
            },
            "line": 12,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21000300,
              "status": "passed"
            },
            "line": 13,
            "name": "userSkills JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 870000100,
              "status": "passed"
            },
            "line": 14,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6989100,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:17.967Z",
        "line": 22,
        "name": "Validate UserSkills Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskills;validate-userskills-api-with-specific-id;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 135998800,
              "status": "passed"
            },
            "line": 11,
            "name": "userSkills User sends GET request on  id from \"InputData_UserSkills_GET\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 46
                },
                {
                  "val": "5",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_request_with_specific(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected object to not be null\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:686)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:671)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.UserSkills.userSkills_user_receives_status_code_with(UserSkills.java:258)\r\n\tat ✽.userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 5 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/userSkills.feature/UserSkills_GET.feature:12)\r\n",
              "duration": 87997500,
              "status": "failed"
            },
            "line": 12,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_GET\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_GET\"",
                  "offset": 60
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999100,
              "status": "skipped"
            },
            "line": 13,
            "name": "userSkills JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1001600,
              "status": "skipped"
            },
            "line": 14,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The GET method for UserSkills",
    "description": "",
    "id": "to-check-the-get-method-for-userskills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkills.feature/UserSkills_GET.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5999200,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:18.280Z",
        "line": 13,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 633995200,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "0",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 129999700,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15999300,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 184000500,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "0",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 851002200,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4001200,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:20.170Z",
        "line": 14,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 103070700,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 1 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "1",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 91999500,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81994600,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "1",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 733557300,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4998000,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:21.230Z",
        "line": 15,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 207999300,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 2 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "2",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 83000800,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 997500,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 109001400,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "2",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 664003200,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 7999600,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:22.341Z",
        "line": 16,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 97647300,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 3 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "3",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 75001900,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69996800,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "3",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 758994400,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5000900,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:23.404Z",
        "line": 17,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 110000800,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 4 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "4",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 69996800,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 65984700,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "4",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 642524300,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5996800,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:24.343Z",
        "line": 18,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 105996200,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 5 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "5",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 79997700,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "5",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 997200,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82971900,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "5",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 588000800,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5000800,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:25.245Z",
        "line": 19,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 113997900,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 6 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "6",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 86997300,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 6 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "6",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003100,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107994700,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 6",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "6",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 767990400,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3996200,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:26.370Z",
        "line": 20,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 90009300,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 7 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "7",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 64994200,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 7 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "7",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3009300,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67999600,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 7",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "7",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 569995600,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5997700,
              "status": "passed"
            },
            "line": 3,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:27.218Z",
        "line": 21,
        "name": "Validate POST all UserSkills",
        "description": "",
        "id": "to-check-the-post-method-for-userskills;validate-post-all-userskills;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 113997200,
              "status": "passed"
            },
            "line": 6,
            "name": "userSkills User sends POST request body from \"InputData_UserSkills_POST\" and 8 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 45
                },
                {
                  "val": "8",
                  "offset": 77
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_POST_request_body_from(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 65004100,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_POST\" sheet and 8 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 60
                },
                {
                  "val": "8",
                  "offset": 98
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85990600,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_POST\" and 8",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_POST\"",
                  "offset": 143
                },
                {
                  "val": "8",
                  "offset": 175
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 979513700,
              "status": "passed"
            },
            "line": 10,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The POST method for UserSkills",
    "description": "",
    "id": "to-check-the-post-method-for-userskills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkills.feature/UserSkills_POST.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 31003300,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:28.508Z",
        "line": 14,
        "name": "Validate PUT method for UserSkills",
        "description": "",
        "id": "to-check-the-put-method-for-userskills;validate-put-method-for-userskills;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 282003400,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User sends PUT request on id and request body from \"InputData_UserSkills_PUT\" and 0 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 62
                },
                {
                  "val": "0",
                  "offset": 93
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53998600,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_PUT\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 41997300,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 57999900,
              "status": "passed"
            },
            "line": 10,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_PUT\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 143
                },
                {
                  "val": "0",
                  "offset": 174
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 619998200,
              "status": "passed"
            },
            "line": 11,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6995300,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:29.642Z",
        "line": 15,
        "name": "Validate PUT method for UserSkills",
        "description": "",
        "id": "to-check-the-put-method-for-userskills;validate-put-method-for-userskills;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 199002400,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User sends PUT request on id and request body from \"InputData_UserSkills_PUT\" and 1 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 62
                },
                {
                  "val": "1",
                  "offset": 93
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 85998500,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_PUT\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 997900,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83995700,
              "status": "passed"
            },
            "line": 10,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_PUT\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 143
                },
                {
                  "val": "1",
                  "offset": 174
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 695996900,
              "status": "passed"
            },
            "line": 11,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:30.753Z",
        "line": 16,
        "name": "Validate PUT method for UserSkills",
        "description": "",
        "id": "to-check-the-put-method-for-userskills;validate-put-method-for-userskills;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 207994700,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User sends PUT request on id and request body from \"InputData_UserSkills_PUT\" and 2 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 62
                },
                {
                  "val": "2",
                  "offset": 93
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 70000600,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_PUT\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1997600,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70998400,
              "status": "passed"
            },
            "line": 10,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_PUT\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 143
                },
                {
                  "val": "2",
                  "offset": 174
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 580998600,
              "status": "passed"
            },
            "line": 11,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5998200,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:31.724Z",
        "line": 17,
        "name": "Validate PUT method for UserSkills",
        "description": "",
        "id": "to-check-the-put-method-for-userskills;validate-put-method-for-userskills;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 268328400,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User sends PUT request on id and request body from \"InputData_UserSkills_PUT\" and 3 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 62
                },
                {
                  "val": "3",
                  "offset": 93
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 75155000,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_PUT\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001000,
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 124250100,
              "status": "passed"
            },
            "line": 10,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_PUT\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 143
                },
                {
                  "val": "3",
                  "offset": 174
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 827514600,
              "status": "passed"
            },
            "line": 11,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4003300,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:33.064Z",
        "line": 18,
        "name": "Validate PUT method for UserSkills",
        "description": "",
        "id": "to-check-the-put-method-for-userskills;validate-put-method-for-userskills;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 180522700,
              "status": "passed"
            },
            "line": 7,
            "name": "userSkills User sends PUT request on id and request body from \"InputData_UserSkills_PUT\" and 4 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 62
                },
                {
                  "val": "4",
                  "offset": 93
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 56999700,
              "status": "passed"
            },
            "line": 8,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_PUT\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "userSkills JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 36
                }
              ],
              "location": "step_definition.UserSkills.userSkills_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64995400,
              "status": "passed"
            },
            "line": 10,
            "name": "userSkills User should receive a list of users with skills in JSON body with the fields like user_skill_id,user_id,Skill_Id,months_of_exp from \"InputData_UserSkills_PUT\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 143
                },
                {
                  "val": "4",
                  "offset": 174
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_should_receive_a_list_of_users_with_skills_in_json_body_with_the_fields_user_skill_id_user_id_skill_id_months_of_exp_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 541996400,
              "status": "passed"
            },
            "line": 11,
            "name": "check the Database",
            "match": {
              "location": "step_definition.UserSkills.check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5005900,
              "status": "passed"
            },
            "line": 4,
            "name": "userSkills User is on Endpoint: url/UserSkills with valid username and password",
            "match": {
              "location": "step_definition.UserSkills.userSkills_user_is_on_endpoint_url_user_skills_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:33.959Z",
        "line": 29,
        "name": "Validate creation time \u0026 modification time for PUT method for UserSkills",
        "description": "",
        "id": "to-check-the-put-method-for-userskills;validate-creation-time-\u0026-modification-time-for-put-method-for-userskills;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 766993600,
              "status": "passed"
            },
            "line": 22,
            "name": "userSkills User check the database for creation time \u0026 modification time of a user with specified UserSkillsId from \"InputData_UserSkills_PUT\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 116
                },
                {
                  "val": "0",
                  "offset": 147
                }
              ],
              "location": "step_definition.UserSkills.user_skills_user_check_the_database_for_creation_time_modification_time_of_a_user_with_specified_user_skills_id_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 243000200,
              "status": "passed"
            },
            "line": 23,
            "name": "userSkills User sends PUT request on id and request body from \"InputData_UserSkills_PUT\" and 0 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 62
                },
                {
                  "val": "0",
                  "offset": 93
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49002400,
              "status": "passed"
            },
            "line": 24,
            "name": "userSkills User validates StatusCode and StatusMessage from \"InputData_UserSkills_PUT\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkills.userSkills_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 712994000,
              "status": "passed"
            },
            "line": 25,
            "name": "userSkills User check the database for new creation time \u0026 modification time of a user with specified UserSkillsId from \"InputData_UserSkills_PUT\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkills_PUT\"",
                  "offset": 120
                },
                {
                  "val": "0",
                  "offset": 151
                }
              ],
              "location": "step_definition.UserSkills.user_skills_user_check_the_database_for_new_creation_time_modification_time_of_a_user_with_specified_user_skills_id_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [2022-01-27 21:06:34.972053] but found [2022-01-27 21:06:28.827274]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:453)\r\n\tat org.testng.Assert.assertEquals(Assert.java:463)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.UserSkills.user_skills_user_check_that_the_creation_time_is_same_but_modification_is_different(UserSkills.java:485)\r\n\tat ✽.userSkills User check that the creation time is same but modification is different.(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/userSkills.feature/UserSkills_PUT.feature:26)\r\n",
              "duration": 1001300,
              "status": "failed"
            },
            "line": 26,
            "name": "userSkills User check that the creation time is same but modification is different.",
            "match": {
              "location": "step_definition.UserSkills.user_skills_user_check_that_the_creation_time_is_same_but_modification_is_different()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The PUT method for UserSkills",
    "description": "",
    "id": "to-check-the-put-method-for-userskills",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkills.feature/UserSkills_PUT.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-01-28T02:06:35.795Z",
        "line": 11,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 75001200,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User with  username \u0026 password from \"UserSkillsMap_Authorization\" and 0  is on Endpoint: url/UserSkillsMap\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 50
                },
                {
                  "val": "0",
                  "offset": 84
                }
              ],
              "location": "step_definition.UserSkillsMap.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15025600,
              "status": "passed"
            },
            "line": 5,
            "name": "UserSkillsMap User sends GET request",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 43996100,
              "status": "passed"
            },
            "line": 6,
            "name": "UserSkillsMap User Checks for StatusCode StatusCode and StatusMessage from \"UserSkillsMap_Authorization\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 75
                },
                {
                  "val": "0",
                  "offset": 115
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:35.983Z",
        "line": 12,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 149004800,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User with  username \u0026 password from \"UserSkillsMap_Authorization\" and 1  is on Endpoint: url/UserSkillsMap\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 50
                },
                {
                  "val": "1",
                  "offset": 84
                }
              ],
              "location": "step_definition.UserSkillsMap.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 64994800,
              "status": "passed"
            },
            "line": 5,
            "name": "UserSkillsMap User sends GET request",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 44004300,
              "status": "passed"
            },
            "line": 6,
            "name": "UserSkillsMap User Checks for StatusCode StatusCode and StatusMessage from \"UserSkillsMap_Authorization\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 75
                },
                {
                  "val": "1",
                  "offset": 115
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:36.275Z",
        "line": 13,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 53996500,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User with  username \u0026 password from \"UserSkillsMap_Authorization\" and 2  is on Endpoint: url/UserSkillsMap\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 50
                },
                {
                  "val": "2",
                  "offset": 84
                }
              ],
              "location": "step_definition.UserSkillsMap.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21998800,
              "status": "passed"
            },
            "line": 5,
            "name": "UserSkillsMap User sends GET request",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 74999300,
              "status": "passed"
            },
            "line": 6,
            "name": "UserSkillsMap User Checks for StatusCode StatusCode and StatusMessage from \"UserSkillsMap_Authorization\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 75
                },
                {
                  "val": "2",
                  "offset": 115
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:36.463Z",
        "line": 14,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 81999600,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User with  username \u0026 password from \"UserSkillsMap_Authorization\" and 3  is on Endpoint: url/UserSkillsMap\"",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 50
                },
                {
                  "val": "3",
                  "offset": 84
                }
              ],
              "location": "step_definition.UserSkillsMap.Skills_User_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 103001400,
              "status": "passed"
            },
            "line": 5,
            "name": "UserSkillsMap User sends GET request",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 49999200,
              "status": "passed"
            },
            "line": 6,
            "name": "UserSkillsMap User Checks for StatusCode StatusCode and StatusMessage from \"UserSkillsMap_Authorization\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"UserSkillsMap_Authorization\"",
                  "offset": 75
                },
                {
                  "val": "3",
                  "offset": 115
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Check the Authorization for LMS API",
    "description": "",
    "id": "check-the-authorization-for-lms-api",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkillsMap.feature/UserSkillsMap_Authorization.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 7029500,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:36.762Z",
        "line": 6,
        "name": "Validate GET all User-to-skill mappings",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-all-user-to-skill-mappings",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 80998900,
              "status": "passed"
            },
            "line": 8,
            "name": "UserSkillsMap User sends GET request",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1006500,
              "status": "passed"
            },
            "line": 9,
            "name": "UserSkillsMap User validates StatusCode",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_validates_status_code()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 67996500,
              "status": "passed"
            },
            "line": 10,
            "name": "UserSkillsMap JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 22001900,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:37.016Z",
        "line": 20,
        "name": "Validate GET one particular User-to-skill mappings with specific user ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-user-to-skill-mappings-with-specific-user-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 144996000,
              "status": "passed"
            },
            "line": 14,
            "name": "UserSkillsMap_user User sends GET request on user id from \"InputData_UserSkillsMap_userGET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 96
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 48002800,
              "status": "passed"
            },
            "line": 15,
            "name": "UserSkillsMap_user User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_userGET\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 68
                },
                {
                  "val": "0",
                  "offset": 112
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 25994900,
              "status": "passed"
            },
            "line": 16,
            "name": "UserSkillsMap JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 40005300,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:37.320Z",
        "line": 21,
        "name": "Validate GET one particular User-to-skill mappings with specific user ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-user-to-skill-mappings-with-specific-user-id;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 106999200,
              "status": "passed"
            },
            "line": 14,
            "name": "UserSkillsMap_user User sends GET request on user id from \"InputData_UserSkillsMap_userGET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 96
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 55018000,
              "status": "passed"
            },
            "line": 15,
            "name": "UserSkillsMap_user User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_userGET\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 68
                },
                {
                  "val": "1",
                  "offset": 112
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 984400,
              "status": "passed"
            },
            "line": 16,
            "name": "UserSkillsMap JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6003000,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:37.554Z",
        "line": 22,
        "name": "Validate GET one particular User-to-skill mappings with specific user ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-user-to-skill-mappings-with-specific-user-id;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 74006300,
              "status": "passed"
            },
            "line": 14,
            "name": "UserSkillsMap_user User sends GET request on user id from \"InputData_UserSkillsMap_userGET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 96
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 59992000,
              "status": "passed"
            },
            "line": 15,
            "name": "UserSkillsMap_user User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_userGET\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 68
                },
                {
                  "val": "2",
                  "offset": 112
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003200,
              "status": "passed"
            },
            "line": 16,
            "name": "UserSkillsMap JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 9002900,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:37.732Z",
        "line": 23,
        "name": "Validate GET one particular User-to-skill mappings with specific user ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-user-to-skill-mappings-with-specific-user-id;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 71001600,
              "status": "passed"
            },
            "line": 14,
            "name": "UserSkillsMap_user User sends GET request on user id from \"InputData_UserSkillsMap_userGET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 58
                },
                {
                  "val": "3",
                  "offset": 96
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 43996100,
              "status": "passed"
            },
            "line": 15,
            "name": "UserSkillsMap_user User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_userGET\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_userGET\"",
                  "offset": 68
                },
                {
                  "val": "3",
                  "offset": 112
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_user_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1004400,
              "status": "passed"
            },
            "line": 16,
            "name": "UserSkillsMap JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5000600,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:37.893Z",
        "line": 33,
        "name": "Validate GET one particular Skill-to-users mappings with specific skill ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-skill-to-users-mappings-with-specific-skill-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 95005400,
              "status": "passed"
            },
            "line": 27,
            "name": "UserSkillsMap_skill User sends GET request on user id from \"InputData_UserSkillsMap_skilGET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 59
                },
                {
                  "val": "0",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 42993600,
              "status": "passed"
            },
            "line": 28,
            "name": "UserSkillsMap_skill User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_skilGET\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 69
                },
                {
                  "val": "0",
                  "offset": 113
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19000500,
              "status": "passed"
            },
            "line": 29,
            "name": "UserSkillsMap_skill JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6997200,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:38.120Z",
        "line": 34,
        "name": "Validate GET one particular Skill-to-users mappings with specific skill ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-skill-to-users-mappings-with-specific-skill-id;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 124990500,
              "status": "passed"
            },
            "line": 27,
            "name": "UserSkillsMap_skill User sends GET request on user id from \"InputData_UserSkillsMap_skilGET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 59
                },
                {
                  "val": "1",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 57998800,
              "status": "passed"
            },
            "line": 28,
            "name": "UserSkillsMap_skill User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_skilGET\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 69
                },
                {
                  "val": "1",
                  "offset": 113
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "UserSkillsMap_skill JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5998400,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:38.350Z",
        "line": 35,
        "name": "Validate GET one particular Skill-to-users mappings with specific skill ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-skill-to-users-mappings-with-specific-skill-id;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 72996100,
              "status": "passed"
            },
            "line": 27,
            "name": "UserSkillsMap_skill User sends GET request on user id from \"InputData_UserSkillsMap_skilGET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 59
                },
                {
                  "val": "2",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52001900,
              "status": "passed"
            },
            "line": 28,
            "name": "UserSkillsMap_skill User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_skilGET\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 69
                },
                {
                  "val": "2",
                  "offset": 113
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 998900,
              "status": "passed"
            },
            "line": 29,
            "name": "UserSkillsMap_skill JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6996400,
              "status": "passed"
            },
            "line": 4,
            "name": "UserSkillsMap User is on Endpoint: url/UserSkillsMap with valid username and password",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_user_is_on_endpoint_url_user_skills_map_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:38.512Z",
        "line": 36,
        "name": "Validate GET one particular Skill-to-users mappings with specific skill ID",
        "description": "",
        "id": "to-check-the-get-method-for-userskillsmap-api;validate-get-one-particular-skill-to-users-mappings-with-specific-skill-id;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 76997800,
              "status": "passed"
            },
            "line": 27,
            "name": "UserSkillsMap_skill User sends GET request on user id from \"InputData_UserSkillsMap_skilGET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 59
                },
                {
                  "val": "3",
                  "offset": 97
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_sends_get_request_on_user_id_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 68000600,
              "status": "passed"
            },
            "line": 28,
            "name": "UserSkillsMap_skill User validates StatusCode and StatusMessage from \"InputData_UserSkillsMap_skilGET\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_UserSkillsMap_skilGET\"",
                  "offset": 69
                },
                {
                  "val": "3",
                  "offset": 113
                }
              ],
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_user_validates_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "UserSkillsMap_skill JSON schema is valid",
            "match": {
              "location": "step_definition.UserSkillsMap.user_skills_map_skill_json_schema_is_valid()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The GET method for UserSkillsMap API",
    "description": "",
    "id": "to-check-the-get-method-for-userskillsmap-api",
    "keyword": "Feature",
    "uri": "file:src/test/resources/userSkillsMap.feature/UserSkillsMap_GET.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-01-28T02:06:38.725Z",
        "line": 11,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 200004600,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users username \u0026 password from \"Users_Authorization\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 65
                },
                {
                  "val": "0",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_API_user_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20997900,
              "status": "passed"
            },
            "line": 5,
            "name": "UsersAPI User sends GET request",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_sends_request_users_api()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 142997800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User Checks for StatusCode StatusCode and StatusMessage from \"Users_Authorization\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 70
                },
                {
                  "val": "0",
                  "offset": 102
                }
              ],
              "location": "step_definition.Users.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:39.144Z",
        "line": 12,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 172002600,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users username \u0026 password from \"Users_Authorization\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 65
                },
                {
                  "val": "1",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_API_user_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 45003200,
              "status": "passed"
            },
            "line": 5,
            "name": "UsersAPI User sends GET request",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_sends_request_users_api()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 150990300,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User Checks for StatusCode StatusCode and StatusMessage from \"Users_Authorization\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 70
                },
                {
                  "val": "1",
                  "offset": 102
                }
              ],
              "location": "step_definition.Users.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:39.610Z",
        "line": 13,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 219996900,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users username \u0026 password from \"Users_Authorization\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 65
                },
                {
                  "val": "2",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_API_user_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16004400,
              "status": "passed"
            },
            "line": 5,
            "name": "UsersAPI User sends GET request",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_sends_request_users_api()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 206998200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User Checks for StatusCode StatusCode and StatusMessage from \"Users_Authorization\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 70
                },
                {
                  "val": "2",
                  "offset": 102
                }
              ],
              "location": "step_definition.Users.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:40.120Z",
        "line": 14,
        "name": "Check the Authorization with with different set of username \u0026 password",
        "description": "",
        "id": "check-the-authorization-for-lms-api;check-the-authorization-with-with-different-set-of-username-\u0026-password;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 245002000,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users username \u0026 password from \"Users_Authorization\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 65
                },
                {
                  "val": "3",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_API_user_is_on_endpoint_url_users_username_password_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35000900,
              "status": "passed"
            },
            "line": 5,
            "name": "UsersAPI User sends GET request",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_sends_request_users_api()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 206544400,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User Checks for StatusCode StatusCode and StatusMessage from \"Users_Authorization\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Users_Authorization\"",
                  "offset": 70
                },
                {
                  "val": "3",
                  "offset": 102
                }
              ],
              "location": "step_definition.Users.user_skills_user_checks_for_status_code_status_code_and_status_message_from_sheet_and_row(java.lang.String,java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Check the Authorization for LMS API",
    "description": "",
    "id": "check-the-authorization-for-lms-api",
    "keyword": "Feature",
    "uri": "file:src/test/resources/users.feature/User_Authorization.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6997900,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:40.656Z",
        "line": 12,
        "name": "Validate the delete method for Users",
        "description": "",
        "id": "delete-users-details;validate-the-delete-method-for-users;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 173998300,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI user sends request id ON DELETE Method from \"InputData_Users_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 53
                },
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "step_definition.Users.users_api_sends_request_id_on_delete_method_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [200] but found [404]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:237)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 0 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_DELETE.feature:7)\r\n",
              "duration": 192524600,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 93
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5002100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:41.086Z",
        "line": 13,
        "name": "Validate the delete method for Users",
        "description": "",
        "id": "delete-users-details;validate-the-delete-method-for-users;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 212998400,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI user sends request id ON DELETE Method from \"InputData_Users_DELETE\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 53
                },
                {
                  "val": "1",
                  "offset": 82
                }
              ],
              "location": "step_definition.Users.users_api_sends_request_id_on_delete_method_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 125999100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 93
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 7993000,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:41.532Z",
        "line": 14,
        "name": "Validate the delete method for Users",
        "description": "",
        "id": "delete-users-details;validate-the-delete-method-for-users;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 197516100,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI user sends request id ON DELETE Method from \"InputData_Users_DELETE\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 53
                },
                {
                  "val": "2",
                  "offset": 82
                }
              ],
              "location": "step_definition.Users.users_api_sends_request_id_on_delete_method_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 184999400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 93
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3998000,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:42.001Z",
        "line": 15,
        "name": "Validate the delete method for Users",
        "description": "",
        "id": "delete-users-details;validate-the-delete-method-for-users;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 190999200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI user sends request id ON DELETE Method from \"InputData_Users_DELETE\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 53
                },
                {
                  "val": "3",
                  "offset": 82
                }
              ],
              "location": "step_definition.Users.users_api_sends_request_id_on_delete_method_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 138999700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "3",
                  "offset": 93
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 7997500,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:42.395Z",
        "line": 16,
        "name": "Validate the delete method for Users",
        "description": "",
        "id": "delete-users-details;validate-the-delete-method-for-users;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 186999600,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI user sends request id ON DELETE Method from \"InputData_Users_DELETE\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 53
                },
                {
                  "val": "4",
                  "offset": 82
                }
              ],
              "location": "step_definition.Users.users_api_sends_request_id_on_delete_method_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected object to not be null\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:686)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:671)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:240)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 4 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_DELETE.feature:7)\r\n",
              "duration": 111998500,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_DELETE\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_DELETE\"",
                  "offset": 58
                },
                {
                  "val": "4",
                  "offset": 93
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Delete Users details",
    "description": "",
    "id": "delete-users-details",
    "keyword": "Feature",
    "uri": "file:src/test/resources/users.feature/Users_DELETE.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4999600,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:42.765Z",
        "line": 6,
        "name": "Validate GET all Users",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-get-all-users",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20999900,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends GET request",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_sends_request_users_api()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_validates_status_code()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat java.base/java.util.Objects.requireNonNull(Objects.java:221)\r\n\tat java.base/java.lang.ClassLoader.getResource(ClassLoader.java:1392)\r\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/util.JSON_Schema_Validation.cls_JSON_SchemaValidation(JSON_Schema_Validation.java:29)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_json_schema_is_valid(Users.java:160)\r\n\tat ✽.UsersAPI JSON schema is valid(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_GET.feature:9)\r\n",
              "duration": 997300,
              "status": "failed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid",
            "match": {
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000800,
              "status": "skipped"
            },
            "line": 10,
            "name": "check the Database for all users",
            "match": {
              "location": "step_definition.Users.check_the_database_for_all_users()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3998200,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:42.846Z",
        "line": 21,
        "name": "Validate Users Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-users-api-with-specific-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 209998500,
              "status": "passed"
            },
            "line": 13,
            "name": "UsersAPI User sends GET request on userid from \"InputData_User_GET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 47
                },
                {
                  "val": "0",
                  "offset": 72
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_get_request_on_userid_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 133000200,
              "status": "passed"
            },
            "line": 14,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 89
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat java.base/java.util.Objects.requireNonNull(Objects.java:221)\r\n\tat java.base/java.lang.ClassLoader.getResource(ClassLoader.java:1392)\r\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/util.JSON_Schema_Validation.cls_JSON_SchemaValidation(JSON_Schema_Validation.java:29)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_json_schema_is_valid_for(Users.java:185)\r\n\tat ✽.UsersAPI JSON schema is valid for \"GET\"(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_GET.feature:15)\r\n",
              "duration": 998800,
              "status": "failed"
            },
            "line": 15,
            "name": "UsersAPI JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000700,
              "status": "skipped"
            },
            "line": 16,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_User_GET\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 141
                },
                {
                  "val": "0",
                  "offset": 166
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 997300,
              "status": "skipped"
            },
            "line": 17,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 24998100,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:43.271Z",
        "line": 22,
        "name": "Validate Users Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-users-api-with-specific-id;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 155997300,
              "status": "passed"
            },
            "line": 13,
            "name": "UsersAPI User sends GET request on userid from \"InputData_User_GET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 47
                },
                {
                  "val": "1",
                  "offset": 72
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_get_request_on_userid_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 318998300,
              "status": "passed"
            },
            "line": 14,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 89
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999800,
              "status": "passed"
            },
            "line": 15,
            "name": "UsersAPI JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 173003700,
              "status": "passed"
            },
            "line": 16,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_User_GET\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 141
                },
                {
                  "val": "1",
                  "offset": 166
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 614996700,
              "status": "passed"
            },
            "line": 17,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 8030900,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:44.594Z",
        "line": 23,
        "name": "Validate Users Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-users-api-with-specific-id;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 157976300,
              "status": "passed"
            },
            "line": 13,
            "name": "UsersAPI User sends GET request on userid from \"InputData_User_GET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 47
                },
                {
                  "val": "2",
                  "offset": 72
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_get_request_on_userid_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 119998700,
              "status": "passed"
            },
            "line": 14,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 89
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1004200,
              "status": "passed"
            },
            "line": 15,
            "name": "UsersAPI JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 237992100,
              "status": "passed"
            },
            "line": 16,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_User_GET\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 141
                },
                {
                  "val": "2",
                  "offset": 166
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 586994500,
              "status": "passed"
            },
            "line": 17,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3999700,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:45.745Z",
        "line": 24,
        "name": "Validate Users Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-users-api-with-specific-id;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 174998400,
              "status": "passed"
            },
            "line": 13,
            "name": "UsersAPI User sends GET request on userid from \"InputData_User_GET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 47
                },
                {
                  "val": "3",
                  "offset": 72
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_get_request_on_userid_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 144999100,
              "status": "passed"
            },
            "line": 14,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 58
                },
                {
                  "val": "3",
                  "offset": 89
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "UsersAPI JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 131999900,
              "status": "passed"
            },
            "line": 16,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_User_GET\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 141
                },
                {
                  "val": "3",
                  "offset": 166
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 467999000,
              "status": "passed"
            },
            "line": 17,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2999600,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:46.700Z",
        "line": 25,
        "name": "Validate Users Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-users-api-with-specific-id;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 139997400,
              "status": "passed"
            },
            "line": 13,
            "name": "UsersAPI User sends GET request on userid from \"InputData_User_GET\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 47
                },
                {
                  "val": "4",
                  "offset": 72
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_get_request_on_userid_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 102995700,
              "status": "passed"
            },
            "line": 14,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 58
                },
                {
                  "val": "4",
                  "offset": 89
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "UsersAPI JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107997900,
              "status": "passed"
            },
            "line": 16,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_User_GET\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 141
                },
                {
                  "val": "4",
                  "offset": 166
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 554000700,
              "status": "passed"
            },
            "line": 17,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5005000,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:47.649Z",
        "line": 26,
        "name": "Validate Users Api with specific ID",
        "description": "",
        "id": "to-check-the-get-method-for-users;validate-users-api-with-specific-id;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 166994000,
              "status": "passed"
            },
            "line": 13,
            "name": "UsersAPI User sends GET request on userid from \"InputData_User_GET\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 47
                },
                {
                  "val": "5",
                  "offset": 72
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_get_request_on_userid_from_and(java.lang.String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected object to not be null\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:686)\r\n\tat org.testng.Assert.assertNotNull(Assert.java:671)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:240)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 5 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_GET.feature:14)\r\n",
              "duration": 143003600,
              "status": "failed"
            },
            "line": 14,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_User_GET\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 58
                },
                {
                  "val": "5",
                  "offset": 89
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 998200,
              "status": "skipped"
            },
            "line": 15,
            "name": "UsersAPI JSON schema is valid for \"GET\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_User_GET\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_User_GET\"",
                  "offset": 141
                },
                {
                  "val": "5",
                  "offset": 166
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The GET method for Users",
    "description": "",
    "id": "to-check-the-get-method-for-users",
    "keyword": "Feature",
    "uri": "file:src/test/resources/users.feature/Users_GET.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5001800,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:48.010Z",
        "line": 13,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 259994500,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 176000600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 162995800,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 650996000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3995600,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:49.364Z",
        "line": 14,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 359011800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 1 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "1",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 140987400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 997200,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 292997300,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "1",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1161995600,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5024900,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:51.363Z",
        "line": 15,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 188996100,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 2 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "2",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 143999900,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 170672700,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "2",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 652991800,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6010400,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:52.571Z",
        "line": 16,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 195996700,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 3 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "3",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 137002000,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "3",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 998700,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 312995600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "3",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 904996100,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3000800,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:54.172Z",
        "line": 17,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 190999900,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 4 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "4",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 178998200,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "4",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 157020300,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "4",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 616996200,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3994800,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:55.368Z",
        "line": 18,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 222997400,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 5 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "5",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 134002500,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "5",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15002400,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 182997300,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "5",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 456995600,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5003400,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:56.425Z",
        "line": 19,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 117995500,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 6 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "6",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 120003900,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 6 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "6",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9999100,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 127000100,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 6",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "6",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 590999100,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4991700,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:57.441Z",
        "line": 20,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 126020600,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 7 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "7",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 79976800,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 7 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "7",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4995200,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101002500,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 7",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "7",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 484993900,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4997800,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:58.280Z",
        "line": 21,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 123997200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 8 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "8",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 88001500,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 8 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "8",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110000500,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 8",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "8",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 614996700,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 14000500,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:06:59.263Z",
        "line": 22,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;11",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 224000600,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 9 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "9",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 164001400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 9 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "9",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19998200,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 130999600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 9",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "9",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 605979600,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2996200,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:00.459Z",
        "line": 23,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;12",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 142003900,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 10 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "10",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:237)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 10 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)\r\n",
              "duration": 125998500,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 10 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "10",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003800,
              "status": "skipped"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 10",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "10",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 24996100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:00.784Z",
        "line": 24,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;13",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 140000800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 11 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "11",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:237)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 11 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)\r\n",
              "duration": 106004600,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 11 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "11",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 993000,
              "status": "skipped"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000200,
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 11",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "11",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 995700,
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6002700,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:01.108Z",
        "line": 25,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;14",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 158997400,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 12 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "12",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 183002400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 12 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "12",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9997200,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 120999000,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 12",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "12",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 445998600,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4986700,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:02.068Z",
        "line": 26,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;15",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 133000600,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 13 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "13",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 113998600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 13 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "13",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8999100,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100997100,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 13",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "13",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 543000000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 23999700,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:03.006Z",
        "line": 27,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;16",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 175997800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 14 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "14",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 117000100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 14 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "14",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 141995200,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 14",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "14",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 440999300,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5002200,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:03.940Z",
        "line": 28,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;17",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 101982800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 15 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "15",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 78012400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 15 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "15",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 123997100,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 15",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "15",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 646002000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4004700,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:04.941Z",
        "line": 29,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;18",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 279997100,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 16 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "16",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 189003800,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 16 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "16",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999000,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 264999100,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 16",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "16",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 863554400,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 8996100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:06.620Z",
        "line": 30,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;19",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 152999500,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 17 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "17",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 137995300,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 17 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "17",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 972900,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 109997600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 17",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "17",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 570992000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3998700,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:07.645Z",
        "line": 31,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;20",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 124000700,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 18 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "18",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [201] but found [400]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:237)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 18 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)\r\n",
              "duration": 88998000,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 18 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "18",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 18",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "18",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5001500,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:07.920Z",
        "line": 32,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;21",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 94999500,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 19 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "19",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 86994100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 19 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "19",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 106994700,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 19",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "19",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 455999000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3005900,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:08.704Z",
        "line": 33,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;22",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 115999600,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 20 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "20",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 120991500,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 20 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "20",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 995400,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 105994000,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 20",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "20",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 555999200,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5007900,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:09.645Z",
        "line": 34,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;23",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 107981600,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 21 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "21",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 90997900,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 21 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "21",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113999600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 21",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "21",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 452000300,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2996900,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:10.447Z",
        "line": 35,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;24",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 117001800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 22 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "22",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 89001800,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 22 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "22",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8999900,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 145997500,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 22",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "22",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 617994800,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 8021800,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:11.470Z",
        "line": 36,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;25",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 164983000,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 23 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "23",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 84022900,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 23 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "23",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9001300,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 120000200,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 23",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "23",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 942526300,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3996800,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:12.842Z",
        "line": 37,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;26",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 309000300,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 24 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "24",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:237)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 24 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)\r\n",
              "duration": 221000000,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 24 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "24",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 997300,
              "status": "skipped"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 24",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "24",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3996200,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:13.502Z",
        "line": 38,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;27",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 286997800,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 25 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "25",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [Failed to create-invalida data] but found [Failed to create-invalid data]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:442)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:242)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 25 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)\r\n",
              "duration": 163991100,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 25 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "25",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 999300,
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 25",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "25",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1002100,
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 8993300,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:14.100Z",
        "line": 39,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;28",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 297010400,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"InputData_Users_POST\" and 26 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 44
                },
                {
                  "val": "26",
                  "offset": 71
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [Failed to create-invalida data] but found [Failed to create-invalid data]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:442)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:242)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 26 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_POST.feature:7)\r\n",
              "duration": 197986700,
              "status": "failed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_POST\" sheet and 26 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 58
                },
                {
                  "val": "26",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1001100,
              "status": "skipped"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"InputData_Users_POST\" and 26",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_POST\"",
                  "offset": 64
                },
                {
                  "val": "26",
                  "offset": 91
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000600,
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 11999100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:14.707Z",
        "line": 44,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;29",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 219993500,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"location_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"location_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 64
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 107000000,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"location_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"location_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 84
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2031100,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 189987800,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"location_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"location_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 84
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 712998000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3999800,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:15.996Z",
        "line": 45,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;30",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 204999100,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"time_zone_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"time_zone_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 65
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 471999600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"time_zone_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"time_zone_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 85
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 214994400,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"time_zone_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"time_zone_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 85
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 741999700,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4002900,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:17.671Z",
        "line": 46,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;31",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 165998200,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"linkedin_url_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"linkedin_url_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 145997000,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"linkedin_url_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"linkedin_url_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 88
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000300,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 168001700,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"linkedin_url_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"linkedin_url_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 88
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 868519900,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3990600,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:19.064Z",
        "line": 47,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;32",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 176039700,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"education_ug_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"education_ug_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 128963500,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"education_ug_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"education_ug_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 88
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3001200,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 139998300,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"education_ug_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"education_ug_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 88
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 604994500,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 7996800,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:20.169Z",
        "line": 48,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;33",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 408998300,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"education_pg_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"education_pg_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 121008300,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"education_pg_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"education_pg_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 88
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1033300,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 133996200,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"education_pg_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"education_pg_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 88
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 614544400,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4998100,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:21.495Z",
        "line": 49,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;34",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 171993100,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"visa_status_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"visa_status_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 67
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 124002100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"visa_status_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"visa_status_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 87
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103993800,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"visa_status_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"visa_status_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 87
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 646997300,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 7021900,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:22.591Z",
        "line": 50,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;35",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 129997300,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"comments_POST\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"comments_POST\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 64
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 133999100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"comments_POST\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"comments_POST\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 84
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108997600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"comments_POST\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"comments_POST\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 84
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 533998800,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3000500,
              "status": "passed"
            },
            "line": 3,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:23.561Z",
        "line": 51,
        "name": "Validate POST Users",
        "description": "",
        "id": "to-check-the-post-method-for-users;validate-post-users;;36",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 93998500,
              "status": "passed"
            },
            "line": 6,
            "name": "UsersAPI User  sends POST request body from \"Invalid_Content\" and 0 with valid JSON Schema",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_Content\"",
                  "offset": 44
                },
                {
                  "val": "0",
                  "offset": 66
                }
              ],
              "location": "step_definition.Users.users_api_sends_post_request_body_from_and_with_valid_json_schema(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 88998800,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"Invalid_Content\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_Content\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI JSON schema is valid for \"POST\"",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 78998600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI User should receive the user details in JSON body from \"Invalid_Content\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid_Content\"",
                  "offset": 64
                },
                {
                  "val": "0",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.users_api_should_receive_the_user_details_in_json_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 450997300,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The POST method for Users",
    "description": "",
    "id": "to-check-the-post-method-for-users",
    "keyword": "Feature",
    "uri": "file:src/test/resources/users.feature/Users_POST.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3998700,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:24.313Z",
        "line": 15,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 280999800,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 0 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "0",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 95997500,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 0 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "0",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22002200,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 132000100,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 0",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "0",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 536995300,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3989100,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:25.431Z",
        "line": 16,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 188996900,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 1 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "1",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 89999800,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 1 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "1",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101000500,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 1",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "1",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 562000000,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4999000,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:26.418Z",
        "line": 17,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 232000400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 2 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "2",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 91999600,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 2 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 118026200,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 2",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "2",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 561996900,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3999000,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:27.465Z",
        "line": 18,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 265001000,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 3 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 107000800,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 3 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "3",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 987600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 196000400,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 3",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "3",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 992996200,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3998700,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:29.072Z",
        "line": 19,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 240999600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 4 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "4",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 85010900,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 4 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "4",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 993200,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107994000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 4",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "4",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 459001400,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 9994700,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:30.001Z",
        "line": 20,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 193002500,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 5 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "5",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 112998400,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 5 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "5",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3002000,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 156996100,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 5",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "5",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 696997700,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 26001000,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:31.214Z",
        "line": 21,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 288991100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 6 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "6",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 103997500,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 6 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "6",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1010700,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 124996100,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 6",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "6",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 588998500,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4001000,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:32.384Z",
        "line": 22,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 357553600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 7 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "7",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 118999400,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 7 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "7",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 143999300,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 7",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "7",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 636997600,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4000800,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:33.684Z",
        "line": 23,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 524000400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 8 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "8",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 165000900,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 8 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "8",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1002300,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 230995400,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 8",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "8",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1096999300,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5004100,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:35.760Z",
        "line": 24,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;11",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 373995800,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 9 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "9",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 131011500,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 9 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "9",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 994300,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 143996300,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 9",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "9",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 569519700,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3999200,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:37.030Z",
        "line": 25,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;12",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 323002600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 10 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "10",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 130998600,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 10 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "10",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 126001900,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 10",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "10",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 662993800,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 5003200,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:38.312Z",
        "line": 26,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;13",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 179995600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 11 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "11",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 81999100,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 11 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "11",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16029300,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 76991600,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 11",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "11",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 536999500,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6008000,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:39.252Z",
        "line": 27,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;14",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 249992200,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 12 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "12",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 117998900,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 12 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "12",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17999600,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 123999000,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 12",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "12",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 587005600,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4996800,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:40.388Z",
        "line": 28,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;15",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 279008100,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 13 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "13",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 91997400,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 13 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "13",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13998400,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74008500,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 13",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "13",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 571997700,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 6999200,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:41.463Z",
        "line": 29,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;16",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 266002700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 14 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "14",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 88998800,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 14 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "14",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10997700,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99000400,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 14",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "14",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 452999400,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4980500,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:42.416Z",
        "line": 30,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;17",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 185995700,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 15 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "15",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 91999600,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 15 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "15",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83998900,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 15",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "15",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 536997600,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4996100,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:43.358Z",
        "line": 31,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;18",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 232999600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 16 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "16",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:237)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 16 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_PUT.feature:8)\r\n",
              "duration": 101006200,
              "status": "failed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 16 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "16",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 16",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "16",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 996600,
              "status": "skipped"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3001200,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:43.735Z",
        "line": 32,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;19",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 189000000,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 17 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "17",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 87998500,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 17 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "17",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6001000,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95994800,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 17",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "17",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 480989400,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4997200,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:44.632Z",
        "line": 33,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;20",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 200005000,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 18 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "18",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 92993800,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 18 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "18",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 105999300,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 18",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "18",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 571973200,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1996400,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:45.645Z",
        "line": 34,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;21",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 173004400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 19 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "19",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 80998800,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 19 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "19",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 80996500,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 19",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "19",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 503553600,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3999600,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:46.525Z",
        "line": 35,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;22",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 265000600,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 20 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "20",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 128004200,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 20 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "20",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999100,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 128997200,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 20",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "20",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 539999900,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3001900,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:47.629Z",
        "line": 36,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;23",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 190999300,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 21 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "21",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 105998200,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 21 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "21",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003000,
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99998900,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 21",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "21",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 596997500,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3997100,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:48.682Z",
        "line": 37,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;24",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 232998300,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 22 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "22",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 105001700,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 22 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "22",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100998700,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 22",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "22",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 581000000,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:49.745Z",
        "line": 38,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;25",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 235998400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 23 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "23",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [400] but found [201]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:237)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 23 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_PUT.feature:8)\r\n",
              "duration": 88998900,
              "status": "failed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 23 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "23",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 23",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "23",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4004300,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:50.115Z",
        "line": 39,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;26",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 255998500,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 24 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "24",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 202000700,
              "status": "passed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 24 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "24",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 257996300,
              "status": "passed"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 24",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "24",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1129000400,
              "status": "passed"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 4998900,
              "status": "passed"
            },
            "line": 4,
            "name": "UsersAPI User is on Endpoint: url/Users with valid username and password",
            "match": {
              "location": "step_definition.Users.UsersAPI_user_is_on_endpoint_url_users_with_valid_username_and_password()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-01-28T02:07:52.003Z",
        "line": 40,
        "name": "Validate PUT method for Users",
        "description": "",
        "id": "to-check-the-put-method-for-users;validate-put-method-for-users;;27",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 480997400,
              "status": "passed"
            },
            "line": 7,
            "name": "UsersAPI User sends PUT request on id and request body from \"InputData_Users_PUT\" and 25 with valid JSON schema",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 60
                },
                {
                  "val": "25",
                  "offset": 86
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_sends_put_request_body_from_and(java.lang.String,java.lang.Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected [0] but found [404]\r\n\tat org.testng.Assert.fail(Assert.java:96)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:776)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:137)\r\n\tat org.testng.Assert.assertEquals(Assert.java:118)\r\n\tat org.testng.Assert.assertEquals(Assert.java:652)\r\n\tat org.testng.Assert.assertEquals(Assert.java:662)\r\n\tat LMS.API.HACKATHON2122@0.0.1-SNAPSHOT/step_definition.Users.UsersAPI_user_receives_status_code_with(Users.java:237)\r\n\tat ✽.UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 25 row(file:///C:/@Ruchira/Workspace/LMS_API_HACKATHON2122/src/test/resources/users.feature/Users_PUT.feature:8)\r\n",
              "duration": 181005300,
              "status": "failed"
            },
            "line": 8,
            "name": "UsersAPI User validates StatusCode and StatusMessage from \"InputData_Users_PUT\" sheet and 25 row",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 58
                },
                {
                  "val": "25",
                  "offset": 90
                }
              ],
              "location": "step_definition.Users.UsersAPI_user_receives_status_code_with(java.lang.String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1004300,
              "status": "skipped"
            },
            "line": 9,
            "name": "UsersAPI JSON schema is valid for \"PUT\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 34
                }
              ],
              "location": "step_definition.Users.UsersAPI_json_schema_is_valid_for(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "UsersAPI User should receive a list of user in JSON body with the fields like user_id,name,phone_number,location,time_zone,linkedin_url from \"InputData_Users_PUT\" and 25",
            "match": {
              "arguments": [
                {
                  "val": "\"InputData_Users_PUT\"",
                  "offset": 141
                },
                {
                  "val": "25",
                  "offset": 167
                }
              ],
              "location": "step_definition.Users.user_should_receive_a_list_of_users_in_json_body_with_the_fields_like_user_id_name_phone_number_location_time_zone_linkedin_url_from_and(java.lang.String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "UsersAPI check the Database",
            "match": {
              "location": "step_definition.Users.usersAPI_check_the_database()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "To check The PUT method for Users",
    "description": "",
    "id": "to-check-the-put-method-for-users",
    "keyword": "Feature",
    "uri": "file:src/test/resources/users.feature/Users_PUT.feature",
    "tags": []
  }
]